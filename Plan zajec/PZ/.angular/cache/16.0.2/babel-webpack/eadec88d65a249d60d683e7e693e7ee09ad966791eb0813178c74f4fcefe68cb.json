{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nclass AuthAdminGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (!this.authService.isLoggedIn() || this.authService.currentUser.role != 'admin') {\n      // redirect to some view explaining what happened\n      this.router.navigateByUrl('/');\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\nAuthAdminGuard.ɵfac = function AuthAdminGuard_Factory(t) {\n  return new (t || AuthAdminGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\nAuthAdminGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthAdminGuard,\n  factory: AuthAdminGuard.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthAdminGuard };","map":{"version":3,"names":["AuthAdminGuard","constructor","authService","router","canActivate","route","state","isLoggedIn","currentUser","role","navigateByUrl","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\kacpe\\Desktop\\TAW12\\Aplikacja - plan zajęć\\Plan zajec\\PZ\\src\\app\\services\\authAdmin.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport {AuthService} from \"./auth.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthAdminGuard implements CanActivate {\r\n\r\n  constructor(private authService: AuthService, public router: Router) {\r\n  }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    if (!this.authService.isLoggedIn() || this.authService.currentUser.role != 'admin') {\r\n      // redirect to some view explaining what happened\r\n      this.router.navigateByUrl('/');\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n}\r\n"],"mappings":";;;AAKA,MAGaA,cAAc;EAEzBC,YAAoBC,WAAwB,EAASC,MAAc;IAA/C,KAAAD,WAAW,GAAXA,WAAW;IAAsB,KAAAC,MAAM,GAANA,MAAM;EAC3D;EAEAC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IAC1B,IAAI,CAAC,IAAI,CAACJ,WAAW,CAACK,UAAU,EAAE,IAAI,IAAI,CAACL,WAAW,CAACM,WAAW,CAACC,IAAI,IAAI,OAAO,EAAE;MAClF;MACA,IAAI,CAACN,MAAM,CAACO,aAAa,CAAC,GAAG,CAAC;MAC9B,OAAO,KAAK;KACb,MAAM;MACL,OAAO,IAAI;;EAEf;;AAfWV,cAAc,C;mBAAdA,cAAc,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAAdhB,cAAc,C;SAAdA,cAAc;EAAAiB,OAAA,EAAdjB,cAAc,CAAAkB,IAAA;EAAAC,UAAA,EAFb;AAAM;SAEPnB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}