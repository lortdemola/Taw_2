{"ast":null,"code":"import { FormArray, Validators, AbstractControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction ScheduleFormComponent_tr_2_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const weekday_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", weekday_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(weekday_r5);\n  }\n}\nfunction ScheduleFormComponent_tr_2_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"div\", 16)(2, \"label\", 17);\n    i0.ɵɵtext(3, \"Time:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 18)(5, \"label\", 19);\n    i0.ɵɵtext(6, \"From:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"input\", 20, 21);\n    i0.ɵɵlistener(\"input\", function ScheduleFormComponent_tr_2_div_10_Template_input_input_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const cour_r6 = restoredCtx.$implicit;\n      const _r8 = i0.ɵɵreference(8);\n      const _r9 = i0.ɵɵreference(12);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.formatTimeRange(_r8, _r9, cour_r6));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"label\", 22);\n    i0.ɵɵtext(10, \"To:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"input\", 23, 24);\n    i0.ɵɵlistener(\"input\", function ScheduleFormComponent_tr_2_div_10_Template_input_input_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const cour_r6 = restoredCtx.$implicit;\n      const _r8 = i0.ɵɵreference(8);\n      const _r9 = i0.ɵɵreference(12);\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.formatTimeRange(_r8, _r9, cour_r6));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\");\n    i0.ɵɵtext(14, \"Time Range: \");\n    i0.ɵɵelementStart(15, \"p\", 25);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"label\", 26);\n    i0.ɵɵtext(18, \"Course:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(19, \"input\", 27);\n    i0.ɵɵelementStart(20, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function ScheduleFormComponent_tr_2_div_10_Template_button_click_20_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const i_r7 = restoredCtx.index;\n      const course_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.removeCourse(i_r7, course_r1));\n    });\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const cour_r6 = ctx.$implicit;\n    const i_r7 = ctx.index;\n    const _r8 = i0.ɵɵreference(8);\n    const _r9 = i0.ɵɵreference(12);\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"formGroupName\", i_r7);\n    i0.ɵɵadvance(11);\n    i0.ɵɵpropertyInterpolate(\"min\", _r8.value);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r4.formatTimeRange(_r8, _r9, cour_r6));\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"Remove Course \", i_r7, \"\");\n  }\n}\nfunction ScheduleFormComponent_tr_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 5)(1, \"div\", 6)(2, \"td\")(3, \"label\", 7);\n    i0.ɵɵtext(4, \"dayOfWeek:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"select\", 8);\n    i0.ɵɵtemplate(6, ScheduleFormComponent_tr_2_option_6_Template, 2, 2, \"option\", 9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"td\", 10)(8, \"label\", 11);\n    i0.ɵɵtext(9, \"dayOfWeek:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, ScheduleFormComponent_tr_2_div_10_Template, 22, 4, \"div\", 12);\n    i0.ɵɵelementStart(11, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function ScheduleFormComponent_tr_2_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const course_r1 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.addNewRow(course_r1));\n    });\n    i0.ɵɵtext(12, \"add Course 1\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function ScheduleFormComponent_tr_2_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const x_r2 = restoredCtx.index;\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.removeDay(x_r2));\n    });\n    i0.ɵɵtext(14, \"Remove Day\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const course_r1 = ctx.$implicit;\n    const x_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroupName\", x_r2);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.weekdays);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.former(course_r1).controls);\n  }\n}\nfunction timeRangeValidator() {\n  return control => {\n    const timeRange = control.value;\n    const min = '7';\n    const max = '21';\n    if (!timeRange) {\n      return null; // Empty value, no validation needed\n    }\n    // Regular expression to match the time range format (hh:mm-hh:mm)\n    const timeRangePattern = /^\\d{2}:\\d{2}-\\d{2}:\\d{2}$/;\n    if (!timeRange.match(timeRangePattern)) {\n      return {\n        invalidTimeRange: true\n      }; // Invalid format\n    }\n    // Split the time range into start and end times\n    const [startTime, endTime] = timeRange.split('-');\n    const [startHour, startMinute] = startTime.split(':');\n    const [endHour, endMinute] = endTime.split(':');\n    // Convert the time components to numbers\n    const startHourNum = Number(startHour);\n    const startMinuteNum = Number(startMinute);\n    const endHourNum = Number(endHour);\n    const endMinuteNum = Number(endMinute);\n    // Check if the time components are valid\n    if (isNaN(startHourNum) || isNaN(startMinuteNum) || isNaN(endHourNum) || isNaN(endMinuteNum) || startHourNum < 7 || startHourNum > 21 || startMinuteNum < 0 || startMinuteNum > 59 || endHourNum < startHourNum || endHourNum > 21 || endMinuteNum < startMinuteNum || endMinuteNum > 59) {\n      return {\n        invalidTimeRange: true\n      }; // Invalid time components\n    }\n    // Check if the start time is earlier than the end time\n    if (startHourNum > endHourNum || startHourNum === endHourNum && startMinuteNum >= endMinuteNum) {\n      return {\n        invalidTimeRange: true\n      }; // Start time is later or equal to end time\n    }\n\n    return null; // Valid time range\n  };\n}\n\nclass ScheduleFormComponent {\n  formatTimeRange(timeF, timeT, Course) {\n    const timeFrom = timeF.value;\n    const timeTo = timeT.value;\n    Course.get('time')?.setValue((timeFrom + \"-\" + timeTo).toString());\n    return `${timeFrom} - ${timeTo}`;\n  }\n  constructor(authService, formBuilder) {\n    this.authService = authService;\n    this.formBuilder = formBuilder;\n    this.weekdays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    this.FormArray = FormArray;\n    this.AbstractControl = AbstractControl;\n    this.createContactForm();\n  }\n  createContactForm() {\n    this.scheduleForm = this.formBuilder.group({\n      owner: ['', Validators.required],\n      scheduleEntries: this.formBuilder.array([this.createScheduleEntryFormGroup()])\n    });\n    this.scheduleForm.get('owner')?.setValue(this.authService.currentUser.userId);\n  }\n  createScheduleEntryFormGroup() {\n    return this.formBuilder.group({\n      dayOfWeek: ['', Validators.required],\n      courses: this.formBuilder.array([this.createCourseFormGroup()])\n    });\n  }\n  createCourseFormGroup() {\n    return this.formBuilder.group({\n      time: ['', [Validators.required, timeRangeValidator()]],\n      course: ['', [Validators.required, Validators.minLength(2)]]\n    });\n  }\n  get formArr() {\n    return this.formArr2.at(0).get('courses');\n  }\n  get formArr2() {\n    return this.scheduleForm.get('scheduleEntries');\n  }\n  former(x) {\n    return x.get('courses');\n  }\n  addRow({\n    obj\n  }) {\n    return this.formBuilder.group({\n      time: [obj.time, [Validators.required, timeRangeValidator()]],\n      course: [obj.course, [Validators.required, timeRangeValidator()]]\n    });\n  }\n  addCol() {\n    return this.formBuilder.group({\n      dayOfWeek: ['', Validators.required],\n      courses: this.formBuilder.array([this.createCourseFormGroup()])\n    });\n  }\n  addNewRow(t) {\n    let obj1 = {\n      time: '',\n      course: ''\n    };\n    t.get('courses').push(this.addRow({\n      obj: obj1\n    }));\n  }\n  addNewCol() {\n    let obj1 = {\n      time: '',\n      course: ''\n    };\n    if (this.formArr2.length < 6) {\n      this.formArr2.push(this.addCol());\n    }\n    return 0;\n  }\n  ngOnInit() {}\n  addCourse() {\n    const coursesArray = this.scheduleForm.get('courses');\n    coursesArray.push(this.createCourseFormGroup());\n  }\n  removeCourse(index, t) {\n    const coursesArray = t.get('courses');\n    coursesArray.removeAt(index);\n  }\n  removeDay(index) {\n    const coursesArray = this.formArr2;\n    coursesArray.removeAt(index);\n  }\n  submitSchedule() {\n    if (this.scheduleForm.valid) {\n      console.log(\"ok\");\n      // Send the form data to your backend API for saving to the database\n      // You can use Angular's HttpClient to make the API request\n    } else {\n      console.log(\"!ok\");\n    }\n  }\n}\nScheduleFormComponent.ɵfac = function ScheduleFormComponent_Factory(t) {\n  return new (t || ScheduleFormComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nScheduleFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ScheduleFormComponent,\n  selectors: [[\"app-schedule-form\"]],\n  decls: 10,\n  vars: 3,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"formArrayName\", \"scheduleEntries\", 1, \"row\"], [\"class\", \"column\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-dark\", 3, \"click\"], [\"type\", \"submit\"], [1, \"column\", 3, \"formGroupName\"], [1, \"m-1\"], [\"for\", \"dayOfWeek\"], [\"id\", \"dayOfWeek\", \"formControlName\", \"dayOfWeek\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formArrayName\", \"courses\", 1, \"each\"], [\"for\", \"2222\"], [\"class\", \"each2\", \"id\", \"2222\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 3, \"click\"], [3, \"value\"], [\"id\", \"2222\", 1, \"each2\", 3, \"formGroupName\"], [1, \"doc\"], [\"for\", \"times\"], [\"id\", \"times\"], [\"for\", \"timefrom\"], [\"type\", \"time\", \"id\", \"timefrom\", \"min\", \"07:00\", \"max\", \"21:00\", \"required\", \"\", 3, \"input\"], [\"timefromInput\", \"\"], [\"for\", \"timeto\"], [\"type\", \"time\", \"id\", \"timeto\", \"max\", \"21:00\", \"required\", \"\", 3, \"min\", \"input\"], [\"timetoInput\", \"\"], [\"id\", \"time\"], [\"for\", \"course\"], [\"type\", \"text\", \"id\", \"course\", \"formControlName\", \"course\"]],\n  template: function ScheduleFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function ScheduleFormComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.submitSchedule();\n      });\n      i0.ɵɵelementStart(1, \"tbody\", 1);\n      i0.ɵɵtemplate(2, ScheduleFormComponent_tr_2_Template, 15, 3, \"tr\", 2);\n      i0.ɵɵelement(3, \"tr\");\n      i0.ɵɵelementStart(4, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function ScheduleFormComponent_Template_button_click_4_listener() {\n        return ctx.addNewCol();\n      });\n      i0.ɵɵtext(5, \"add Day\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 4);\n      i0.ɵɵtext(7, \"Submit\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"pre\");\n      i0.ɵɵtext(9);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.scheduleForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.formArr2.controls);\n      i0.ɵɵadvance(7);\n      i0.ɵɵtextInterpolate(ctx.formArr2.length);\n    }\n  },\n  dependencies: [i3.NgForOf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i2.FormGroupName, i2.FormArrayName],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 940:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\nSyntaxError\\\\n\\\\n(28:3) C:\\\\\\\\Users\\\\\\\\kacpe\\\\\\\\Desktop\\\\\\\\TAW12\\\\\\\\Aplikacja - plan zaj\\u0119\\u0107\\\\\\\\Plan zajec\\\\\\\\PZ\\\\\\\\src\\\\\\\\app\\\\\\\\components\\\\\\\\schedule-form\\\\\\\\schedule-form.component.css Unknown word\\\\n\\\\n \\\\u001b[90m 26 | \\\\u001b[39m  border\\\\u001b[33m:\\\\u001b[39m 2px solid \\\\u001b[35m#000000\\\\u001b[39m\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m 27 | \\\\u001b[39m  scroll-behavior\\\\u001b[33m:\\\\u001b[39m smooth\\\\u001b[33m;\\\\u001b[39m\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 28 | \\\\u001b[39m  scroll\\\\n \\\\u001b[90m    | \\\\u001b[39m  \\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 29 | \\\\u001b[39m\\\\u001b[33m}\\\\u001b[39m\\\\n \\\\u001b[90m 30 | \\\\u001b[39mtd \\\\u001b[33m{\\\\u001b[39m\\\\n\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[940]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\\n/*# sourceMappingURL=schedule-form.component.css.map*/\"]\n});\nexport { ScheduleFormComponent };","map":{"version":3,"names":["FormArray","Validators","AbstractControl","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","weekday_r5","ɵɵadvance","ɵɵtextInterpolate","ɵɵlistener","ScheduleFormComponent_tr_2_div_10_Template_input_input_7_listener","restoredCtx","ɵɵrestoreView","_r11","cour_r6","$implicit","_r8","ɵɵreference","_r9","ctx_r10","ɵɵnextContext","ɵɵresetView","formatTimeRange","ScheduleFormComponent_tr_2_div_10_Template_input_input_11_listener","ctx_r12","ɵɵelement","ScheduleFormComponent_tr_2_div_10_Template_button_click_20_listener","i_r7","index","course_r1","ctx_r13","removeCourse","ɵɵpropertyInterpolate","value","ctx_r4","ɵɵtextInterpolate1","ɵɵtemplate","ScheduleFormComponent_tr_2_option_6_Template","ScheduleFormComponent_tr_2_div_10_Template","ScheduleFormComponent_tr_2_Template_button_click_11_listener","_r16","ctx_r15","addNewRow","ScheduleFormComponent_tr_2_Template_button_click_13_listener","x_r2","ctx_r17","removeDay","ctx_r0","weekdays","former","controls","timeRangeValidator","control","timeRange","min","max","timeRangePattern","match","invalidTimeRange","startTime","endTime","split","startHour","startMinute","endHour","endMinute","startHourNum","Number","startMinuteNum","endHourNum","endMinuteNum","isNaN","ScheduleFormComponent","timeF","timeT","Course","timeFrom","timeTo","get","setValue","toString","constructor","authService","formBuilder","createContactForm","scheduleForm","group","owner","required","scheduleEntries","array","createScheduleEntryFormGroup","currentUser","userId","dayOfWeek","courses","createCourseFormGroup","time","course","minLength","formArr","formArr2","at","x","addRow","obj","addCol","t","obj1","push","addNewCol","length","ngOnInit","addCourse","coursesArray","removeAt","submitSchedule","valid","console","log","ɵɵdirectiveInject","i1","AuthService","i2","FormBuilder","selectors","decls","vars","consts","template","ScheduleFormComponent_Template","rf","ctx","ScheduleFormComponent_Template_form_ngSubmit_0_listener","ScheduleFormComponent_tr_2_Template","ScheduleFormComponent_Template_button_click_4_listener"],"sources":["C:\\Users\\kacpe\\Desktop\\TAW12\\Aplikacja - plan zajęć\\Plan zajec\\PZ\\src\\app\\components\\schedule-form\\schedule-form.component.ts","C:\\Users\\kacpe\\Desktop\\TAW12\\Aplikacja - plan zajęć\\Plan zajec\\PZ\\src\\app\\components\\schedule-form\\schedule-form.component.html"],"sourcesContent":["import {Component, Input, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, FormArray, Validators, AbstractControl} from '@angular/forms';\nimport { ValidatorFn } from '@angular/forms';\nimport {AuthService} from \"../../services/auth.service\";\n\nfunction timeRangeValidator(): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    const timeRange = control.value;\n    const min = '7';\n    const max = '21';\n    if (!timeRange) {\n      return null; // Empty value, no validation needed\n    }\n\n    // Regular expression to match the time range format (hh:mm-hh:mm)\n    const timeRangePattern = /^\\d{2}:\\d{2}-\\d{2}:\\d{2}$/;\n\n    if (!timeRange.match(timeRangePattern)) {\n      return { invalidTimeRange: true }; // Invalid format\n    }\n\n    // Split the time range into start and end times\n    const [startTime, endTime] = timeRange.split('-');\n    const [startHour, startMinute] = startTime.split(':');\n    const [endHour, endMinute] = endTime.split(':');\n\n    // Convert the time components to numbers\n    const startHourNum = Number(startHour);\n    const startMinuteNum = Number(startMinute);\n    const endHourNum = Number(endHour);\n    const endMinuteNum = Number(endMinute);\n\n    // Check if the time components are valid\n    if (\n      isNaN(startHourNum) || isNaN(startMinuteNum) ||\n      isNaN(endHourNum) || isNaN(endMinuteNum) ||\n      startHourNum < 7 || startHourNum > 21 || startMinuteNum < 0 || startMinuteNum > 59 ||\n      endHourNum < startHourNum || endHourNum > 21 || endMinuteNum < startMinuteNum || endMinuteNum > 59\n    ) {\n      return { invalidTimeRange: true }; // Invalid time components\n    }\n\n    // Check if the start time is earlier than the end time\n    if (startHourNum > endHourNum || (startHourNum === endHourNum && startMinuteNum >= endMinuteNum)) {\n      return { invalidTimeRange: true }; // Start time is later or equal to end time\n    }\n\n    return null; // Valid time range\n  };\n}\n\n@Component({\n  selector: 'app-schedule-form',\n  templateUrl: './schedule-form.component.html',\n  styleUrls: ['./schedule-form.component.css']\n})\nexport class ScheduleFormComponent  implements OnInit {\n\n  scheduleForm!: FormGroup;\n  weekdays: string[] = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  formatTimeRange(timeF: HTMLInputElement,timeT: HTMLInputElement,Course: any): string {\n    const timeFrom = timeF.value;\n    const timeTo = timeT.value;\n    Course.get('time')?.setValue((timeFrom+\"-\"+timeTo).toString());\n    return `${timeFrom} - ${timeTo}`;\n  }\n  constructor(public authService: AuthService,private formBuilder: FormBuilder) {\n    this.createContactForm();\n  }\n  createContactForm() {\n    this.scheduleForm = this.formBuilder.group({\n      owner: ['', Validators.required],\n      scheduleEntries: this.formBuilder.array([this.createScheduleEntryFormGroup()])\n    });\n    this.scheduleForm.get('owner')?.setValue(this.authService.currentUser.userId);\n  }\n  createScheduleEntryFormGroup(): FormGroup {\n    return this.formBuilder.group({\n      dayOfWeek: ['', Validators.required],\n      courses: this.formBuilder.array([this.createCourseFormGroup()])\n    });\n  }\n  createCourseFormGroup(): FormGroup {\n    return this.formBuilder.group({\n      time: ['',[Validators.required,timeRangeValidator()]],\n      course: ['',[Validators.required,Validators.minLength(2)]]\n    });\n  }\n  get formArr() {\n    return this.formArr2.at(0).get('courses') as FormArray;\n  }\n\n  get formArr2() {\n    return this.scheduleForm.get('scheduleEntries') as FormArray;\n  }\n\n   former(x: AbstractControl) {\n    return x.get('courses') as FormArray;\n  }\n  addRow({obj}: { obj: any }) {\n    return this.formBuilder.group({\n      time: [obj.time,[Validators.required,timeRangeValidator()]],\n      course: [obj.course,[Validators.required,timeRangeValidator()]],\n    });\n  }\n  addCol() {\n\n      return this.formBuilder.group({\n        dayOfWeek: ['', Validators.required],\n        courses: this.formBuilder.array([this.createCourseFormGroup()])\n      });\n\n  }\n  addNewRow(t : any) {\n    let obj1 = {\n      time: '',\n      course: '',\n    };\n    t.get('courses').push(this.addRow({obj: obj1}));\n\n\n  }\n  addNewCol() {\n    let obj1 = {\n      time: '',\n      course: '',\n    };\n    if(this.formArr2.length <6){\n    this.formArr2.push(this.addCol());\n\n    }\n    return 0;\n  }\n  ngOnInit(): void {\n  }\n\n\n  addCourse(): void {\n    const coursesArray = this.scheduleForm.get('courses') as FormArray;\n    coursesArray.push(this.createCourseFormGroup());\n  }\n\n  removeCourse(index: number,t : any): void {\n    const coursesArray = t.get('courses') as FormArray;\n    coursesArray.removeAt(index);\n  }\n  removeDay(index: number): void {\n    const coursesArray = this.formArr2 as FormArray;\n    coursesArray.removeAt(index);\n  }\n  submitSchedule(): void {\n    if (this.scheduleForm.valid) {\n\n        console.log(\"ok\");\n           // Send the form data to your backend API for saving to the database\n      // You can use Angular's HttpClient to make the API request\n    }else{\n      console.log(\"!ok\");\n    }\n  }\n\n  protected readonly FormArray = FormArray;\n  protected readonly AbstractControl = AbstractControl;\n}\n","<form [formGroup]=\"scheduleForm\" (ngSubmit)=\"submitSchedule()\">\n\n  <tbody class=\"row\" formArrayName=\"scheduleEntries\">\n  <tr class=\"column\" *ngFor=\"let course of formArr2.controls; let x = index;\" [formGroupName]=\"x\">\n    <div class=\"m-1 \">\n    <td>\n      <label for=\"dayOfWeek\">dayOfWeek:</label>\n      <select id=\"dayOfWeek\" formControlName=\"dayOfWeek\">\n        <option *ngFor=\"let weekday of weekdays\" [value]=\"weekday\">{{ weekday }}</option>\n      </select>\n    </td>\n    <td class=\"each\" formArrayName=\"courses\">\n      <label for=\"2222\">dayOfWeek:</label>\n        <div class=\"each2\" id=\"2222\" *ngFor=\"let cour of former(course).controls ; let i = index;\" [formGroupName]=\"i\">\n          <div class=\"doc\">\n            <label for=\"times\">Time:</label>\n          <div id=\"times\">\n            <label for=\"timefrom\">From:</label>\n            <input type=\"time\" id=\"timefrom\" #timefromInput (input)=\"formatTimeRange(timefromInput,timetoInput,cour);\" min=\"07:00\" max=\"21:00\" required />\n            <label for=\"timeto\">To:</label>\n            <input type=\"time\" id=\"timeto\" #timetoInput (input)=\"formatTimeRange(timefromInput,timetoInput,cour); \" min=\"{{timefromInput.value}}\" max=\"21:00\" required />\n\n\n          </div>\n\n          <div>Time Range: <p id=\"time\" >{{ formatTimeRange(timefromInput,timetoInput,cour) }}</p></div>\n            <label for=\"course\">Course:</label>\n            <input type=\"text\" id=\"course\" formControlName=\"course\" />\n\n          <button type=\"button\" (click)=\"removeCourse(i,course)\">Remove Course {{i}}</button>\n\n\n\n        </div></div>\n      <button type=\"button\" (click)=\"addNewRow(course)\" class=\"btn btn-dark\">add Course 1</button>\n      <button type=\"button\" (click)=\"removeDay(x)\">Remove Day</button>\n    </td>\n\n\n      </div>\n  </tr>\n  <tr>\n\n  </tr>\n  <button type=\"button\" (click)=\"addNewCol()\" class=\"btn btn-dark\">add Day</button>\n  <button type=\"submit\">Submit</button>\n  </tbody>\n\n\n  <pre>{{ formArr2.length }}</pre>\n\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}