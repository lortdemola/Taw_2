{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet TeamsComponent = class TeamsComponent {\n  constructor(authService, dataService) {\n    this.authService = authService;\n    this.dataService = dataService;\n    this.teams = [];\n    this.newTeamData = {\n      name: ''\n    }; // Data for creating a new team\n    this.editTeamData = {}; // Data for editing a team\n    this.selectedTeamId = null; // Store the ID of the selected team for editing\n  } // Inject DataService\n  ngOnInit() {\n    this.loadTeams();\n  }\n  loadTeams() {\n    this.dataService.getTeamsByUserId(this.authService.currentUser.userId).subscribe(data => {\n      this.teams = data;\n    });\n  }\n  createTeam() {\n    this.dataService.createTeam(this.newTeamData).subscribe(() => {\n      this.loadTeams(); // Reload the list of teams after creating one\n      this.newTeamData = {\n        name: ''\n      };\n    });\n  }\n  editTeam(id) {\n    this.selectedTeamId = id;\n    this.dataService.getTeamById(id).subscribe(data => {\n      this.editTeamData = data;\n    });\n  }\n  updateTeam() {\n    if (this.selectedTeamId) {\n      this.dataService.updateTeam(this.selectedTeamId, this.editTeamData).subscribe(() => {\n        this.loadTeams(); // Reload the list of teams after updating one\n        this.editTeamData = {}; // Clear the form\n        this.selectedTeamId = null; // Reset the selected team\n      });\n    }\n  }\n\n  deleteTeam(id) {\n    this.dataService.deleteTeam(id).subscribe(() => {\n      this.loadTeams(); // Reload the list of teams after deleting one\n    });\n  }\n  // Add more methods for adding/removing members or other functionality\n  cancelEdit() {\n    this.editTeamData = {}; // Clear the form\n    this.selectedTeamId = null; // Reset the selected team\n  }\n};\n\nTeamsComponent = __decorate([Component({\n  selector: 'app-teams',\n  templateUrl: './teams.component.html',\n  styleUrls: ['./teams.component.css']\n})], TeamsComponent);\nexport { TeamsComponent };","map":{"version":3,"names":["Component","TeamsComponent","constructor","authService","dataService","teams","newTeamData","name","editTeamData","selectedTeamId","ngOnInit","loadTeams","getTeamsByUserId","currentUser","userId","subscribe","data","createTeam","editTeam","id","getTeamById","updateTeam","deleteTeam","cancelEdit","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\kacpe\\Desktop\\TAW12\\Aplikacja - plan zajęć\\Plan zajec\\PZ\\src\\app\\components\\teams\\teams.component.ts"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {DataService} from \"../../services/data.service\";\nimport {AuthService} from \"../../services/auth.service\";\n\n\n@Component({\n  selector: 'app-teams',\n  templateUrl: './teams.component.html',\n  styleUrls: ['./teams.component.css']\n})\nexport class TeamsComponent implements OnInit {\n  teams: any[] = [];\n  newTeamData = {name:''}; // Data for creating a new team\n  editTeamData: any = {}; // Data for editing a team\n  selectedTeamId: string | null = null; // Store the ID of the selected team for editing\n\n  constructor(public authService: AuthService,private dataService: DataService) {} // Inject DataService\n\n  ngOnInit() {\n    this.loadTeams();\n  }\n\n  loadTeams() {\n    this.dataService.getTeamsByUserId(this.authService.currentUser.userId).subscribe((data: any) => {\n      this.teams = data;\n    });\n  }\n\n  createTeam() {\n    this.dataService.createTeam(this.newTeamData).subscribe(() => {\n      this.loadTeams(); // Reload the list of teams after creating one\n      this.newTeamData = {name:''};\n    });\n  }\n\n  editTeam(id: string) {\n    this.selectedTeamId = id;\n    this.dataService.getTeamById(id).subscribe((data: any) => {\n      this.editTeamData = data;\n    });\n  }\n\n  updateTeam() {\n    if (this.selectedTeamId) {\n      this.dataService.updateTeam(this.selectedTeamId, this.editTeamData).subscribe(() => {\n        this.loadTeams(); // Reload the list of teams after updating one\n        this.editTeamData = {}; // Clear the form\n        this.selectedTeamId = null; // Reset the selected team\n      });\n    }\n  }\n\n  deleteTeam(id: string) {\n    this.dataService.deleteTeam(id).subscribe(() => {\n      this.loadTeams(); // Reload the list of teams after deleting one\n    });\n  }\n\n  // Add more methods for adding/removing members or other functionality\n\n  cancelEdit() {\n    this.editTeamData = {}; // Clear the form\n    this.selectedTeamId = null; // Reset the selected team\n  }\n}\n"],"mappings":";AAAA,SAAQA,SAAS,QAAe,eAAe;AAU/C,IAAaC,cAAc,GAA3B,MAAaA,cAAc;EAMzBC,YAAmBC,WAAwB,EAASC,WAAwB;IAAzD,KAAAD,WAAW,GAAXA,WAAW;IAAsB,KAAAC,WAAW,GAAXA,WAAW;IAL/D,KAAAC,KAAK,GAAU,EAAE;IACjB,KAAAC,WAAW,GAAG;MAACC,IAAI,EAAC;IAAE,CAAC,CAAC,CAAC;IACzB,KAAAC,YAAY,GAAQ,EAAE,CAAC,CAAC;IACxB,KAAAC,cAAc,GAAkB,IAAI,CAAC,CAAC;EAEyC,CAAC,CAAC;EAEjFC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAA,SAASA,CAAA;IACP,IAAI,CAACP,WAAW,CAACQ,gBAAgB,CAAC,IAAI,CAACT,WAAW,CAACU,WAAW,CAACC,MAAM,CAAC,CAACC,SAAS,CAAEC,IAAS,IAAI;MAC7F,IAAI,CAACX,KAAK,GAAGW,IAAI;IACnB,CAAC,CAAC;EACJ;EAEAC,UAAUA,CAAA;IACR,IAAI,CAACb,WAAW,CAACa,UAAU,CAAC,IAAI,CAACX,WAAW,CAAC,CAACS,SAAS,CAAC,MAAK;MAC3D,IAAI,CAACJ,SAAS,EAAE,CAAC,CAAC;MAClB,IAAI,CAACL,WAAW,GAAG;QAACC,IAAI,EAAC;MAAE,CAAC;IAC9B,CAAC,CAAC;EACJ;EAEAW,QAAQA,CAACC,EAAU;IACjB,IAAI,CAACV,cAAc,GAAGU,EAAE;IACxB,IAAI,CAACf,WAAW,CAACgB,WAAW,CAACD,EAAE,CAAC,CAACJ,SAAS,CAAEC,IAAS,IAAI;MACvD,IAAI,CAACR,YAAY,GAAGQ,IAAI;IAC1B,CAAC,CAAC;EACJ;EAEAK,UAAUA,CAAA;IACR,IAAI,IAAI,CAACZ,cAAc,EAAE;MACvB,IAAI,CAACL,WAAW,CAACiB,UAAU,CAAC,IAAI,CAACZ,cAAc,EAAE,IAAI,CAACD,YAAY,CAAC,CAACO,SAAS,CAAC,MAAK;QACjF,IAAI,CAACJ,SAAS,EAAE,CAAC,CAAC;QAClB,IAAI,CAACH,YAAY,GAAG,EAAE,CAAC,CAAC;QACxB,IAAI,CAACC,cAAc,GAAG,IAAI,CAAC,CAAC;MAC9B,CAAC,CAAC;;EAEN;;EAEAa,UAAUA,CAACH,EAAU;IACnB,IAAI,CAACf,WAAW,CAACkB,UAAU,CAACH,EAAE,CAAC,CAACJ,SAAS,CAAC,MAAK;MAC7C,IAAI,CAACJ,SAAS,EAAE,CAAC,CAAC;IACpB,CAAC,CAAC;EACJ;EAEA;EAEAY,UAAUA,CAAA;IACR,IAAI,CAACf,YAAY,GAAG,EAAE,CAAC,CAAC;IACxB,IAAI,CAACC,cAAc,GAAG,IAAI,CAAC,CAAC;EAC9B;CACD;;AAtDYR,cAAc,GAAAuB,UAAA,EAL1BxB,SAAS,CAAC;EACTyB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACW1B,cAAc,CAsD1B;SAtDYA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}