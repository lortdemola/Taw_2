{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nclass AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (!this.authService.isLoggedIn()) {\n      // redirect to some view explaining what happened\n      this.router.navigateByUrl('/');\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthGuard };","map":{"version":3,"names":["AuthGuard","constructor","authService","router","canActivate","route","state","isLoggedIn","navigateByUrl","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["E:\\Taw\\blog11\\blog\\blog\\src\\app\\services\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthService} from \"./auth.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService, public router: Router) {\n  }\n\n  canActivate(\n      route: ActivatedRouteSnapshot,\n      state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (!this.authService.isLoggedIn()) {\n      // redirect to some view explaining what happened\n      this.router.navigateByUrl('/');\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n}\n"],"mappings":";;;AAKA,MAGaA,SAAS;EAEpBC,YAAoBC,WAAwB,EAASC,MAAc;IAA/C,KAAAD,WAAW,GAAXA,WAAW;IAAsB,KAAAC,MAAM,GAANA,MAAM;EAC3D;EAEAC,WAAWA,CACPC,KAA6B,EAC7BC,KAA0B;IAC5B,IAAI,CAAC,IAAI,CAACJ,WAAW,CAACK,UAAU,EAAE,EAAE;MAClC;MACA,IAAI,CAACJ,MAAM,CAACK,aAAa,CAAC,GAAG,CAAC;MAC9B,OAAO,KAAK;KACb,MAAM;MACL,OAAO,IAAI;;EAEf;;AAfWR,SAAS,C;mBAATA,SAAS,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAATd,SAAS,C;SAATA,SAAS;EAAAe,OAAA,EAATf,SAAS,CAAAgB,IAAA;EAAAC,UAAA,EAFR;AAAM;SAEPjB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}