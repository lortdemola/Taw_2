{"ast":null,"code":"import { FormArray, AbstractControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"../../services/data.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/router\";\nconst _c0 = function (a1) {\n  return [\"/ScheduleEdit/\", a1];\n};\nfunction ScheduleAdminComponent_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 1);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 2);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"button\", 3);\n    i0.ɵɵtext(7, \"edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 4);\n    i0.ɵɵtext(9, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const course_r1 = ctx.$implicit;\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"User: \", (tmp_0_0 = course_r1.get(\"name\")) == null ? null : tmp_0_0.value, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Schedules: \", (tmp_1_0 = course_r1.get(\"scheduleData\")) == null ? null : tmp_1_0.value, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(3, _c0, (tmp_2_0 = course_r1.get(\"id\")) == null ? null : tmp_2_0.value));\n  }\n}\nclass ScheduleAdminComponent {\n  formatTimeRange(timeF, timeT, Course) {\n    const timeFrom = timeF.value;\n    const timeTo = timeT.value;\n    return `${timeFrom} - ${timeTo}`;\n  }\n  constructor(authService, dataService, formBuilder) {\n    this.authService = authService;\n    this.dataService = dataService;\n    this.formBuilder = formBuilder;\n    this.hmm3 = this.formBuilder.group({});\n    this.weekdays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    this.FormArray = FormArray;\n    this.AbstractControl = AbstractControl;\n    this.createContactForm();\n    this.loadSchedule();\n  }\n  ngOnInit() {}\n  createContactForm() {\n    this.scheduleList = this.formBuilder.group({\n      usersSchedule: this.formBuilder.array([])\n    });\n  }\n  get formArr2() {\n    return this.scheduleList.get('usersSchedule');\n  }\n  deleteSchedule(id) {\n    this.dataService.deleteSchedule(id).subscribe(() => {\n      console.log(\"deleted\");\n    });\n  }\n  loadSchedule() {\n    this.dataService.getAllSchedules().subscribe(data => {\n      let temp = data;\n      let temp2;\n      for (const datum of temp) {\n        this.authService.getUserById(datum['owner']).subscribe(data2 => {\n          let schedule = '';\n          temp2 = data2;\n          for (const sss of datum['scheduleEntries']) {\n            schedule += sss['dayOfWeek'] + ' ,Courses Amount: ' + sss['courses'].length + '  |  ';\n          }\n          this.formArr2.push(this.formBuilder.group({\n            name: [temp2['name']],\n            scheduleData: [schedule],\n            id: [datum['id']]\n          }));\n        });\n      }\n    });\n  }\n  submitSchedule() {\n    if (this.scheduleList.valid) {\n      console.log(\"ok\");\n      // Send the form data to your backend API for saving to the database\n      // You can use Angular's HttpClient to make the API request\n      this.dataService.createSchedule(this.scheduleList.value).subscribe(() => {\n        console.log(\"created\");\n      });\n    } else {\n      console.log(\"!ok\");\n    }\n  }\n}\nScheduleAdminComponent.ɵfac = function ScheduleAdminComponent_Factory(t) {\n  return new (t || ScheduleAdminComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.DataService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nScheduleAdminComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ScheduleAdminComponent,\n  selectors: [[\"app-schedule-admin\"]],\n  decls: 5,\n  vars: 4,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [\"id\", \"timeFrom\"], [\"id\", \"timeTo\"], [\"href\", \"#\", 3, \"routerLink\"], [1, \"btn\", \"btn-dark\", \"buttons\"]],\n  template: function ScheduleAdminComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\");\n      i0.ɵɵtemplate(1, ScheduleAdminComponent_tr_1_Template, 10, 5, \"tr\", 0);\n      i0.ɵɵelementStart(2, \"pre\");\n      i0.ɵɵtext(3);\n      i0.ɵɵpipe(4, \"json\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.formArr2.controls);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 2, ctx.formArr2.value));\n    }\n  },\n  dependencies: [i4.NgForOf, i5.RouterLink, i4.JsonPipe],\n  styles: [\"table[_ngcontent-%COMP%], td[_ngcontent-%COMP%], th[_ngcontent-%COMP%] {\\r\\n  border: 1px solid;\\r\\n  padding: 5px;\\r\\n}\\r\\n\\r\\ntable[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  border-collapse: collapse;\\r\\n  color: whitesmoke;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9zY2hlZHVsZS1hZG1pbi9zY2hlZHVsZS1hZG1pbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQWlCO0VBQ2pCLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFdBQVc7RUFDWCx5QkFBeUI7RUFDekIsaUJBQWlCO0FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUsIHRkLCB0aCB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQ7XHJcbiAgcGFkZGluZzogNXB4O1xyXG59XHJcblxyXG50YWJsZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICBjb2xvcjogd2hpdGVzbW9rZTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nexport { ScheduleAdminComponent };","map":{"version":3,"names":["FormArray","AbstractControl","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","tmp_0_0","course_r1","get","value","tmp_1_0","ɵɵproperty","ɵɵpureFunction1","_c0","tmp_2_0","ScheduleAdminComponent","formatTimeRange","timeF","timeT","Course","timeFrom","timeTo","constructor","authService","dataService","formBuilder","hmm3","group","weekdays","createContactForm","loadSchedule","ngOnInit","scheduleList","usersSchedule","array","formArr2","deleteSchedule","id","subscribe","console","log","getAllSchedules","data","temp","temp2","datum","getUserById","data2","schedule","sss","length","push","name","scheduleData","submitSchedule","valid","createSchedule","ɵɵdirectiveInject","i1","AuthService","i2","DataService","i3","FormBuilder","selectors","decls","vars","consts","template","ScheduleAdminComponent_Template","rf","ctx","ɵɵtemplate","ScheduleAdminComponent_tr_1_Template","controls","ɵɵtextInterpolate","ɵɵpipeBind1"],"sources":["C:\\Users\\kacpe\\Desktop\\TAW12\\Aplikacja - plan zajęć\\Plan zajec\\PZ\\src\\app\\components\\schedule-admin\\schedule-admin.component.ts","C:\\Users\\kacpe\\Desktop\\TAW12\\Aplikacja - plan zajęć\\Plan zajec\\PZ\\src\\app\\components\\schedule-admin\\schedule-admin.component.html"],"sourcesContent":["import {Component, Input, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, FormArray, Validators, AbstractControl} from '@angular/forms';\nimport { ValidatorFn } from '@angular/forms';\nimport {AuthService} from \"../../services/auth.service\";\nimport {DataService} from \"../../services/data.service\";\n\n\n\n\n@Component({\n  selector: 'app-schedule-admin',\n  templateUrl: './schedule-admin.component.html',\n  styleUrls: ['./schedule-admin.component.css']\n})\nexport class ScheduleAdminComponent implements OnInit {\n  hmm!: any ;\n  hmm2!: any ;\n  hmm3: FormGroup = this.formBuilder.group({});\n  scheduleList!: FormGroup;\n  weekdays: string[] = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  formatTimeRange(timeF: HTMLInputElement,timeT: HTMLInputElement,Course: any): string {\n    const timeFrom = timeF.value;\n    const timeTo = timeT.value;\n    return `${timeFrom} - ${timeTo}`;\n  }\n  constructor(public authService: AuthService,private dataService: DataService,private formBuilder: FormBuilder) {\n    this.createContactForm();\n    this.loadSchedule();\n  }\n  ngOnInit(): void {\n  }\n\n  createContactForm() {\n    this.scheduleList = this.formBuilder.group({\n      usersSchedule: this.formBuilder.array([])\n    });\n  }\n\n\n\n  get formArr2() {\n    return this.scheduleList.get('usersSchedule') as FormArray;\n  }\n  deleteSchedule(id:string){\n    this.dataService.deleteSchedule(id).subscribe(()=>\n    {\n      console.log(\"deleted\");\n    });\n  }\n  loadSchedule() {\n    this.dataService.getAllSchedules().subscribe(data => {\n\n      let temp:any = data as JSON;\n      let temp2:any;\n\n      for (const datum of temp) {\n\n        this.authService.getUserById(datum['owner']).subscribe(data2=>\n        {\n          let schedule: string = '';\n          temp2=data2 as JSON;\n\n          for (const sss of datum['scheduleEntries']) {\n\n            schedule += sss['dayOfWeek']+' ,Courses Amount: '+sss['courses'].length+'  |  ';\n\n          }\n          this.formArr2.push(this.formBuilder.group({\n            name: [temp2['name']],\n            scheduleData: [schedule],\n            id:[datum['id']]\n          }));\n\n\n        });\n      }\n\n\n\n\n\n\n\n\n    });\n  }\n  submitSchedule(): void {\n    if (this.scheduleList.valid) {\n\n      console.log(\"ok\");\n      // Send the form data to your backend API for saving to the database\n      // You can use Angular's HttpClient to make the API request\n      this.dataService.createSchedule(this.scheduleList.value).subscribe(()=>\n      {\n        console.log(\"created\");\n      });\n    }else{\n      console.log(\"!ok\");\n    }\n  }\n\n  protected readonly FormArray = FormArray;\n  protected readonly AbstractControl = AbstractControl;\n\n}\n","<table>\n  <tr  *ngFor=\"let course of formArr2.controls; let x = index;\" >\n    <th  id=\"timeFrom\"  >User: {{course.get('name')?.value}}</th>\n    <td id=\"timeTo\"  >Schedules: {{course.get('scheduleData')?.value}}</td>\n    <td>\n     <button href=\"#\" [routerLink]=\"['/ScheduleEdit/',course.get('id')?.value]\">edit</button>\n      <button class=\"btn btn-dark buttons\">Delete</button>\n    </td>\n  </tr>\n  <pre>{{formArr2.value | json}}</pre>\n</table>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}