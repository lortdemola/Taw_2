{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass PriceSortPipePipe {\n  transform(items, sortDescending = true) {\n    if (!items || items.length <= 1) {\n      return items;\n    }\n    const sortOrder = sortDescending ? -1 : 1;\n    return items.sort((a, b) => (a.price - b.price) * sortOrder);\n  }\n}\nPriceSortPipePipe.ɵfac = function PriceSortPipePipe_Factory(t) {\n  return new (t || PriceSortPipePipe)();\n};\nPriceSortPipePipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"priceSort\",\n  type: PriceSortPipePipe,\n  pure: true\n});\nexport { PriceSortPipePipe };","map":{"version":3,"names":["PriceSortPipePipe","transform","items","sortDescending","length","sortOrder","sort","a","b","price","pure"],"sources":["C:\\Users\\kacpe\\Desktop\\TAW12\\TAW\\E_hop\\E_hop\\src\\app\\pipes\\price-sort-pipe.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'priceSort'\n})\nexport class PriceSortPipePipe implements PipeTransform {\n\n  transform(items: any[], sortDescending: boolean = true): any[] {\n    if (!items || items.length <= 1) {\n      return items;\n    }\n\n    const sortOrder = sortDescending ? -1 : 1;\n\n    return items.sort((a, b) => (a.price - b.price) * sortOrder);\n  }\n}\n"],"mappings":";AAEA,MAGaA,iBAAiB;EAE5BC,SAASA,CAACC,KAAY,EAAEC,cAAA,GAA0B,IAAI;IACpD,IAAI,CAACD,KAAK,IAAIA,KAAK,CAACE,MAAM,IAAI,CAAC,EAAE;MAC/B,OAAOF,KAAK;;IAGd,MAAMG,SAAS,GAAGF,cAAc,GAAG,CAAC,CAAC,GAAG,CAAC;IAEzC,OAAOD,KAAK,CAACI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,CAACD,CAAC,CAACE,KAAK,GAAGD,CAAC,CAACC,KAAK,IAAIJ,SAAS,CAAC;EAC9D;;AAVWL,iBAAiB,C;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB,C;;QAAjBA,iBAAiB;EAAAU,IAAA;AAAA;SAAjBV,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}