{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass DataService {\n  constructor(http) {\n    this.http = http;\n    this.url = \"http://localhost:3000\";\n  }\n  getAllTeams() {\n    return this.http.get(this.url + '/api/teams');\n  }\n  getMyTeams() {\n    return this.http.get(this.url + '/api/teams');\n  }\n  getTeamById(id) {\n    return this.http.get(this.url + '/api/teams/' + id);\n  }\n  deleteTeam(id) {\n    return this.http.delete(this.url + '/api/team/delete/' + id);\n  }\n  updateTeam(id, teamData) {\n    return this.http.put(this.url + '/api/team/update/' + id, teamData);\n  }\n  createTeam(teamData) {\n    return this.http.post(this.url + '/api/team/create', teamData);\n  }\n  addMemberToTeam(id, teamId) {\n    return this.http.post(this.url + '/api/team/add-member' + teamId + '/' + id, null);\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});\nexport { DataService };","map":{"version":3,"names":["DataService","constructor","http","url","getAllTeams","get","getMyTeams","getTeamById","id","deleteTeam","delete","updateTeam","teamData","put","createTeam","post","addMemberToTeam","teamId","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\kacpe\\Desktop\\TAW12\\TAW\\E_hop\\E_hop\\src\\app\\services\\data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  private url = \"http://localhost:3000\";\n\n    constructor(private http: HttpClient) {\n}\n\n  getAllTeams() {\n    return this.http.get(this.url + '/api/teams');\n  }\n  getMyTeams() {\n    return this.http.get(this.url + '/api/teams');\n  }\n\n  getTeamById(id: string) {\n    return this.http.get(this.url + '/api/teams/' + id);\n  }\n\n  deleteTeam(id: string) {\n    return this.http.delete(this.url + '/api/team/delete/' + id);\n  }\n\n  updateTeam(id: string, teamData: any) {\n    return this.http.put(this.url + '/api/team/update/' + id, teamData);\n  }\n\n  createTeam(teamData: any) {\n    return this.http.post(this.url + '/api/team/create', teamData);\n  }\n  addMemberToTeam(id: string, teamId:string){\n    return this.http.post(this.url + '/api/team/add-member' + teamId + '/' + id,null);\n  }\n}\n"],"mappings":";;AAEA,MAGaA,WAAW;EAIpBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFlB,KAAAC,GAAG,GAAG,uBAAuB;EAGvC;EAEEC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,GAAG,GAAG,YAAY,CAAC;EAC/C;EACAG,UAAUA,CAAA;IACR,OAAO,IAAI,CAACJ,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,GAAG,GAAG,YAAY,CAAC;EAC/C;EAEAI,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,GAAG,GAAG,aAAa,GAAGK,EAAE,CAAC;EACrD;EAEAC,UAAUA,CAACD,EAAU;IACnB,OAAO,IAAI,CAACN,IAAI,CAACQ,MAAM,CAAC,IAAI,CAACP,GAAG,GAAG,mBAAmB,GAAGK,EAAE,CAAC;EAC9D;EAEAG,UAAUA,CAACH,EAAU,EAAEI,QAAa;IAClC,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAC,IAAI,CAACV,GAAG,GAAG,mBAAmB,GAAGK,EAAE,EAAEI,QAAQ,CAAC;EACrE;EAEAE,UAAUA,CAACF,QAAa;IACtB,OAAO,IAAI,CAACV,IAAI,CAACa,IAAI,CAAC,IAAI,CAACZ,GAAG,GAAG,kBAAkB,EAAES,QAAQ,CAAC;EAChE;EACAI,eAAeA,CAACR,EAAU,EAAES,MAAa;IACvC,OAAO,IAAI,CAACf,IAAI,CAACa,IAAI,CAAC,IAAI,CAACZ,GAAG,GAAG,sBAAsB,GAAGc,MAAM,GAAG,GAAG,GAAGT,EAAE,EAAC,IAAI,CAAC;EACnF;;AA/BWR,WAAW,C;mBAAXA,WAAW,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXrB,WAAW,C;SAAXA,WAAW;EAAAsB,OAAA,EAAXtB,WAAW,CAAAuB,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPxB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}