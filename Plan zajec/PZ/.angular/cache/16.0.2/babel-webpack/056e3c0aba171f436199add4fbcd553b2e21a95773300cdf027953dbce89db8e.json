{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction ScheduleFormComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"label\", 10);\n    i0.ɵɵtext(2, \"Time:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 11);\n    i0.ɵɵelementStart(4, \"label\", 12);\n    i0.ɵɵtext(5, \"Course:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 13);\n    i0.ɵɵelementStart(7, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function ScheduleFormComponent_div_8_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.removeCourse(i_r2));\n    });\n    i0.ɵɵtext(8, \"Remove Course\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const i_r2 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", i_r2);\n  }\n}\nclass ScheduleFormComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n  }\n  ngOnInit() {\n    this.scheduleForm = this.formBuilder.array({\n      owner: ['', Validators.required],\n      day: ['', Validators.required],\n      courses: this.formBuilder.array([this.createCourseFormGroup()])\n    });\n  }\n  createCourseFormGroup() {\n    return this.formBuilder.group({\n      time: ['', Validators.required],\n      course: ['', Validators.required]\n      // Add more fields as needed for each course\n    });\n  }\n\n  addCourse() {\n    const coursesArray = this.scheduleForm.get('courses');\n    coursesArray.push(this.createCourseFormGroup());\n  }\n  removeCourse(index) {\n    const coursesArray = this.scheduleForm.get('courses');\n    coursesArray.removeAt(index);\n  }\n  submitSchedule() {\n    if (this.scheduleForm.valid) {\n      // Send the form data to your backend API for saving to the database\n      // You can use Angular's HttpClient to make the API request\n    }\n  }\n}\nScheduleFormComponent.ɵfac = function ScheduleFormComponent_Factory(t) {\n  return new (t || ScheduleFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nScheduleFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ScheduleFormComponent,\n  selectors: [[\"app-schedule-form\"]],\n  decls: 13,\n  vars: 2,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"owner\"], [\"type\", \"text\", \"id\", \"owner\", \"formControlName\", \"owner\"], [\"for\", \"day\"], [\"type\", \"text\", \"id\", \"day\", \"formControlName\", \"day\"], [\"formArrayName\", \"courses\"], [3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 3, \"click\"], [\"type\", \"submit\"], [3, \"formGroupName\"], [\"for\", \"time\"], [\"type\", \"text\", \"id\", \"time\", \"formControlName\", \"time\"], [\"for\", \"course\"], [\"type\", \"text\", \"id\", \"course\", \"formControlName\", \"course\"]],\n  template: function ScheduleFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function ScheduleFormComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.submitSchedule();\n      });\n      i0.ɵɵelementStart(1, \"label\", 1);\n      i0.ɵɵtext(2, \"Owner:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"input\", 2);\n      i0.ɵɵelementStart(4, \"label\", 3);\n      i0.ɵɵtext(5, \"Day:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 4);\n      i0.ɵɵelementStart(7, \"div\", 5);\n      i0.ɵɵtemplate(8, ScheduleFormComponent_div_8_Template, 9, 1, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function ScheduleFormComponent_Template_button_click_9_listener() {\n        return ctx.addCourse();\n      });\n      i0.ɵɵtext(10, \"Add Course\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 8);\n      i0.ɵɵtext(12, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.scheduleForm);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.scheduleForm.controls);\n    }\n  },\n  dependencies: [i2.NgForOf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { ScheduleFormComponent };","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","ScheduleFormComponent_div_8_Template_button_click_7_listener","restoredCtx","ɵɵrestoreView","_r4","i_r2","index","ctx_r3","ɵɵnextContext","ɵɵresetView","removeCourse","ɵɵproperty","ScheduleFormComponent","constructor","formBuilder","ngOnInit","scheduleForm","array","owner","required","day","courses","createCourseFormGroup","group","time","course","addCourse","coursesArray","get","push","removeAt","submitSchedule","valid","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","ScheduleFormComponent_Template","rf","ctx","ScheduleFormComponent_Template_form_ngSubmit_0_listener","ɵɵtemplate","ScheduleFormComponent_div_8_Template","ScheduleFormComponent_Template_button_click_9_listener","ɵɵadvance","controls"],"sources":["C:\\Users\\kacpe\\Desktop\\TAW12\\Aplikacja - plan zajęć\\Plan zajec\\PZ\\src\\app\\components\\schedule-form\\schedule-form.component.ts","C:\\Users\\kacpe\\Desktop\\TAW12\\Aplikacja - plan zajęć\\Plan zajec\\PZ\\src\\app\\components\\schedule-form\\schedule-form.component.html"],"sourcesContent":["import { Component , OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-schedule-form',\n  templateUrl: './schedule-form.component.html',\n  styleUrls: ['./schedule-form.component.css']\n})\nexport class ScheduleFormComponent  implements OnInit {\n\n  scheduleForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.scheduleForm = this.formBuilder.array({\n      owner: ['', Validators.required],\n      day: ['', Validators.required],\n      courses: this.formBuilder.array([this.createCourseFormGroup()])\n    });\n  }\n\n  createCourseFormGroup(): FormGroup {\n    return this.formBuilder.group({\n      time: ['', Validators.required],\n      course: ['', Validators.required],\n      // Add more fields as needed for each course\n    });\n  }\n\n  addCourse(): void {\n    const coursesArray = this.scheduleForm.get('courses') as FormArray;\n    coursesArray.push(this.createCourseFormGroup());\n  }\n\n  removeCourse(index: number): void {\n    const coursesArray = this.scheduleForm.get('courses') as FormArray;\n    coursesArray.removeAt(index);\n  }\n\n  submitSchedule(): void {\n    if (this.scheduleForm.valid) {\n      // Send the form data to your backend API for saving to the database\n      // You can use Angular's HttpClient to make the API request\n    }\n  }\n}\n","<form [formGroup]=\"scheduleForm\" (ngSubmit)=\"submitSchedule()\">\n  <label for=\"owner\">Owner:</label>\n  <input type=\"text\" id=\"owner\" formControlName=\"owner\" />\n\n  <label for=\"day\">Day:</label>\n  <input type=\"text\" id=\"day\" formControlName=\"day\" />\n\n  <div formArrayName=\"courses\">\n    <div *ngFor=\"let course of scheduleForm.controls; let i = index\" [formGroupName]=\"i\">\n      <label for=\"time\">Time:</label>\n      <input type=\"text\" id=\"time\" formControlName=\"time\" />\n\n      <label for=\"course\">Course:</label>\n      <input type=\"text\" id=\"course\" formControlName=\"course\" />\n\n      <button type=\"button\" (click)=\"removeCourse(i)\">Remove Course</button>\n    </div>\n  </div>\n\n  <button type=\"button\" (click)=\"addCourse()\">Add Course</button>\n\n  <button type=\"submit\">Submit</button>\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}