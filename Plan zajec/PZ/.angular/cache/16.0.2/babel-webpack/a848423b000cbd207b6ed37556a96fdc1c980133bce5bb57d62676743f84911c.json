{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet TeamsComponent = class TeamsComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.teams = [];\n    this.newTeamData = {}; // Data for creating a new team\n    this.editTeamData = {}; // Data for editing a team\n    this.selectedTeamId = null; // Store the ID of the selected team for editing\n  } // Inject DataService\n  ngOnInit() {\n    this.loadTeams();\n  }\n  loadTeams() {\n    this.dataService.getAllTeams().subscribe(data => {\n      this.teams = data;\n    });\n  }\n  createTeam() {\n    this.dataService.createTeam(this.newTeamData).subscribe(() => {\n      this.loadTeams(); // Reload the list of teams after creating one\n      this.newTeamData = {}; // Clear the form\n    });\n  }\n\n  editTeam(id) {\n    this.selectedTeamId = id;\n    this.dataService.getTeamById(id).subscribe(data => {\n      this.editTeamData = data;\n    });\n  }\n  updateTeam() {\n    if (this.selectedTeamId) {\n      this.dataService.updateTeam(this.selectedTeamId, this.editTeamData).subscribe(() => {\n        this.loadTeams(); // Reload the list of teams after updating one\n        this.editTeamData = {}; // Clear the form\n        this.selectedTeamId = null; // Reset the selected team\n      });\n    }\n  }\n\n  deleteTeam(id) {\n    this.dataService.deleteTeam(id).subscribe(() => {\n      this.loadTeams(); // Reload the list of teams after deleting one\n    });\n  }\n  // Add more methods for adding/removing members or other functionality\n  cancelEdit() {\n    this.editTeamData = {}; // Clear the form\n    this.selectedTeamId = null; // Reset the selected team\n  }\n};\n\nTeamsComponent = __decorate([Component({\n  selector: 'app-teams',\n  templateUrl: './teams.component.html',\n  styleUrls: ['./teams.component.css']\n})], TeamsComponent);\nexport { TeamsComponent };","map":{"version":3,"names":["Component","TeamsComponent","constructor","dataService","teams","newTeamData","editTeamData","selectedTeamId","ngOnInit","loadTeams","getAllTeams","subscribe","data","createTeam","editTeam","id","getTeamById","updateTeam","deleteTeam","cancelEdit","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\kacpe\\Desktop\\TAW12\\TAW\\E_hop\\E_hop\\src\\app\\components\\teams\\teams.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { DataService } from ''; // Import your DataService\n\n@Component({\n  selector: 'app-teams',\n  templateUrl: './teams.component.html',\n  styleUrls: ['./teams.component.css']\n})\nexport class TeamsComponent implements OnInit {\n  teams: any[] = [];\n  newTeamData: any = {}; // Data for creating a new team\n  editTeamData: any = {}; // Data for editing a team\n  selectedTeamId: string | null = null; // Store the ID of the selected team for editing\n\n  constructor(private dataService: DataService) {} // Inject DataService\n\n  ngOnInit() {\n    this.loadTeams();\n  }\n\n  loadTeams() {\n    this.dataService.getAllTeams().subscribe((data: any) => {\n      this.teams = data;\n    });\n  }\n\n  createTeam() {\n    this.dataService.createTeam(this.newTeamData).subscribe(() => {\n      this.loadTeams(); // Reload the list of teams after creating one\n      this.newTeamData = {}; // Clear the form\n    });\n  }\n\n  editTeam(id: string) {\n    this.selectedTeamId = id;\n    this.dataService.getTeamById(id).subscribe((data: any) => {\n      this.editTeamData = data;\n    });\n  }\n\n  updateTeam() {\n    if (this.selectedTeamId) {\n      this.dataService.updateTeam(this.selectedTeamId, this.editTeamData).subscribe(() => {\n        this.loadTeams(); // Reload the list of teams after updating one\n        this.editTeamData = {}; // Clear the form\n        this.selectedTeamId = null; // Reset the selected team\n      });\n    }\n  }\n\n  deleteTeam(id: string) {\n    this.dataService.deleteTeam(id).subscribe(() => {\n      this.loadTeams(); // Reload the list of teams after deleting one\n    });\n  }\n\n  // Add more methods for adding/removing members or other functionality\n\n  cancelEdit() {\n    this.editTeamData = {}; // Clear the form\n    this.selectedTeamId = null; // Reset the selected team\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAQjD,IAAaC,cAAc,GAA3B,MAAaA,cAAc;EAMzBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAL/B,KAAAC,KAAK,GAAU,EAAE;IACjB,KAAAC,WAAW,GAAQ,EAAE,CAAC,CAAC;IACvB,KAAAC,YAAY,GAAQ,EAAE,CAAC,CAAC;IACxB,KAAAC,cAAc,GAAkB,IAAI,CAAC,CAAC;EAES,CAAC,CAAC;EAEjDC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAA,SAASA,CAAA;IACP,IAAI,CAACN,WAAW,CAACO,WAAW,EAAE,CAACC,SAAS,CAAEC,IAAS,IAAI;MACrD,IAAI,CAACR,KAAK,GAAGQ,IAAI;IACnB,CAAC,CAAC;EACJ;EAEAC,UAAUA,CAAA;IACR,IAAI,CAACV,WAAW,CAACU,UAAU,CAAC,IAAI,CAACR,WAAW,CAAC,CAACM,SAAS,CAAC,MAAK;MAC3D,IAAI,CAACF,SAAS,EAAE,CAAC,CAAC;MAClB,IAAI,CAACJ,WAAW,GAAG,EAAE,CAAC,CAAC;IACzB,CAAC,CAAC;EACJ;;EAEAS,QAAQA,CAACC,EAAU;IACjB,IAAI,CAACR,cAAc,GAAGQ,EAAE;IACxB,IAAI,CAACZ,WAAW,CAACa,WAAW,CAACD,EAAE,CAAC,CAACJ,SAAS,CAAEC,IAAS,IAAI;MACvD,IAAI,CAACN,YAAY,GAAGM,IAAI;IAC1B,CAAC,CAAC;EACJ;EAEAK,UAAUA,CAAA;IACR,IAAI,IAAI,CAACV,cAAc,EAAE;MACvB,IAAI,CAACJ,WAAW,CAACc,UAAU,CAAC,IAAI,CAACV,cAAc,EAAE,IAAI,CAACD,YAAY,CAAC,CAACK,SAAS,CAAC,MAAK;QACjF,IAAI,CAACF,SAAS,EAAE,CAAC,CAAC;QAClB,IAAI,CAACH,YAAY,GAAG,EAAE,CAAC,CAAC;QACxB,IAAI,CAACC,cAAc,GAAG,IAAI,CAAC,CAAC;MAC9B,CAAC,CAAC;;EAEN;;EAEAW,UAAUA,CAACH,EAAU;IACnB,IAAI,CAACZ,WAAW,CAACe,UAAU,CAACH,EAAE,CAAC,CAACJ,SAAS,CAAC,MAAK;MAC7C,IAAI,CAACF,SAAS,EAAE,CAAC,CAAC;IACpB,CAAC,CAAC;EACJ;EAEA;EAEAU,UAAUA,CAAA;IACR,IAAI,CAACb,YAAY,GAAG,EAAE,CAAC,CAAC;IACxB,IAAI,CAACC,cAAc,GAAG,IAAI,CAAC,CAAC;EAC9B;CACD;;AAtDYN,cAAc,GAAAmB,UAAA,EAL1BpB,SAAS,CAAC;EACTqB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWtB,cAAc,CAsD1B;SAtDYA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}