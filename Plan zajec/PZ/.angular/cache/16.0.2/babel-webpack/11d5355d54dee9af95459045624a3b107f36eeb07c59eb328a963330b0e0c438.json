{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/data.service\";\nimport * as i2 from \"@angular/router\";\nclass EditProductComponent {\n  constructor(productService, route) {\n    this.productService = productService;\n    this.route = route;\n    this.credentials = {}; // Object to hold the form data\n    this.productId = ''; // Property to store the product ID\n  }\n\n  ngOnInit() {\n    // Get the product ID from the route parameters\n    this.productId = this.route.snapshot.params['id'];\n    // Fetch the product details using the ProductService (replace with your actual service)\n    this.productService.getProduct(this.productId).subscribe(res => {\n      this.credentials = res; // Assign the fetched product details to the form data\n    });\n  }\n\n  updateProduct() {\n    // Call the ProductService to update the product (replace with your actual service)\n    this.productService.updateProduct(this.productId, this.credentials).subscribe(res => {\n      // Handle the response and any necessary actions after updating the product\n    });\n  }\n}\nEditProductComponent.ɵfac = function EditProductComponent_Factory(t) {\n  return new (t || EditProductComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nEditProductComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditProductComponent,\n  selectors: [[\"-edit-product\"]],\n  decls: 2,\n  vars: 0,\n  template: function EditProductComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"edit-product works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { EditProductComponent };","map":{"version":3,"names":["EditProductComponent","constructor","productService","route","credentials","productId","ngOnInit","snapshot","params","getProduct","subscribe","res","updateProduct","i0","ɵɵdirectiveInject","i1","DataService","i2","ActivatedRoute","selectors","decls","vars","template","EditProductComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["E:\\Taw\\blog11\\blog\\blog\\src\\app\\edit-product\\edit-product.component.ts","E:\\Taw\\blog11\\blog\\blog\\src\\app\\edit-product\\edit-product.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {DataService} from \"../services/data.service\";\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: '-edit-product',\n  templateUrl: './edit-product.component.html',\n  styleUrls: ['./edit-product.component.css']\n})\nexport class EditProductComponent implements OnInit {\n  credentials: any = {}; // Object to hold the form data\n  productId: string = ''; // Property to store the product ID\n\n  constructor(private productService: DataService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    // Get the product ID from the route parameters\n    this.productId = this.route.snapshot.params['id'];\n\n    // Fetch the product details using the ProductService (replace with your actual service)\n    this.productService.getProduct(this.productId).subscribe((res: any) => {\n      this.credentials = res; // Assign the fetched product details to the form data\n    });\n  }\n\n  updateProduct(): void {\n    // Call the ProductService to update the product (replace with your actual service)\n    this.productService.updateProduct(this.productId, this.credentials).subscribe((res: any) => {\n      // Handle the response and any necessary actions after updating the product\n    });\n  }\n}\n","<p>edit-product works!</p>\n"],"mappings":";;;AAIA,MAKaA,oBAAoB;EAI/BC,YAAoBC,cAA2B,EAAUC,KAAqB;IAA1D,KAAAD,cAAc,GAAdA,cAAc;IAAuB,KAAAC,KAAK,GAALA,KAAK;IAH9D,KAAAC,WAAW,GAAQ,EAAE,CAAC,CAAC;IACvB,KAAAC,SAAS,GAAW,EAAE,CAAC,CAAC;EAE0D;;EAElFC,QAAQA,CAAA;IACN;IACA,IAAI,CAACD,SAAS,GAAG,IAAI,CAACF,KAAK,CAACI,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IAEjD;IACA,IAAI,CAACN,cAAc,CAACO,UAAU,CAAC,IAAI,CAACJ,SAAS,CAAC,CAACK,SAAS,CAAEC,GAAQ,IAAI;MACpE,IAAI,CAACP,WAAW,GAAGO,GAAG,CAAC,CAAC;IAC1B,CAAC,CAAC;EACJ;;EAEAC,aAAaA,CAAA;IACX;IACA,IAAI,CAACV,cAAc,CAACU,aAAa,CAAC,IAAI,CAACP,SAAS,EAAE,IAAI,CAACD,WAAW,CAAC,CAACM,SAAS,CAAEC,GAAQ,IAAI;MACzF;IAAA,CACD,CAAC;EACJ;;AArBWX,oBAAoB,C;mBAApBA,oBAAoB,EAAAa,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,cAAA;AAAA;AAApBlB,oBAAoB,C;QAApBA,oBAAoB;EAAAmB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCTjCX,EAAA,CAAAa,cAAA,QAAG;MAAAb,EAAA,CAAAc,MAAA,0BAAmB;MAAAd,EAAA,CAAAe,YAAA,EAAI;;;;;SDSb5B,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}