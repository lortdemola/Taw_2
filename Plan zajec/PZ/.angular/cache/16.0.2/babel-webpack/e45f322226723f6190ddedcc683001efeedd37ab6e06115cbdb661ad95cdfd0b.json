{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass FilterTextPipe {\n  transform(value, filterText) {\n    if (!value) {\n      return [];\n    }\n    if (!filterText) {\n      return value;\n    }\n    filterText = filterText.toLowerCase();\n    return value.filter(val => {\n      return val.title.toLowerCase().includes(filterText);\n    });\n  }\n}\nFilterTextPipe.ɵfac = function FilterTextPipe_Factory(t) {\n  return new (t || FilterTextPipe)();\n};\nFilterTextPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"filter\",\n  type: FilterTextPipe,\n  pure: true\n});\nexport { FilterTextPipe };","map":{"version":3,"names":["FilterTextPipe","transform","value","filterText","toLowerCase","filter","val","title","includes","pure"],"sources":["E:\\Taw\\blog11\\blog\\blog\\src\\app\\pipes\\filter-text.pipe.ts"],"sourcesContent":["import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterTextPipe implements PipeTransform {\n\n  transform(value: any[], filterText: any): any {\n    if (!value) {\n      return [];\n    }\n    if (!filterText) {\n      return value;\n    }\n\n    filterText = filterText.toLowerCase();\n    return value.filter(val => {\n      return val.title.toLowerCase().includes(filterText);\n    });\n  }\n}\n"],"mappings":";AAEA,MAGaA,cAAc;EAEzBC,SAASA,CAACC,KAAY,EAAEC,UAAe;IACrC,IAAI,CAACD,KAAK,EAAE;MACV,OAAO,EAAE;;IAEX,IAAI,CAACC,UAAU,EAAE;MACf,OAAOD,KAAK;;IAGdC,UAAU,GAAGA,UAAU,CAACC,WAAW,EAAE;IACrC,OAAOF,KAAK,CAACG,MAAM,CAACC,GAAG,IAAG;MACxB,OAAOA,GAAG,CAACC,KAAK,CAACH,WAAW,EAAE,CAACI,QAAQ,CAACL,UAAU,CAAC;IACrD,CAAC,CAAC;EACJ;;AAdWH,cAAc,C;mBAAdA,cAAc;AAAA;AAAdA,cAAc,C;;QAAdA,cAAc;EAAAS,IAAA;AAAA;SAAdT,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}