{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet LoginComponent = class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.credentials = {\n      login: '',\n      password: ''\n    };\n  }\n  ngOnInit() {}\n  signIn() {\n    return this.authService.authenticate(this.credentials).subscribe(result => {\n      if (!result) {\n        this.logged = false;\n      } else {\n        this.logout = false;\n        this.credentials = {\n          login: '',\n          password: ''\n        };\n        this.router.navigate(['/']);\n      }\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"names":["Component","LoginComponent","constructor","authService","router","credentials","login","password","ngOnInit","signIn","authenticate","subscribe","result","logged","logout","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\kacpe\\Desktop\\TAW12\\TAW\\E_hop\\E_hop\\src\\app\\components\\login\\login.component.ts"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {AuthService} from \"../../services/auth.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public credentials = {\n    login: '',\n    password: ''\n  };\n\n  public logged?: boolean;\n  public logout?: boolean;\n\n  constructor(public authService: AuthService,\n              private router: Router) {\n  }\n\n\n  ngOnInit(): void {\n  }\n\n  signIn() {\n    return this.authService.authenticate(this.credentials).subscribe((result) => {\n      if (!result) {\n        this.logged = false;\n      } else {\n        this.logout = false;\n        this.credentials = {\n          login: '',\n          password: ''\n        };\n        this.router.navigate(['/']);\n      }\n    });\n  }\n}\n"],"mappings":";AAAA,SAAQA,SAAS,QAAe,eAAe;AAS/C,IAAaC,cAAc,GAA3B,MAAaA,cAAc;EAUzBC,YAAmBC,WAAwB,EACvBC,MAAc;IADf,KAAAD,WAAW,GAAXA,WAAW;IACV,KAAAC,MAAM,GAANA,MAAM;IATnB,KAAAC,WAAW,GAAG;MACnBC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;KACX;EAOD;EAGAC,QAAQA,CAAA,GACR;EAEAC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACN,WAAW,CAACO,YAAY,CAAC,IAAI,CAACL,WAAW,CAAC,CAACM,SAAS,CAAEC,MAAM,IAAI;MAC1E,IAAI,CAACA,MAAM,EAAE;QACX,IAAI,CAACC,MAAM,GAAG,KAAK;OACpB,MAAM;QACL,IAAI,CAACC,MAAM,GAAG,KAAK;QACnB,IAAI,CAACT,WAAW,GAAG;UACjBC,KAAK,EAAE,EAAE;UACTC,QAAQ,EAAE;SACX;QACD,IAAI,CAACH,MAAM,CAACW,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;;IAE/B,CAAC,CAAC;EACJ;CACD;AAhCYd,cAAc,GAAAe,UAAA,EAL1BhB,SAAS,CAAC;EACTiB,QAAQ,EAAE,OAAO;EACjBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWlB,cAAc,CAgC1B;SAhCYA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}