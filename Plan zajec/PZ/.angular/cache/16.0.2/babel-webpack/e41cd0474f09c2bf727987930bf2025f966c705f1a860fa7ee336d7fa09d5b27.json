{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/data.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = function (a2) {\n  return [\"/teams\", \"edit\", a2];\n};\nfunction TeamsComponent_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"a\", 4);\n    i0.ɵɵtext(3, \"Edit\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const team_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", team_r1.name, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(2, _c0, team_r1.id));\n  }\n}\nclass TeamsComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.teams = [];\n    this.newTeamName = '';\n  }\n  createTeam() {\n    if (this.newTeamName.trim() !== '') {\n      const newTeam = {\n        id: this.generateUniqueId(),\n        name: this.newTeamName\n      };\n      this.teams.push(newTeam);\n      this.newTeamName = '';\n    }\n  }\n  generateUniqueId() {\n    // Implement a function to generate unique IDs, such as incrementing a counter or using a library\n    // For simplicity, you can use a timestamp-based approach\n    return new Date().getTime();\n  }\n  ngOnInit() {\n    this.loadTeams();\n  }\n  loadTeams() {\n    this.dataService.getAllTeams().subscribe(data => {\n      this.teams = data;\n    });\n  }\n}\nTeamsComponent.ɵfac = function TeamsComponent_Factory(t) {\n  return new (t || TeamsComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n};\nTeamsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TeamsComponent,\n  selectors: [[\"app-teams\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[3, \"submit\"], [\"type\", \"text\", \"name\", \"teamName\", \"placeholder\", \"Enter team name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [4, \"ngFor\", \"ngForOf\"], [3, \"routerLink\"]],\n  template: function TeamsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function TeamsComponent_Template_form_submit_0_listener() {\n        return ctx.createTeam();\n      });\n      i0.ɵɵelementStart(1, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function TeamsComponent_Template_input_ngModelChange_1_listener($event) {\n        return ctx.newTeamName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"button\", 2);\n      i0.ɵɵtext(3, \"Create Team\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"ul\");\n      i0.ɵɵtemplate(5, TeamsComponent_li_5_Template, 4, 4, \"li\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.newTeamName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.teams);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { TeamsComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","team_r1","name","ɵɵproperty","ɵɵpureFunction1","_c0","id","TeamsComponent","constructor","dataService","teams","newTeamName","createTeam","trim","newTeam","generateUniqueId","push","Date","getTime","ngOnInit","loadTeams","getAllTeams","subscribe","data","ɵɵdirectiveInject","i1","DataService","selectors","decls","vars","consts","template","TeamsComponent_Template","rf","ctx","ɵɵlistener","TeamsComponent_Template_form_submit_0_listener","TeamsComponent_Template_input_ngModelChange_1_listener","$event","ɵɵtemplate","TeamsComponent_li_5_Template"],"sources":["C:\\Users\\kacpe\\Desktop\\TAW12\\TAW\\E_hop\\E_hop\\src\\app\\components\\teams\\teams.component.ts","C:\\Users\\kacpe\\Desktop\\TAW12\\TAW\\E_hop\\E_hop\\src\\app\\components\\teams\\teams.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {DataService} from \"../../services/data.service\";\n\n@Component({\n  selector: 'app-teams',\n  templateUrl: './teams.component.html',\n  styleUrls: ['./teams.component.css']\n})\nexport class TeamsComponent implements OnInit{\n  teams: { id: number,name: string }[] = [];\n  newTeamName: string = '';\n  constructor(private dataService: DataService) {}\n  createTeam() {\n    if (this.newTeamName.trim() !== '') {\n      const newTeam: { id: number, name: string } = {\n        id: this.generateUniqueId(), // You can implement a function to generate unique IDs\n        name: this.newTeamName\n      };\n\n      this.teams.push(newTeam);\n      this.newTeamName = '';\n    }\n  }\n\n  generateUniqueId(): number {\n    // Implement a function to generate unique IDs, such as incrementing a counter or using a library\n    // For simplicity, you can use a timestamp-based approach\n    return new Date().getTime();\n  }\n\n\n\n\n  ngOnInit() {\n    this.loadTeams();\n  }\n\n  loadTeams() {\n    this.dataService.getAllTeams().subscribe((data: any) => {\n      this.teams = data;\n    });\n  }\n\n}\n","<form (submit)=\"createTeam()\">\n  <input type=\"text\" name=\"teamName\" [(ngModel)]=\"newTeamName\" placeholder=\"Enter team name\" required>\n  <button type=\"submit\">Create Team</button>\n</form>\n\n<!-- Display a list of existing teams -->\n<ul>\n  <li *ngFor=\"let team of teams\">{{ team.name }}  <a [routerLink]=\"['/teams', 'edit', team.id]\">Edit</a></li>\n</ul>\n"],"mappings":";;;;;;;;;;ICOEA,EAAA,CAAAC,cAAA,SAA+B;IAAAD,EAAA,CAAAE,MAAA,GAAiB;IAAAF,EAAA,CAAAC,cAAA,WAA8C;IAAAD,EAAA,CAAAE,MAAA,WAAI;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAAvEH,EAAA,CAAAI,SAAA,GAAiB;IAAjBJ,EAAA,CAAAK,kBAAA,KAAAC,OAAA,CAAAC,IAAA,MAAiB;IAAGP,EAAA,CAAAI,SAAA,GAA0C;IAA1CJ,EAAA,CAAAQ,UAAA,eAAAR,EAAA,CAAAS,eAAA,IAAAC,GAAA,EAAAJ,OAAA,CAAAK,EAAA,EAA0C;;;ADJ/F,MAKaC,cAAc;EAGzBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAF/B,KAAAC,KAAK,GAAkC,EAAE;IACzC,KAAAC,WAAW,GAAW,EAAE;EACuB;EAC/CC,UAAUA,CAAA;IACR,IAAI,IAAI,CAACD,WAAW,CAACE,IAAI,EAAE,KAAK,EAAE,EAAE;MAClC,MAAMC,OAAO,GAAiC;QAC5CR,EAAE,EAAE,IAAI,CAACS,gBAAgB,EAAE;QAC3Bb,IAAI,EAAE,IAAI,CAACS;OACZ;MAED,IAAI,CAACD,KAAK,CAACM,IAAI,CAACF,OAAO,CAAC;MACxB,IAAI,CAACH,WAAW,GAAG,EAAE;;EAEzB;EAEAI,gBAAgBA,CAAA;IACd;IACA;IACA,OAAO,IAAIE,IAAI,EAAE,CAACC,OAAO,EAAE;EAC7B;EAKAC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAA,SAASA,CAAA;IACP,IAAI,CAACX,WAAW,CAACY,WAAW,EAAE,CAACC,SAAS,CAAEC,IAAS,IAAI;MACrD,IAAI,CAACb,KAAK,GAAGa,IAAI;IACnB,CAAC,CAAC;EACJ;;AAjCWhB,cAAc,C;mBAAdA,cAAc,EAAAZ,EAAA,CAAA6B,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAdnB,cAAc,C;QAAdA,cAAc;EAAAoB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR3BtC,EAAA,CAAAC,cAAA,cAA8B;MAAxBD,EAAA,CAAAwC,UAAA,oBAAAC,+CAAA;QAAA,OAAUF,GAAA,CAAAtB,UAAA,EAAY;MAAA,EAAC;MAC3BjB,EAAA,CAAAC,cAAA,eAAoG;MAAjED,EAAA,CAAAwC,UAAA,2BAAAE,uDAAAC,MAAA;QAAA,OAAAJ,GAAA,CAAAvB,WAAA,GAAA2B,MAAA;MAAA,EAAyB;MAA5D3C,EAAA,CAAAG,YAAA,EAAoG;MACpGH,EAAA,CAAAC,cAAA,gBAAsB;MAAAD,EAAA,CAAAE,MAAA,kBAAW;MAAAF,EAAA,CAAAG,YAAA,EAAS;MAI5CH,EAAA,CAAAC,cAAA,SAAI;MACFD,EAAA,CAAA4C,UAAA,IAAAC,4BAAA,gBAA2G;MAC7G7C,EAAA,CAAAG,YAAA,EAAK;;;MAPgCH,EAAA,CAAAI,SAAA,GAAyB;MAAzBJ,EAAA,CAAAQ,UAAA,YAAA+B,GAAA,CAAAvB,WAAA,CAAyB;MAMvChB,EAAA,CAAAI,SAAA,GAAQ;MAARJ,EAAA,CAAAQ,UAAA,YAAA+B,GAAA,CAAAxB,KAAA,CAAQ;;;;;;SDClBH,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}