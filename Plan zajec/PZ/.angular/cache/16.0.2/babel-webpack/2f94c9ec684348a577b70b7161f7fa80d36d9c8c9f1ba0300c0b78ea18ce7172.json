{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"../../services/data.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction Home_SITE_tr_4_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"label\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 11)(4, \"label\", 12);\n    i0.ɵɵtext(5, \"Time:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 13)(7, \"p\", 14);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\", 15);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"label\", 16);\n    i0.ɵɵtext(12, \"Course:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"label\", 16);\n    i0.ɵɵtext(14, \"Course:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"p\", 17);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const cour_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", i_r5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Course \", i_r5 + 1, \":\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(cour_r4.get(\"timeFrom\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cour_r4.get(\"timeTo\"));\n  }\n}\nfunction Home_SITE_tr_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 4)(1, \"div\", 5)(2, \"td\")(3, \"p\", 6);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"td\", 7);\n    i0.ɵɵtemplate(6, Home_SITE_tr_4_div_6_Template, 16, 4, \"div\", 8);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const course_r1 = ctx.$implicit;\n    const x_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroupName\", x_r2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(course_r1.get(\"dayOfWeek\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.former(course_r1).controls);\n  }\n}\nclass Home_SITE {\n  get formArr2() {\n    return this.scheduleForm.get('scheduleEntries');\n  }\n  createContactForm() {\n    this.scheduleForm = this.formBuilder.group({\n      scheduleEntries: this.formBuilder.array([this.createScheduleEntryFormGroup()])\n    });\n  }\n  createScheduleEntryFormGroup() {\n    return this.formBuilder.group({\n      dayOfWeek: ['', Validators.required],\n      courses: this.formBuilder.array([this.createCourseFormGroup()])\n    });\n  }\n  createCourseFormGroup() {\n    return this.formBuilder.group({\n      timeFrom: ['', Validators.required],\n      timeTo: ['', Validators.required],\n      course: ['', [Validators.required, Validators.minLength(2)]]\n    });\n  }\n  ngOnInit() {}\n  former(x) {\n    return x.get('courses');\n  }\n  constructor(authService, dataService, formBuilder) {\n    this.authService = authService;\n    this.dataService = dataService;\n    this.formBuilder = formBuilder;\n    this.createContactForm();\n    this.loadSchedule();\n  }\n  removeDay(index) {\n    const coursesArray = this.formArr2;\n    coursesArray.removeAt(index);\n  }\n  loadSchedule() {\n    this.dataService.getScheduleByUserId(this.authService.currentUser.userId).subscribe(data => {\n      // console.log(this.scheduleForm);\n      this.removeDay(0);\n      let temp = data;\n      this.hmm2 = temp[0];\n      let forms;\n      for (const datum of this.hmm2['scheduleEntries']) {\n        forms = this.formBuilder.group({\n          dayOfWeek: [datum['dayOfWeek'], Validators.required],\n          courses: this.formBuilder.array([])\n        });\n        for (const datum2 of datum['courses']) {\n          forms.get('courses').push(this.formBuilder.group({\n            timeFrom: [datum2['timeFrom'], Validators.required],\n            timeTo: [datum2['timeTo'], Validators.required],\n            course: [datum2['course'], Validators.required]\n          }));\n        }\n        this.formArr2.push(forms);\n      }\n    });\n  }\n}\nHome_SITE.ɵfac = function Home_SITE_Factory(t) {\n  return new (t || Home_SITE)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.DataService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nHome_SITE.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: Home_SITE,\n  selectors: [[\"Home_SITE\"]],\n  decls: 9,\n  vars: 5,\n  consts: [[2, \"height\", \"88vh\", \"min-width\", \"100vw\", 3, \"formGroup\"], [\"formArrayName\", \"scheduleEntries\", 1, \"row\"], [\"class\", \"column\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [2, \"color\", \"white\"], [1, \"column\", 3, \"formGroupName\"], [1, \"m-1\"], [\"formControlName\", \"dayOfWeek\"], [\"formArrayName\", \"courses\", 1, \"each\"], [\"class\", \"each2\", \"id\", \"2222\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"2222\", 1, \"each2\", 3, \"formGroupName\"], [\"for\", \"cors\"], [\"id\", \"cors\", 1, \"doc\"], [\"for\", \"times\"], [\"id\", \"times\"], [\"id\", \"timeFrom\", \"formControlName\", \"timeFrom\"], [\"id\", \"timeTo\", \"formControlName\", \"timeTo\"], [\"for\", \"course\"], [\"type\", \"text\", \"id\", \"course\", \"formControlName\", \"course\"]],\n  template: function Home_SITE_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"home works 222!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"tbody\", 1);\n      i0.ɵɵtemplate(4, Home_SITE_tr_4_Template, 7, 3, \"tr\", 2);\n      i0.ɵɵelement(5, \"tr\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"pre\", 3);\n      i0.ɵɵtext(7);\n      i0.ɵɵpipe(8, \"json\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.scheduleForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.formArr2.controls);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 3, ctx.scheduleForm.value));\n    }\n  },\n  dependencies: [i4.NgForOf, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i3.FormGroupName, i3.FormArrayName, i4.JsonPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { Home_SITE };","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty","i_r5","ɵɵadvance","ɵɵtextInterpolate1","ɵɵtextInterpolate","cour_r4","get","ɵɵtemplate","Home_SITE_tr_4_div_6_Template","x_r2","course_r1","ctx_r0","former","controls","Home_SITE","formArr2","scheduleForm","createContactForm","formBuilder","group","scheduleEntries","array","createScheduleEntryFormGroup","dayOfWeek","required","courses","createCourseFormGroup","timeFrom","timeTo","course","minLength","ngOnInit","x","constructor","authService","dataService","loadSchedule","removeDay","index","coursesArray","removeAt","getScheduleByUserId","currentUser","userId","subscribe","data","temp","hmm2","forms","datum","datum2","push","ɵɵdirectiveInject","i1","AuthService","i2","DataService","i3","FormBuilder","selectors","decls","vars","consts","template","Home_SITE_Template","rf","ctx","Home_SITE_tr_4_Template","ɵɵpipeBind1","value"],"sources":["C:\\Users\\kacpe\\Desktop\\TAW12\\Aplikacja - plan zajęć\\Plan zajec\\PZ\\src\\app\\components\\home\\home.component.ts","C:\\Users\\kacpe\\Desktop\\TAW12\\Aplikacja - plan zajęć\\Plan zajec\\PZ\\src\\app\\components\\home\\home.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {AuthService} from \"../../services/auth.service\";\nimport {DataService} from \"../../services/data.service\";\nimport {AbstractControl, FormArray, FormBuilder, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'Home_SITE',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class Home_SITE implements OnInit{\n  scheduleForm!: FormGroup;\n  hmm2!: any ;\n  get formArr2() {\n    return this.scheduleForm.get('scheduleEntries') as FormArray;\n  }\n  createContactForm() {\n    this.scheduleForm = this.formBuilder.group({\n      scheduleEntries: this.formBuilder.array([this.createScheduleEntryFormGroup()])\n    });\n  }\n  createScheduleEntryFormGroup(): FormGroup {\n    return this.formBuilder.group({\n      dayOfWeek: ['', Validators.required],\n      courses: this.formBuilder.array([this.createCourseFormGroup()])\n    });\n  }\n  createCourseFormGroup(): FormGroup {\n    return this.formBuilder.group({\n      timeFrom: ['',Validators.required],\n      timeTo: ['',Validators.required],\n      course: ['',[Validators.required,Validators.minLength(2)]]\n    });\n  }\n  ngOnInit(): void {\n\n  }\n  former(x: AbstractControl) {\n    return x.get('courses') as FormArray;\n  }\n  constructor(public authService: AuthService,private dataService: DataService,private formBuilder: FormBuilder) {\n    this.createContactForm();\n    this.loadSchedule();\n  }\n  removeDay(index: number): void {\n    const coursesArray = this.formArr2 as FormArray;\n    coursesArray.removeAt(index);\n  }\n  loadSchedule() {\n    this.dataService.getScheduleByUserId(this.authService.currentUser.userId).subscribe(data => {\n\n      // console.log(this.scheduleForm);\n      this.removeDay(0);\n      let temp:any =data as JSON;\n      this.hmm2 =temp[0];\n      let forms:any;\n      for (const datum of this.hmm2['scheduleEntries']) {\n        forms = this.formBuilder.group({\n          dayOfWeek: [datum['dayOfWeek'], Validators.required],\n          courses: this.formBuilder.array([])\n        });\n        for (const datum2 of datum['courses']) {\n          forms.get('courses').push(this.formBuilder.group({\n            timeFrom: [datum2['timeFrom'],Validators.required],\n            timeTo: [datum2['timeTo'],Validators.required],\n            course: [datum2['course'],Validators.required],\n          }));\n        }\n\n        this.formArr2.push(forms);\n      }\n    });\n  }\n\n}\n","<p>home works 222!</p>\n<div style=\"height: 88vh;min-width: 100vw\" [formGroup]=\"scheduleForm\" >\n\n  <tbody class=\"row\" formArrayName=\"scheduleEntries\">\n  <tr class=\"column\" *ngFor=\"let course of formArr2.controls; let x = index;\" [formGroupName]=\"x\">\n    <div class=\"m-1  \">\n      <td>\n\n          <p formControlName=\"dayOfWeek\" >{{course.get('dayOfWeek')}}</p>\n        \n      </td>\n      <td class=\"each\" formArrayName=\"courses\">\n\n        <div class=\"each2\" id=\"2222\" *ngFor=\"let cour of former(course).controls ; let i = index;\" [formGroupName]=\"i\">\n          <label for=\"cors\">Course {{i+1}}:</label>\n          <div id=\"cors\" class=\"doc\">\n            <label for=\"times\">Time:</label>\n\n              <div id=\"times\">\n                <p id=\"timeFrom\" formControlName=\"timeFrom\" >{{cour.get('timeFrom')}}</p>\n                <p  id=\"timeTo\" formControlName=\"timeTo\" >{{cour.get('timeTo')}}</p>\n\n\n              </div>\n\n\n              <label for=\"course\">Course:</label>\n            <label for=\"course\">Course:</label>\n            <p type=\"text\" id=\"course\" formControlName=\"course\" ></p>\n\n\n\n\n\n          </div></div>\n\n\n      </td>\n\n\n    </div>\n  </tr>\n  <tr>\n\n  </tr>\n\n  </tbody>\n  <pre style=\"color: white\">{{scheduleForm.value | json}}</pre>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}