{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet EditProductComponent = class EditProductComponent {\n  constructor(productService, route) {\n    this.productService = productService;\n    this.route = route;\n    this.credentials = {}; // Object to hold the form data\n    this.productId = ''; // Property to store the product ID\n  }\n\n  ngOnInit() {\n    // Get the product ID from the route parameters\n    this.productId = this.route.snapshot.params['id'];\n    // Fetch the product details using the ProductService (replace with your actual service)\n    this.productService.getProduct(this.productId).subscribe(res => {\n      this.credentials = res; // Assign the fetched product details to the form data\n    });\n  }\n\n  updateProduct() {\n    // Call the ProductService to update the product (replace with your actual service)\n    this.productService.updateProduct(this.productId, this.credentials).subscribe(res => {\n      // Handle the response and any necessary actions after updating the product\n    });\n  }\n};\nEditProductComponent = __decorate([Component({\n  selector: '-edit-product',\n  templateUrl: './edit-product.component.html',\n  styleUrls: ['./edit-product.component.css']\n})], EditProductComponent);\nexport { EditProductComponent };","map":{"version":3,"names":["Component","EditProductComponent","constructor","productService","route","credentials","productId","ngOnInit","snapshot","params","getProduct","subscribe","res","updateProduct","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\Taw\\blog11\\blog\\blog\\src\\app\\edit-product\\edit-product.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ProductService } from 'path/to/product.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: '-edit-product',\n  templateUrl: './edit-product.component.html',\n  styleUrls: ['./edit-product.component.css']\n})\nexport class EditProductComponent implements OnInit {\n  credentials: any = {}; // Object to hold the form data\n  productId: string = ''; // Property to store the product ID\n\n  constructor(private productService: ProductService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    // Get the product ID from the route parameters\n    this.productId = this.route.snapshot.params['id'];\n\n    // Fetch the product details using the ProductService (replace with your actual service)\n    this.productService.getProduct(this.productId).subscribe((res: any) => {\n      this.credentials = res; // Assign the fetched product details to the form data\n    });\n  }\n\n  updateProduct(): void {\n    // Call the ProductService to update the product (replace with your actual service)\n    this.productService.updateProduct(this.productId, this.credentials).subscribe((res: any) => {\n      // Handle the response and any necessary actions after updating the product\n    });\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AASjD,IAAaC,oBAAoB,GAAjC,MAAaA,oBAAoB;EAI/BC,YAAoBC,cAA8B,EAAUC,KAAqB;IAA7D,KAAAD,cAAc,GAAdA,cAAc;IAA0B,KAAAC,KAAK,GAALA,KAAK;IAHjE,KAAAC,WAAW,GAAQ,EAAE,CAAC,CAAC;IACvB,KAAAC,SAAS,GAAW,EAAE,CAAC,CAAC;EAE6D;;EAErFC,QAAQA,CAAA;IACN;IACA,IAAI,CAACD,SAAS,GAAG,IAAI,CAACF,KAAK,CAACI,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IAEjD;IACA,IAAI,CAACN,cAAc,CAACO,UAAU,CAAC,IAAI,CAACJ,SAAS,CAAC,CAACK,SAAS,CAAEC,GAAQ,IAAI;MACpE,IAAI,CAACP,WAAW,GAAGO,GAAG,CAAC,CAAC;IAC1B,CAAC,CAAC;EACJ;;EAEAC,aAAaA,CAAA;IACX;IACA,IAAI,CAACV,cAAc,CAACU,aAAa,CAAC,IAAI,CAACP,SAAS,EAAE,IAAI,CAACD,WAAW,CAAC,CAACM,SAAS,CAAEC,GAAQ,IAAI;MACzF;IAAA,CACD,CAAC;EACJ;CACD;AAtBYX,oBAAoB,GAAAa,UAAA,EALhCd,SAAS,CAAC;EACTe,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACWhB,oBAAoB,CAsBhC;SAtBYA,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}