{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet ScheduleFormComponent = class ScheduleFormComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.weekdays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    this.createContactForm();\n  }\n  createContactForm() {\n    this.scheduleForm = this.formBuilder.group({\n      owner: ['', Validators.required],\n      scheduleEntries: this.formBuilder.array([this.createScheduleEntryFormGroup()])\n    });\n  }\n  createScheduleEntryFormGroup() {\n    return this.formBuilder.group({\n      dayOfWeek: ['1', Validators.required],\n      courses: this.formBuilder.array([this.createCourseFormGroup()])\n    });\n  }\n  createCourseFormGroup() {\n    return this.formBuilder.group({\n      time: ['1', Validators.required],\n      course: ['1', Validators.required]\n    });\n  }\n  get formArr() {\n    return this.formArr2.at(0).get('courses');\n  }\n  get formArr2() {\n    return this.scheduleForm.get('scheduleEntries');\n  }\n  addRow({\n    obj\n  }) {\n    return this.formBuilder.group({\n      time: [obj.time],\n      course: [obj.course]\n    });\n  }\n  addNewRow() {\n    let obj1 = {\n      time: '1',\n      course: '2'\n    };\n    this.formArr.push(this.addRow({\n      obj: obj1\n    }));\n  }\n  ngOnInit() {}\n  addCourse() {\n    const coursesArray = this.scheduleForm.get('courses');\n    coursesArray.push(this.createCourseFormGroup());\n  }\n  removeCourse(index) {\n    const coursesArray = this.scheduleForm.get('courses');\n    coursesArray.removeAt(index);\n  }\n  submitSchedule() {\n    if (this.scheduleForm.valid) {\n      // Send the form data to your backend API for saving to the database\n      // You can use Angular's HttpClient to make the API request\n    }\n  }\n};\nScheduleFormComponent = __decorate([Component({\n  selector: 'app-schedule-form',\n  templateUrl: './schedule-form.component.html',\n  styleUrls: ['./schedule-form.component.css']\n})], ScheduleFormComponent);\nexport { ScheduleFormComponent };","map":{"version":3,"names":["Component","Validators","ScheduleFormComponent","constructor","formBuilder","weekdays","createContactForm","scheduleForm","group","owner","required","scheduleEntries","array","createScheduleEntryFormGroup","dayOfWeek","courses","createCourseFormGroup","time","course","formArr","formArr2","at","get","addRow","obj","addNewRow","obj1","push","ngOnInit","addCourse","coursesArray","removeCourse","index","removeAt","submitSchedule","valid","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\kacpe\\Desktop\\TAW12\\Aplikacja - plan zajęć\\Plan zajec\\PZ\\src\\app\\components\\schedule-form\\schedule-form.component.ts"],"sourcesContent":["import { Component , OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, FormArray, Validators, AbstractControl} from '@angular/forms';\n\n@Component({\n  selector: 'app-schedule-form',\n  templateUrl: './schedule-form.component.html',\n  styleUrls: ['./schedule-form.component.css']\n})\nexport class ScheduleFormComponent  implements OnInit {\n\n  scheduleForm!: FormGroup;\n  weekdays: string[] = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n  constructor(private formBuilder: FormBuilder) {\n    this.createContactForm();\n  }\n  createContactForm() {\n    this.scheduleForm = this.formBuilder.group({\n      owner: ['', Validators.required],\n      scheduleEntries: this.formBuilder.array([this.createScheduleEntryFormGroup()])\n    });\n  }\n  createScheduleEntryFormGroup(): FormGroup {\n    return this.formBuilder.group({\n      dayOfWeek: ['1', Validators.required],\n      courses: this.formBuilder.array([this.createCourseFormGroup()])\n    });\n  }\n  createCourseFormGroup(): FormGroup {\n    return this.formBuilder.group({\n      time: ['1', Validators.required],\n      course: ['1', Validators.required]\n    });\n  }\n  get formArr() {\n    return this.formArr2.at(0).get('courses') as FormArray;\n  }\n\n  get formArr2() {\n    return this.scheduleForm.get('scheduleEntries') as FormArray;\n  }\n  addRow({obj}: { obj: any }) {\n    return this.formBuilder.group({\n      time: [obj.time],\n      course: [obj.course],\n    });\n  }\n  addNewRow() {\n    let obj1 = {\n      time: '1',\n      course: '2',\n    };\n    this.formArr.push(this.addRow({obj: obj1}));\n  }\n\n  ngOnInit(): void {\n  }\n\n\n  addCourse(): void {\n    const coursesArray = this.scheduleForm.get('courses') as FormArray;\n    coursesArray.push(this.createCourseFormGroup());\n  }\n\n  removeCourse(index: number): void {\n    const coursesArray = this.scheduleForm.get('courses') as FormArray;\n    coursesArray.removeAt(index);\n  }\n\n  submitSchedule(): void {\n    if (this.scheduleForm.valid) {\n      // Send the form data to your backend API for saving to the database\n      // You can use Angular's HttpClient to make the API request\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAiB,eAAe;AAClD,SAA2CC,UAAU,QAAwB,gBAAgB;AAO7F,IAAaC,qBAAqB,GAAlC,MAAaA,qBAAqB;EAKhCC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAF/B,KAAAC,QAAQ,GAAa,CAAC,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,CAAC;IAGvF,IAAI,CAACC,iBAAiB,EAAE;EAC1B;EACAA,iBAAiBA,CAAA;IACf,IAAI,CAACC,YAAY,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACzCC,KAAK,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MAChCC,eAAe,EAAE,IAAI,CAACP,WAAW,CAACQ,KAAK,CAAC,CAAC,IAAI,CAACC,4BAA4B,EAAE,CAAC;KAC9E,CAAC;EACJ;EACAA,4BAA4BA,CAAA;IAC1B,OAAO,IAAI,CAACT,WAAW,CAACI,KAAK,CAAC;MAC5BM,SAAS,EAAE,CAAC,GAAG,EAAEb,UAAU,CAACS,QAAQ,CAAC;MACrCK,OAAO,EAAE,IAAI,CAACX,WAAW,CAACQ,KAAK,CAAC,CAAC,IAAI,CAACI,qBAAqB,EAAE,CAAC;KAC/D,CAAC;EACJ;EACAA,qBAAqBA,CAAA;IACnB,OAAO,IAAI,CAACZ,WAAW,CAACI,KAAK,CAAC;MAC5BS,IAAI,EAAE,CAAC,GAAG,EAAEhB,UAAU,CAACS,QAAQ,CAAC;MAChCQ,MAAM,EAAE,CAAC,GAAG,EAAEjB,UAAU,CAACS,QAAQ;KAClC,CAAC;EACJ;EACA,IAAIS,OAAOA,CAAA;IACT,OAAO,IAAI,CAACC,QAAQ,CAACC,EAAE,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,SAAS,CAAc;EACxD;EAEA,IAAIF,QAAQA,CAAA;IACV,OAAO,IAAI,CAACb,YAAY,CAACe,GAAG,CAAC,iBAAiB,CAAc;EAC9D;EACAC,MAAMA,CAAC;IAACC;EAAG,CAAe;IACxB,OAAO,IAAI,CAACpB,WAAW,CAACI,KAAK,CAAC;MAC5BS,IAAI,EAAE,CAACO,GAAG,CAACP,IAAI,CAAC;MAChBC,MAAM,EAAE,CAACM,GAAG,CAACN,MAAM;KACpB,CAAC;EACJ;EACAO,SAASA,CAAA;IACP,IAAIC,IAAI,GAAG;MACTT,IAAI,EAAE,GAAG;MACTC,MAAM,EAAE;KACT;IACD,IAAI,CAACC,OAAO,CAACQ,IAAI,CAAC,IAAI,CAACJ,MAAM,CAAC;MAACC,GAAG,EAAEE;IAAI,CAAC,CAAC,CAAC;EAC7C;EAEAE,QAAQA,CAAA,GACR;EAGAC,SAASA,CAAA;IACP,MAAMC,YAAY,GAAG,IAAI,CAACvB,YAAY,CAACe,GAAG,CAAC,SAAS,CAAc;IAClEQ,YAAY,CAACH,IAAI,CAAC,IAAI,CAACX,qBAAqB,EAAE,CAAC;EACjD;EAEAe,YAAYA,CAACC,KAAa;IACxB,MAAMF,YAAY,GAAG,IAAI,CAACvB,YAAY,CAACe,GAAG,CAAC,SAAS,CAAc;IAClEQ,YAAY,CAACG,QAAQ,CAACD,KAAK,CAAC;EAC9B;EAEAE,cAAcA,CAAA;IACZ,IAAI,IAAI,CAAC3B,YAAY,CAAC4B,KAAK,EAAE;MAC3B;MACA;IAAA;EAEJ;CACD;AAnEYjC,qBAAqB,GAAAkC,UAAA,EALjCpC,SAAS,CAAC;EACTqC,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACWrC,qBAAqB,CAmEjC;SAnEYA,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}