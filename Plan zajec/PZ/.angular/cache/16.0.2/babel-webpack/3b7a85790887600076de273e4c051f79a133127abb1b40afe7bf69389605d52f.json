{"ast":null,"code":"import { FormArray, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction ScheduleFormComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const c1_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(c1_r2);\n  }\n}\nfunction ScheduleFormComponent_tr_3_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const weekday_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", weekday_r7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(weekday_r7);\n  }\n}\nfunction ScheduleFormComponent_tr_3_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"label\", 16);\n    i0.ɵɵtext(2, \"Time:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 17)(4, \"label\", 18);\n    i0.ɵɵtext(5, \"From:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"input\", 19, 20);\n    i0.ɵɵlistener(\"input\", function ScheduleFormComponent_tr_3_div_9_Template_input_input_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const cour_r8 = restoredCtx.$implicit;\n      const _r10 = i0.ɵɵreference(7);\n      const _r11 = i0.ɵɵreference(11);\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.formatTimeRange(_r10, _r11, cour_r8));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"label\", 21);\n    i0.ɵɵtext(9, \"To:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"input\", 22, 23);\n    i0.ɵɵlistener(\"input\", function ScheduleFormComponent_tr_3_div_9_Template_input_input_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const cour_r8 = restoredCtx.$implicit;\n      const _r10 = i0.ɵɵreference(7);\n      const _r11 = i0.ɵɵreference(11);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.formatTimeRange(_r10, _r11, cour_r8));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\");\n    i0.ɵɵtext(13, \"Time Range: \");\n    i0.ɵɵelementStart(14, \"p\", 24);\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"label\", 25);\n    i0.ɵɵtext(17, \"Course:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(18, \"input\", 26);\n    i0.ɵɵelementStart(19, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function ScheduleFormComponent_tr_3_div_9_Template_button_click_19_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const i_r9 = restoredCtx.index;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.removeCourse(i_r9));\n    });\n    i0.ɵɵtext(20, \"Remove Course 1\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const cour_r8 = ctx.$implicit;\n    const i_r9 = ctx.index;\n    const _r10 = i0.ɵɵreference(7);\n    const _r11 = i0.ɵɵreference(11);\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"formGroupName\", i_r9);\n    i0.ɵɵadvance(10);\n    i0.ɵɵpropertyInterpolate(\"min\", _r10.value);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r6.formatTimeRange(_r10, _r11, cour_r8));\n  }\n}\nfunction ScheduleFormComponent_tr_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 6)(1, \"td\")(2, \"label\", 7);\n    i0.ɵɵtext(3, \"dayOfWeek:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"select\", 8);\n    i0.ɵɵtemplate(5, ScheduleFormComponent_tr_3_option_5_Template, 2, 2, \"option\", 9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"td\", 10)(7, \"label\", 11);\n    i0.ɵɵtext(8, \"dayOfWeek:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, ScheduleFormComponent_tr_3_div_9_Template, 21, 3, \"div\", 12);\n    i0.ɵɵelementStart(10, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function ScheduleFormComponent_tr_3_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.addNewRow());\n    });\n    i0.ɵɵtext(11, \"add Course 1\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function ScheduleFormComponent_tr_3_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const x_r4 = restoredCtx.index;\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.removeCourse(x_r4));\n    });\n    i0.ɵɵtext(13, \"Remove Course 2\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const x_r4 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroupName\", x_r4);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.weekdays);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.formArr.controls);\n  }\n}\nfunction timeRangeValidator() {\n  return control => {\n    const timeRange = control.value;\n    const min = '7';\n    const max = '21';\n    if (!timeRange) {\n      return null; // Empty value, no validation needed\n    }\n    // Regular expression to match the time range format (hh:mm-hh:mm)\n    const timeRangePattern = /^\\d{2}:\\d{2}-\\d{2}:\\d{2}$/;\n    if (!timeRange.match(timeRangePattern)) {\n      return {\n        invalidTimeRange: true\n      }; // Invalid format\n    }\n    // Split the time range into start and end times\n    const [startTime, endTime] = timeRange.split('-');\n    const [startHour, startMinute] = startTime.split(':');\n    const [endHour, endMinute] = endTime.split(':');\n    // Convert the time components to numbers\n    const startHourNum = Number(startHour);\n    const startMinuteNum = Number(startMinute);\n    const endHourNum = Number(endHour);\n    const endMinuteNum = Number(endMinute);\n    // Check if the time components are valid\n    if (isNaN(startHourNum) || isNaN(startMinuteNum) || isNaN(endHourNum) || isNaN(endMinuteNum) || startHourNum < 7 || startHourNum > 21 || startMinuteNum < 0 || startMinuteNum > 59 || endHourNum < startHourNum || endHourNum > 21 || endMinuteNum < startMinuteNum || endMinuteNum > 59) {\n      return {\n        invalidTimeRange: true\n      }; // Invalid time components\n    }\n    // Check if the start time is earlier than the end time\n    if (startHourNum > endHourNum || startHourNum === endHourNum && startMinuteNum >= endMinuteNum) {\n      return {\n        invalidTimeRange: true\n      }; // Start time is later or equal to end time\n    }\n\n    return null; // Valid time range\n  };\n}\n\nclass ScheduleFormComponent {\n  formatTimeRange(timeF, timeT, Course) {\n    const timeFrom = timeF.value;\n    const timeTo = timeT.value;\n    Course.get('time')?.setValue((timeFrom + \"-\" + timeTo).toString());\n    return `${timeFrom} - ${timeTo}`;\n  }\n  constructor(authService, formBuilder) {\n    this.authService = authService;\n    this.formBuilder = formBuilder;\n    this.weekdays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    this.FormArray = FormArray;\n    this.createContactForm();\n  }\n  createContactForm() {\n    this.scheduleForm = this.formBuilder.group({\n      owner: ['', Validators.required],\n      scheduleEntries: this.formBuilder.array([this.createScheduleEntryFormGroup()])\n    });\n    this.scheduleForm.get('owner')?.setValue(this.authService.currentUser.userId);\n  }\n  createScheduleEntryFormGroup() {\n    return this.formBuilder.group({\n      dayOfWeek: ['', Validators.required],\n      courses: this.formBuilder.array([this.createCourseFormGroup()])\n    });\n  }\n  createCourseFormGroup() {\n    return this.formBuilder.group({\n      time: ['', [Validators.required, timeRangeValidator()]],\n      course: ['', [Validators.required, Validators.minLength(2)]]\n    });\n  }\n  get formArr() {\n    return this.formArr2.at(0).get('courses');\n  }\n  get formArr2() {\n    return this.scheduleForm.get('scheduleEntries');\n  }\n  former(x) {\n    return this.formBuilder.array(x);\n  }\n  addRow({\n    obj\n  }) {\n    return this.formBuilder.group({\n      time: [obj.time, [Validators.required, timeRangeValidator()]],\n      course: [obj.course, [Validators.required, timeRangeValidator()]]\n    });\n  }\n  addCol() {\n    return this.formBuilder.group({\n      dayOfWeek: ['', Validators.required],\n      courses: this.formBuilder.array([this.createCourseFormGroup()])\n    });\n  }\n  addNewRow() {\n    let obj1 = {\n      time: '',\n      course: ''\n    };\n    this.formArr.push(this.addRow({\n      obj: obj1\n    }));\n    this.formArr.clearValidators();\n  }\n  addNewCol() {\n    let obj1 = {\n      time: '',\n      course: ''\n    };\n    this.formArr2.push(this.addCol());\n    this.formArr2.clearValidators();\n  }\n  ngOnInit() {}\n  addCourse() {\n    const coursesArray = this.scheduleForm.get('courses');\n    coursesArray.push(this.createCourseFormGroup());\n  }\n  removeCourse(index) {\n    const coursesArray = this.formArr;\n    coursesArray.removeAt(index);\n  }\n  submitSchedule() {\n    if (this.scheduleForm.valid) {\n      console.log(\"ok\");\n      // Send the form data to your backend API for saving to the database\n      // You can use Angular's HttpClient to make the API request\n    } else {\n      console.log(\"!ok\");\n    }\n  }\n}\nScheduleFormComponent.ɵfac = function ScheduleFormComponent_Factory(t) {\n  return new (t || ScheduleFormComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nScheduleFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ScheduleFormComponent,\n  selectors: [[\"app-schedule-form\"]],\n  decls: 20,\n  vars: 12,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [4, \"ngFor\", \"ngForOf\"], [\"formArrayName\", \"scheduleEntries\"], [3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-dark\", 3, \"click\"], [\"type\", \"submit\"], [3, \"formGroupName\"], [\"for\", \"dayOfWeek\"], [\"id\", \"dayOfWeek\", \"formControlName\", \"dayOfWeek\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formArrayName\", \"courses\"], [\"for\", \"2222\"], [\"id\", \"2222\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 3, \"click\"], [3, \"value\"], [\"id\", \"2222\", 3, \"formGroupName\"], [\"for\", \"times\"], [\"id\", \"times\"], [\"for\", \"timefrom\"], [\"type\", \"time\", \"id\", \"timefrom\", \"min\", \"07:00\", \"max\", \"21:00\", \"required\", \"\", 3, \"input\"], [\"timefromInput\", \"\"], [\"for\", \"timeto\"], [\"type\", \"time\", \"id\", \"timeto\", \"max\", \"21:00\", \"required\", \"\", 3, \"min\", \"input\"], [\"timetoInput\", \"\"], [\"id\", \"time\"], [\"for\", \"course\"], [\"type\", \"text\", \"id\", \"course\", \"formControlName\", \"course\"]],\n  template: function ScheduleFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function ScheduleFormComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.submitSchedule();\n      });\n      i0.ɵɵtemplate(1, ScheduleFormComponent_div_1_Template, 3, 1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"tbody\", 2);\n      i0.ɵɵtemplate(3, ScheduleFormComponent_tr_3_Template, 14, 3, \"tr\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function ScheduleFormComponent_Template_button_click_4_listener() {\n        return ctx.addNewCol();\n      });\n      i0.ɵɵtext(5, \"add Course 1\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 5);\n      i0.ɵɵtext(7, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"pre\");\n      i0.ɵɵtext(9);\n      i0.ɵɵpipe(10, \"json\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"pre\");\n      i0.ɵɵtext(12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"pre\");\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"pre\");\n      i0.ɵɵtext(16);\n      i0.ɵɵpipe(17, \"json\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"pre\");\n      i0.ɵɵtext(19);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.scheduleForm);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.formArr2.value);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.formArr2.controls);\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(10, 8, ctx.scheduleForm.value));\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.scheduleForm.valid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.formArr2.length);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(17, 10, ctx.formArr2.value));\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.formArr.valid);\n    }\n  },\n  dependencies: [i3.NgForOf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i2.FormGroupName, i2.FormArrayName, i3.JsonPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { ScheduleFormComponent };","map":{"version":3,"names":["FormArray","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","c1_r2","ɵɵproperty","weekday_r7","ɵɵlistener","ScheduleFormComponent_tr_3_div_9_Template_input_input_6_listener","restoredCtx","ɵɵrestoreView","_r13","cour_r8","$implicit","_r10","ɵɵreference","_r11","ctx_r12","ɵɵnextContext","ɵɵresetView","formatTimeRange","ScheduleFormComponent_tr_3_div_9_Template_input_input_10_listener","ctx_r14","ɵɵelement","ScheduleFormComponent_tr_3_div_9_Template_button_click_19_listener","i_r9","index","ctx_r15","removeCourse","ɵɵpropertyInterpolate","value","ctx_r6","ɵɵtemplate","ScheduleFormComponent_tr_3_option_5_Template","ScheduleFormComponent_tr_3_div_9_Template","ScheduleFormComponent_tr_3_Template_button_click_10_listener","_r17","ctx_r16","addNewRow","ScheduleFormComponent_tr_3_Template_button_click_12_listener","x_r4","ctx_r18","ctx_r1","weekdays","formArr","controls","timeRangeValidator","control","timeRange","min","max","timeRangePattern","match","invalidTimeRange","startTime","endTime","split","startHour","startMinute","endHour","endMinute","startHourNum","Number","startMinuteNum","endHourNum","endMinuteNum","isNaN","ScheduleFormComponent","timeF","timeT","Course","timeFrom","timeTo","get","setValue","toString","constructor","authService","formBuilder","createContactForm","scheduleForm","group","owner","required","scheduleEntries","array","createScheduleEntryFormGroup","currentUser","userId","dayOfWeek","courses","createCourseFormGroup","time","course","minLength","formArr2","at","former","x","addRow","obj","addCol","obj1","push","clearValidators","addNewCol","ngOnInit","addCourse","coursesArray","removeAt","submitSchedule","valid","console","log","ɵɵdirectiveInject","i1","AuthService","i2","FormBuilder","selectors","decls","vars","consts","template","ScheduleFormComponent_Template","rf","ctx","ScheduleFormComponent_Template_form_ngSubmit_0_listener","ScheduleFormComponent_div_1_Template","ScheduleFormComponent_tr_3_Template","ScheduleFormComponent_Template_button_click_4_listener","ɵɵpipeBind1","length"],"sources":["C:\\Users\\kacpe\\Desktop\\TAW12\\Aplikacja - plan zajęć\\Plan zajec\\PZ\\src\\app\\components\\schedule-form\\schedule-form.component.ts","C:\\Users\\kacpe\\Desktop\\TAW12\\Aplikacja - plan zajęć\\Plan zajec\\PZ\\src\\app\\components\\schedule-form\\schedule-form.component.html"],"sourcesContent":["import {Component, Input, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, FormArray, Validators, AbstractControl} from '@angular/forms';\nimport { ValidatorFn } from '@angular/forms';\nimport {AuthService} from \"../../services/auth.service\";\n\nfunction timeRangeValidator(): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    const timeRange = control.value;\n    const min = '7';\n    const max = '21';\n    if (!timeRange) {\n      return null; // Empty value, no validation needed\n    }\n\n    // Regular expression to match the time range format (hh:mm-hh:mm)\n    const timeRangePattern = /^\\d{2}:\\d{2}-\\d{2}:\\d{2}$/;\n\n    if (!timeRange.match(timeRangePattern)) {\n      return { invalidTimeRange: true }; // Invalid format\n    }\n\n    // Split the time range into start and end times\n    const [startTime, endTime] = timeRange.split('-');\n    const [startHour, startMinute] = startTime.split(':');\n    const [endHour, endMinute] = endTime.split(':');\n\n    // Convert the time components to numbers\n    const startHourNum = Number(startHour);\n    const startMinuteNum = Number(startMinute);\n    const endHourNum = Number(endHour);\n    const endMinuteNum = Number(endMinute);\n\n    // Check if the time components are valid\n    if (\n      isNaN(startHourNum) || isNaN(startMinuteNum) ||\n      isNaN(endHourNum) || isNaN(endMinuteNum) ||\n      startHourNum < 7 || startHourNum > 21 || startMinuteNum < 0 || startMinuteNum > 59 ||\n      endHourNum < startHourNum || endHourNum > 21 || endMinuteNum < startMinuteNum || endMinuteNum > 59\n    ) {\n      return { invalidTimeRange: true }; // Invalid time components\n    }\n\n    // Check if the start time is earlier than the end time\n    if (startHourNum > endHourNum || (startHourNum === endHourNum && startMinuteNum >= endMinuteNum)) {\n      return { invalidTimeRange: true }; // Start time is later or equal to end time\n    }\n\n    return null; // Valid time range\n  };\n}\n\n@Component({\n  selector: 'app-schedule-form',\n  templateUrl: './schedule-form.component.html',\n  styleUrls: ['./schedule-form.component.css']\n})\nexport class ScheduleFormComponent  implements OnInit {\n\n  scheduleForm!: FormGroup;\n  weekdays: string[] = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  formatTimeRange(timeF: HTMLInputElement,timeT: HTMLInputElement,Course: any): string {\n    const timeFrom = timeF.value;\n    const timeTo = timeT.value;\n    Course.get('time')?.setValue((timeFrom+\"-\"+timeTo).toString());\n    return `${timeFrom} - ${timeTo}`;\n  }\n  constructor(public authService: AuthService,private formBuilder: FormBuilder) {\n    this.createContactForm();\n  }\n  createContactForm() {\n    this.scheduleForm = this.formBuilder.group({\n      owner: ['', Validators.required],\n      scheduleEntries: this.formBuilder.array([this.createScheduleEntryFormGroup()])\n    });\n    this.scheduleForm.get('owner')?.setValue(this.authService.currentUser.userId);\n  }\n  createScheduleEntryFormGroup(): FormGroup {\n    return this.formBuilder.group({\n      dayOfWeek: ['', Validators.required],\n      courses: this.formBuilder.array([this.createCourseFormGroup()])\n    });\n  }\n  createCourseFormGroup(): FormGroup {\n    return this.formBuilder.group({\n      time: ['',[Validators.required,timeRangeValidator()]],\n      course: ['',[Validators.required,Validators.minLength(2)]]\n    });\n  }\n  get formArr() {\n    return this.formArr2.at(0).get('courses') as FormArray;\n  }\n\n  get formArr2() {\n    return this.scheduleForm.get('scheduleEntries') as FormArray;\n  }\n\n  former(x: any) {\n    return this.formBuilder.array(x) as FormArray;\n  }\n  addRow({obj}: { obj: any }) {\n    return this.formBuilder.group({\n      time: [obj.time,[Validators.required,timeRangeValidator()]],\n      course: [obj.course,[Validators.required,timeRangeValidator()]],\n    });\n  }\n  addCol() {\n    return this.formBuilder.group({\n      dayOfWeek: ['', Validators.required],\n      courses: this.formBuilder.array([this.createCourseFormGroup()])\n    });\n  }\n  addNewRow() {\n    let obj1 = {\n      time: '',\n      course: '',\n    };\n    this.formArr.push(this.addRow({obj: obj1}));\n    this.formArr.clearValidators();\n\n  }\n  addNewCol() {\n    let obj1 = {\n      time: '',\n      course: '',\n    };\n    this.formArr2.push(this.addCol());\n    this.formArr2.clearValidators();\n\n  }\n  ngOnInit(): void {\n  }\n\n\n  addCourse(): void {\n    const coursesArray = this.scheduleForm.get('courses') as FormArray;\n    coursesArray.push(this.createCourseFormGroup());\n  }\n\n  removeCourse(index: number): void {\n    const coursesArray = this.formArr as FormArray;\n    coursesArray.removeAt(index);\n  }\n\n  submitSchedule(): void {\n    if (this.scheduleForm.valid) {\n\n        console.log(\"ok\");\n           // Send the form data to your backend API for saving to the database\n      // You can use Angular's HttpClient to make the API request\n    }else{\n      console.log(\"!ok\");\n    }\n  }\n\n  protected readonly FormArray = FormArray;\n}\n","<form [formGroup]=\"scheduleForm\" (ngSubmit)=\"submitSchedule()\">\n  <div *ngFor=\"let c1 of formArr2.value \">\n  <p>{{c1 }}</p>\n\n\n  </div>\n  <tbody formArrayName=\"scheduleEntries\">\n  <tr *ngFor=\"let course of formArr2.controls; let x = index;\" [formGroupName]=\"x\">\n    <td>\n      <label for=\"dayOfWeek\">dayOfWeek:</label>\n      <select id=\"dayOfWeek\" formControlName=\"dayOfWeek\">\n        <option *ngFor=\"let weekday of weekdays\" [value]=\"weekday\">{{ weekday }}</option>\n      </select>\n    </td>\n    <td formArrayName=\"courses\">\n      <label for=\"2222\">dayOfWeek:</label>\n        <div  id=\"2222\" *ngFor=\"let cour of formArr.controls ; let i = index;\" [formGroupName]=\"i\">\n\n            <label for=\"times\">Time:</label>\n          <div id=\"times\">\n            <label for=\"timefrom\">From:</label>\n            <input type=\"time\" id=\"timefrom\" #timefromInput (input)=\"formatTimeRange(timefromInput,timetoInput,cour);\" min=\"07:00\" max=\"21:00\" required />\n            <label for=\"timeto\">To:</label>\n            <input type=\"time\" id=\"timeto\" #timetoInput (input)=\"formatTimeRange(timefromInput,timetoInput,cour); \" min=\"{{timefromInput.value}}\" max=\"21:00\" required />\n\n\n          </div>\n\n          <div>Time Range: <p id=\"time\" >{{ formatTimeRange(timefromInput,timetoInput,cour) }}</p></div>\n            <label for=\"course\">Course:</label>\n            <input type=\"text\" id=\"course\" formControlName=\"course\" />\n\n          <button type=\"button\" (click)=\"removeCourse(i)\">Remove Course 1</button>\n        </div>\n      <button type=\"button\" (click)=\"addNewRow()\" class=\"btn btn-dark\">add Course 1</button>\n    </td>\n\n    <button type=\"button\" (click)=\"removeCourse(x)\">Remove Course 2</button>\n\n  </tr>\n  </tbody>\n  <button type=\"button\" (click)=\"addNewCol()\" class=\"btn btn-dark\">add Course 1</button>\n  <button type=\"submit\">Submit</button>\n  <pre>{{ scheduleForm.value | json }}</pre>\n  <pre>{{ scheduleForm.valid }}</pre>\n  <pre>{{ formArr2.length }}</pre>\n  <pre>{{ formArr2.value| json}}</pre>\n  <pre>{{ formArr.valid }}</pre>\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}