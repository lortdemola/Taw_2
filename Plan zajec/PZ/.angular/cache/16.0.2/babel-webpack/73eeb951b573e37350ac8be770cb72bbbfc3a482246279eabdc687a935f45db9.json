{"ast":null,"code":"import { FormArray, Validators, AbstractControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"../../services/data.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction ScheduleFormEditComponent_tr_2_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const weekday_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", weekday_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(weekday_r5);\n  }\n}\nfunction ScheduleFormEditComponent_tr_2_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"label\", 17);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 18)(4, \"label\", 19);\n    i0.ɵɵtext(5, \"Time:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 20)(7, \"label\", 21);\n    i0.ɵɵtext(8, \"From:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"input\", 22, 23);\n    i0.ɵɵlistener(\"input\", function ScheduleFormEditComponent_tr_2_div_12_Template_input_input_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const cour_r6 = restoredCtx.$implicit;\n      const _r8 = i0.ɵɵreference(10);\n      const _r9 = i0.ɵɵreference(14);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.formatTimeRange(_r8, _r9, cour_r6));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"label\", 24);\n    i0.ɵɵtext(12, \"To:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"input\", 25, 26);\n    i0.ɵɵlistener(\"input\", function ScheduleFormEditComponent_tr_2_div_12_Template_input_input_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const cour_r6 = restoredCtx.$implicit;\n      const _r8 = i0.ɵɵreference(10);\n      const _r9 = i0.ɵɵreference(14);\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.formatTimeRange(_r8, _r9, cour_r6));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\");\n    i0.ɵɵtext(16, \"Time Range: \");\n    i0.ɵɵelementStart(17, \"p\", 27);\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"label\", 28);\n    i0.ɵɵtext(20, \"Course:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(21, \"input\", 29);\n    i0.ɵɵelementStart(22, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function ScheduleFormEditComponent_tr_2_div_12_Template_button_click_22_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const i_r7 = restoredCtx.index;\n      const course_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.removeCourse(i_r7, course_r1));\n    });\n    i0.ɵɵtext(23, \"Remove Course\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const cour_r6 = ctx.$implicit;\n    const i_r7 = ctx.index;\n    const _r8 = i0.ɵɵreference(10);\n    const _r9 = i0.ɵɵreference(14);\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"formGroupName\", i_r7);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Course \", i_r7 + 1, \":\");\n    i0.ɵɵadvance(11);\n    i0.ɵɵpropertyInterpolate(\"min\", _r8.value);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r4.formatTimeRange(_r8, _r9, cour_r6));\n  }\n}\nfunction ScheduleFormEditComponent_tr_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 6)(1, \"div\", 7)(2, \"td\")(3, \"label\", 8);\n    i0.ɵɵtext(4, \"dayOfWeek:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"select\", 9);\n    i0.ɵɵtemplate(6, ScheduleFormEditComponent_tr_2_option_6_Template, 2, 2, \"option\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function ScheduleFormEditComponent_tr_2_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const x_r2 = restoredCtx.index;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.removeDay(x_r2));\n    });\n    i0.ɵɵtext(8, \"Remove Day\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"td\", 12)(10, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function ScheduleFormEditComponent_tr_2_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const course_r1 = restoredCtx.$implicit;\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.addNewRow(course_r1));\n    });\n    i0.ɵɵtext(11, \"add Course\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, ScheduleFormEditComponent_tr_2_div_12_Template, 24, 4, \"div\", 14);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const course_r1 = ctx.$implicit;\n    const x_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroupName\", x_r2);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.weekdays);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.former(course_r1).controls);\n  }\n}\nfunction timeRangeValidator() {\n  return control => {\n    const timeRange = control.value;\n    const min = '7';\n    const max = '21';\n    if (!timeRange) {\n      return null; // Empty value, no validation needed\n    }\n    // Regular expression to match the time range format (hh:mm-hh:mm)\n    const timeRangePattern = /^\\d{2}:\\d{2}-\\d{2}:\\d{2}$/;\n    if (!timeRange.match(timeRangePattern)) {\n      return {\n        invalidTimeRange: true\n      }; // Invalid format\n    }\n    // Split the time range into start and end times\n    const [startTime, endTime] = timeRange.split('-');\n    const [startHour, startMinute] = startTime.split(':');\n    const [endHour, endMinute] = endTime.split(':');\n    // Convert the time components to numbers\n    const startHourNum = Number(startHour);\n    const startMinuteNum = Number(startMinute);\n    const endHourNum = Number(endHour);\n    const endMinuteNum = Number(endMinute);\n    // Check if the time components are valid\n    if (isNaN(startHourNum) || isNaN(startMinuteNum) || isNaN(endHourNum) || isNaN(endMinuteNum) || startHourNum < 7 || startHourNum > 21 || startMinuteNum < 0 || startMinuteNum > 59 || endHourNum < startHourNum || endHourNum > 21 || endMinuteNum < startMinuteNum || endMinuteNum > 59) {\n      return {\n        invalidTimeRange: true\n      }; // Invalid time components\n    }\n    // Check if the start time is earlier than the end time\n    if (startHourNum > endHourNum || startHourNum === endHourNum && startMinuteNum >= endMinuteNum) {\n      return {\n        invalidTimeRange: true\n      }; // Start time is later or equal to end time\n    }\n\n    return null; // Valid time range\n  };\n}\n\nclass ScheduleFormEditComponent {\n  formatTimeRange(timeF, timeT, Course) {\n    const timeFrom = timeF.value;\n    const timeTo = timeT.value;\n    Course.get('time')?.setValue((timeFrom + \"-\" + timeTo).toString());\n    return `${timeFrom} - ${timeTo}`;\n  }\n  constructor(authService, dataService, formBuilder) {\n    this.authService = authService;\n    this.dataService = dataService;\n    this.formBuilder = formBuilder;\n    this.hmm = this.formBuilder.group({});\n    this.weekdays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    this.FormArray = FormArray;\n    this.AbstractControl = AbstractControl;\n    this.createContactForm();\n    this.loadSchedule();\n  }\n  createContactForm() {\n    this.scheduleForm = this.formBuilder.group({\n      owner: ['', Validators.required],\n      scheduleEntries: this.formBuilder.array([this.createScheduleEntryFormGroup()])\n    });\n    this.scheduleForm.get('owner')?.setValue(this.authService.currentUser.userId);\n  }\n  createScheduleEntryFormGroup() {\n    return this.formBuilder.group({\n      dayOfWeek: ['', Validators.required],\n      courses: this.formBuilder.array([this.createCourseFormGroup()])\n    });\n  }\n  createCourseFormGroup() {\n    return this.formBuilder.group({\n      time: ['', [Validators.required, timeRangeValidator()]],\n      course: ['', [Validators.required, Validators.minLength(2)]]\n    });\n  }\n  get formArr2() {\n    return this.scheduleForm.get('scheduleEntries');\n  }\n  former(x) {\n    return x.get('courses');\n  }\n  addCol() {\n    return this.formBuilder.group({\n      dayOfWeek: ['', Validators.required],\n      courses: this.formBuilder.array([this.createCourseFormGroup()])\n    });\n  }\n  addNewCol() {\n    let obj1 = {\n      time: '',\n      course: ''\n    };\n    if (this.formArr2.length < 6) {\n      this.formArr2.push(this.addCol());\n    }\n    return 0;\n  }\n  addRow({\n    obj\n  }) {\n    return this.formBuilder.group({\n      time: [obj.time, [Validators.required, timeRangeValidator()]],\n      course: [obj.course, [Validators.required, timeRangeValidator()]]\n    });\n  }\n  addNewRow(t) {\n    let obj1 = {\n      time: '',\n      course: ''\n    };\n    t.get('courses').push(this.addRow({\n      obj: obj1\n    }));\n  }\n  ngOnInit() {}\n  addCourse() {\n    const coursesArray = this.scheduleForm.get('courses');\n    coursesArray.push(this.createCourseFormGroup());\n  }\n  removeCourse(index, t) {\n    const coursesArray = t.get('courses');\n    coursesArray.removeAt(index);\n  }\n  removeDay(index) {\n    const coursesArray = this.formArr2;\n    coursesArray.removeAt(index);\n  }\n  loadSchedule() {\n    this.dataService.getScheduleByUserId(this.authService.currentUser.userId).subscribe(data => {\n      console.log(this.scheduleForm);\n      let s = data;\n      console.log(s);\n      s.addControl('owner', this.formBuilder.control('', [Validators.required]));\n      console.log(s);\n      //this.hmm.addControl('nationality', this.formBuilder.control('', [Validators.required]));\n      console.log(this.hmm);\n    });\n  }\n  submitSchedule() {\n    if (this.scheduleForm.valid) {\n      console.log(\"ok\");\n      // Send the form data to your backend API for saving to the database\n      // You can use Angular's HttpClient to make the API request\n      this.dataService.createSchedule(this.scheduleForm.value).subscribe(() => {\n        console.log(\"created\");\n      });\n    } else {\n      console.log(\"!ok\");\n    }\n  }\n}\nScheduleFormEditComponent.ɵfac = function ScheduleFormEditComponent_Factory(t) {\n  return new (t || ScheduleFormEditComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.DataService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nScheduleFormEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ScheduleFormEditComponent,\n  selectors: [[\"app-schedule-form-edit\"]],\n  decls: 11,\n  vars: 5,\n  consts: [[2, \"height\", \"88vh\", \"min-width\", \"100vw\", 3, \"formGroup\", \"ngSubmit\"], [\"formArrayName\", \"scheduleEntries\", 1, \"row\"], [\"class\", \"column\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [2, \"color\", \"white\"], [\"type\", \"button\", 1, \"btn\", \"btn-dark\", \"buttons\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-light\", \"buttons\"], [1, \"column\", 3, \"formGroupName\"], [1, \"m-1\"], [\"for\", \"dayOfWeek\"], [\"id\", \"dayOfWeek\", \"formControlName\", \"dayOfWeek\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-light\", \"m-2\", 3, \"click\"], [\"formArrayName\", \"courses\", 1, \"each\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"m-2\", 3, \"click\"], [\"class\", \"each2\", \"id\", \"2222\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [\"id\", \"2222\", 1, \"each2\", 3, \"formGroupName\"], [\"for\", \"cors\"], [\"id\", \"cors\", 1, \"doc\"], [\"for\", \"times\"], [\"id\", \"times\"], [\"for\", \"timefrom\"], [\"type\", \"time\", \"id\", \"timefrom\", \"min\", \"07:00\", \"max\", \"21:00\", \"required\", \"\", 3, \"input\"], [\"timefromInput\", \"\"], [\"for\", \"timeto\"], [\"type\", \"time\", \"id\", \"timeto\", \"max\", \"21:00\", \"required\", \"\", 3, \"min\", \"input\"], [\"timetoInput\", \"\"], [\"id\", \"time\"], [\"for\", \"course\"], [\"type\", \"text\", \"id\", \"course\", \"formControlName\", \"course\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", \"m-md-2\", 3, \"click\"]],\n  template: function ScheduleFormEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function ScheduleFormEditComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.submitSchedule();\n      });\n      i0.ɵɵelementStart(1, \"tbody\", 1);\n      i0.ɵɵtemplate(2, ScheduleFormEditComponent_tr_2_Template, 13, 3, \"tr\", 2);\n      i0.ɵɵelementStart(3, \"tr\")(4, \"pre\", 3);\n      i0.ɵɵtext(5);\n      i0.ɵɵpipe(6, \"json\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function ScheduleFormEditComponent_Template_button_click_7_listener() {\n        return ctx.addNewCol();\n      });\n      i0.ɵɵtext(8, \"add Day\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 5);\n      i0.ɵɵtext(10, \"Submit\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.scheduleForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.formArr2.controls);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 3, ctx.hmm));\n    }\n  },\n  dependencies: [i4.NgForOf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i3.FormGroupName, i3.FormArrayName, i4.JsonPipe],\n  styles: [\"button[_ngcontent-%COMP%]{\\r\\n\\r\\n  background-color: #494750;\\r\\n  color: whitesmoke;\\r\\n}\\r\\n.buttons[_ngcontent-%COMP%]{\\r\\n  width: 10vw;\\r\\n  height: 10vh;\\r\\n  background-color: #494750;\\r\\n  color: whitesmoke;\\r\\n}\\r\\ntbody[_ngcontent-%COMP%] {\\r\\n  border-collapse: collapse;\\r\\n  border-spacing: 0;\\r\\n  display: flex;\\r\\n  flex-direction: row;\\r\\n\\r\\n  margin-left: 0px;\\r\\n  width: 100%;\\r\\n  max-height: 100vh;\\r\\n  border: 10px solid rgba(0, 0, 0, 0);\\r\\n}\\r\\ntr.column[_ngcontent-%COMP%] {\\r\\n  display: block;\\r\\n  float: left;\\r\\n  width: 33.33%; \\r\\n  box-sizing: border-box;\\r\\n  overflow-y: scroll;\\r\\n  height: 38vh;\\r\\n  border: 2px solid #000000;\\r\\n  scroll-behavior: smooth;\\r\\n\\r\\n}\\r\\ntd[_ngcontent-%COMP%] {\\r\\n\\r\\n\\r\\n  text-align: left;\\r\\n  padding: 10px;\\r\\n  background-color: #130F20;\\r\\n  color: white;\\r\\n\\r\\n}\\r\\n.each[_ngcontent-%COMP%] {\\r\\n\\r\\n  text-align: left;\\r\\n  padding: 5px;\\r\\n  background-color: #2E2B38;\\r\\n\\r\\n}\\r\\ninput[_ngcontent-%COMP%], select[_ngcontent-%COMP%]{\\r\\n  background-color: #494750;\\r\\n  color: whitesmoke;\\r\\n\\r\\n}\\r\\n\\r\\n.doc[_ngcontent-%COMP%] {\\r\\n  border: 1px solid #000000;\\r\\n  text-align: left;\\r\\n  padding: 16px;\\r\\n  background-color: #3C3944;\\r\\n\\r\\n}\\r\\n.each2[_ngcontent-%COMP%]:nth-child(even){\\r\\n  background-color: #57555C;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9zY2hlZHVsZS1mb3JtLWVkaXQvc2NoZWR1bGUtZm9ybS1lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFLQSw0QkFBNEI7O0FBRTVCOztFQUVFLHlCQUF5QjtFQUN6QixpQkFBaUI7QUFDbkI7QUFDQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1oseUJBQXlCO0VBQ3pCLGlCQUFpQjtBQUNuQjtBQUNBO0VBQ0UseUJBQXlCO0VBQ3pCLGlCQUFpQjtFQUNqQixhQUFhO0VBQ2IsbUJBQW1COztFQUVuQixnQkFBZ0I7RUFDaEIsV0FBVztFQUNYLGlCQUFpQjtFQUNqQixtQ0FBbUM7QUFDckM7QUFDQTtFQUNFLGNBQWM7RUFDZCxXQUFXO0VBQ1gsYUFBYSxFQUFFLDhEQUE4RDtFQUM3RSxzQkFBc0I7RUFDdEIsa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWix5QkFBeUI7RUFDekIsdUJBQXVCOztBQUV6QjtBQUNBOzs7RUFHRSxnQkFBZ0I7RUFDaEIsYUFBYTtFQUNiLHlCQUF5QjtFQUN6QixZQUFZOztBQUVkO0FBQ0E7O0VBRUUsZ0JBQWdCO0VBQ2hCLFlBQVk7RUFDWix5QkFBeUI7O0FBRTNCO0FBQ0E7RUFDRSx5QkFBeUI7RUFDekIsaUJBQWlCOztBQUVuQjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixnQkFBZ0I7RUFDaEIsYUFBYTtFQUNiLHlCQUF5Qjs7QUFFM0I7QUFDQTtFQUNFLHlCQUF5QjtBQUMzQiIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5cclxuXHJcblxyXG5cclxuLyogQ2xlYXJmaXggKGNsZWFyIGZsb2F0cykgKi9cclxuXHJcbmJ1dHRvbntcclxuXHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzQ5NDc1MDtcclxuICBjb2xvcjogd2hpdGVzbW9rZTtcclxufVxyXG4uYnV0dG9uc3tcclxuICB3aWR0aDogMTB2dztcclxuICBoZWlnaHQ6IDEwdmg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzQ5NDc1MDtcclxuICBjb2xvcjogd2hpdGVzbW9rZTtcclxufVxyXG50Ym9keSB7XHJcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICBib3JkZXItc3BhY2luZzogMDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcblxyXG4gIG1hcmdpbi1sZWZ0OiAwcHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgbWF4LWhlaWdodDogMTAwdmg7XHJcbiAgYm9yZGVyOiAxMHB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMCk7XHJcbn1cclxudHIuY29sdW1uIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBmbG9hdDogbGVmdDtcclxuICB3aWR0aDogMzMuMzMlOyAvKiBBZGp1c3QgdGhpcyB2YWx1ZSBiYXNlZCBvbiB0aGUgbnVtYmVyIG9mIGNvbHVtbnMgeW91IHdhbnQgKi9cclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcclxuICBoZWlnaHQ6IDM4dmg7XHJcbiAgYm9yZGVyOiAycHggc29saWQgIzAwMDAwMDtcclxuICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDtcclxuXHJcbn1cclxudGQge1xyXG5cclxuXHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMxMzBGMjA7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG5cclxufVxyXG4uZWFjaCB7XHJcblxyXG4gIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgcGFkZGluZzogNXB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMyRTJCMzg7XHJcblxyXG59XHJcbmlucHV0LHNlbGVjdHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDk0NzUwO1xyXG4gIGNvbG9yOiB3aGl0ZXNtb2tlO1xyXG5cclxufVxyXG5cclxuLmRvYyB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgIzAwMDAwMDtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIHBhZGRpbmc6IDE2cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzNDMzk0NDtcclxuXHJcbn1cclxuLmVhY2gyOm50aC1jaGlsZChldmVuKXtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTc1NTVDO1xyXG59XHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nexport { ScheduleFormEditComponent };","map":{"version":3,"names":["FormArray","Validators","AbstractControl","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","weekday_r5","ɵɵadvance","ɵɵtextInterpolate","ɵɵlistener","ScheduleFormEditComponent_tr_2_div_12_Template_input_input_9_listener","restoredCtx","ɵɵrestoreView","_r11","cour_r6","$implicit","_r8","ɵɵreference","_r9","ctx_r10","ɵɵnextContext","ɵɵresetView","formatTimeRange","ScheduleFormEditComponent_tr_2_div_12_Template_input_input_13_listener","ctx_r12","ɵɵelement","ScheduleFormEditComponent_tr_2_div_12_Template_button_click_22_listener","i_r7","index","course_r1","ctx_r13","removeCourse","ɵɵtextInterpolate1","ɵɵpropertyInterpolate","value","ctx_r4","ɵɵtemplate","ScheduleFormEditComponent_tr_2_option_6_Template","ScheduleFormEditComponent_tr_2_Template_button_click_7_listener","_r16","x_r2","ctx_r15","removeDay","ScheduleFormEditComponent_tr_2_Template_button_click_10_listener","ctx_r17","addNewRow","ScheduleFormEditComponent_tr_2_div_12_Template","ctx_r0","weekdays","former","controls","timeRangeValidator","control","timeRange","min","max","timeRangePattern","match","invalidTimeRange","startTime","endTime","split","startHour","startMinute","endHour","endMinute","startHourNum","Number","startMinuteNum","endHourNum","endMinuteNum","isNaN","ScheduleFormEditComponent","timeF","timeT","Course","timeFrom","timeTo","get","setValue","toString","constructor","authService","dataService","formBuilder","hmm","group","createContactForm","loadSchedule","scheduleForm","owner","required","scheduleEntries","array","createScheduleEntryFormGroup","currentUser","userId","dayOfWeek","courses","createCourseFormGroup","time","course","minLength","formArr2","x","addCol","addNewCol","obj1","length","push","addRow","obj","t","ngOnInit","addCourse","coursesArray","removeAt","getScheduleByUserId","subscribe","data","console","log","s","addControl","submitSchedule","valid","createSchedule","ɵɵdirectiveInject","i1","AuthService","i2","DataService","i3","FormBuilder","selectors","decls","vars","consts","template","ScheduleFormEditComponent_Template","rf","ctx","ScheduleFormEditComponent_Template_form_ngSubmit_0_listener","ScheduleFormEditComponent_tr_2_Template","ScheduleFormEditComponent_Template_button_click_7_listener","ɵɵpipeBind1"],"sources":["C:\\Users\\kacpe\\Desktop\\TAW12\\Aplikacja - plan zajęć\\Plan zajec\\PZ\\src\\app\\components\\schedule-form-edit\\schedule-form-edit.component.ts","C:\\Users\\kacpe\\Desktop\\TAW12\\Aplikacja - plan zajęć\\Plan zajec\\PZ\\src\\app\\components\\schedule-form-edit\\schedule-form-edit.component.html"],"sourcesContent":["import {Component, Input, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, FormArray, Validators, AbstractControl, FormControl} from '@angular/forms';\nimport { ValidatorFn } from '@angular/forms';\nimport {AuthService} from \"../../services/auth.service\";\nimport {DataService} from \"../../services/data.service\";\nfunction timeRangeValidator(): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    const timeRange = control.value;\n    const min = '7';\n    const max = '21';\n    if (!timeRange) {\n      return null; // Empty value, no validation needed\n    }\n\n    // Regular expression to match the time range format (hh:mm-hh:mm)\n    const timeRangePattern = /^\\d{2}:\\d{2}-\\d{2}:\\d{2}$/;\n\n    if (!timeRange.match(timeRangePattern)) {\n      return { invalidTimeRange: true }; // Invalid format\n    }\n\n    // Split the time range into start and end times\n    const [startTime, endTime] = timeRange.split('-');\n    const [startHour, startMinute] = startTime.split(':');\n    const [endHour, endMinute] = endTime.split(':');\n\n    // Convert the time components to numbers\n    const startHourNum = Number(startHour);\n    const startMinuteNum = Number(startMinute);\n    const endHourNum = Number(endHour);\n    const endMinuteNum = Number(endMinute);\n\n    // Check if the time components are valid\n    if (\n      isNaN(startHourNum) || isNaN(startMinuteNum) ||\n      isNaN(endHourNum) || isNaN(endMinuteNum) ||\n      startHourNum < 7 || startHourNum > 21 || startMinuteNum < 0 || startMinuteNum > 59 ||\n      endHourNum < startHourNum || endHourNum > 21 || endMinuteNum < startMinuteNum || endMinuteNum > 59\n    ) {\n      return { invalidTimeRange: true }; // Invalid time components\n    }\n\n    // Check if the start time is earlier than the end time\n    if (startHourNum > endHourNum || (startHourNum === endHourNum && startMinuteNum >= endMinuteNum)) {\n      return { invalidTimeRange: true }; // Start time is later or equal to end time\n    }\n\n    return null; // Valid time range\n  };\n}\n@Component({\n  selector: 'app-schedule-form-edit',\n  templateUrl: './schedule-form-edit.component.html',\n  styleUrls: ['./schedule-form-edit.component.css']\n})\nexport class ScheduleFormEditComponent implements OnInit {\n  hmm: FormGroup = this.formBuilder.group({});\n  scheduleForm!: FormGroup;\n  weekdays: string[] = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  formatTimeRange(timeF: HTMLInputElement,timeT: HTMLInputElement,Course: any): string {\n    const timeFrom = timeF.value;\n    const timeTo = timeT.value;\n    Course.get('time')?.setValue((timeFrom+\"-\"+timeTo).toString());\n    return `${timeFrom} - ${timeTo}`;\n  }\n  constructor(public authService: AuthService,private dataService: DataService,private formBuilder: FormBuilder) {\n    this.createContactForm();\n    this.loadSchedule();\n  }\n  createContactForm() {\n    this.scheduleForm = this.formBuilder.group({\n      owner: ['', Validators.required],\n      scheduleEntries: this.formBuilder.array([this.createScheduleEntryFormGroup()])\n    });\n    this.scheduleForm.get('owner')?.setValue(this.authService.currentUser.userId);\n  }\n  createScheduleEntryFormGroup(): FormGroup {\n    return this.formBuilder.group({\n      dayOfWeek: ['', Validators.required],\n      courses: this.formBuilder.array([this.createCourseFormGroup()])\n    });\n  }\n  createCourseFormGroup(): FormGroup {\n    return this.formBuilder.group({\n      time: ['',[Validators.required,timeRangeValidator()]],\n      course: ['',[Validators.required,Validators.minLength(2)]]\n    });\n  }\n  get formArr2() {\n    return this.scheduleForm.get('scheduleEntries') as FormArray;\n  }\n  former(x: AbstractControl) {\n    return x.get('courses') as FormArray;\n  }\n  addCol() {\n\n    return this.formBuilder.group({\n      dayOfWeek: ['', Validators.required],\n      courses: this.formBuilder.array([this.createCourseFormGroup()])\n    });\n\n  }\n  addNewCol() {\n    let obj1 = {\n      time: '',\n      course: '',\n    };\n    if(this.formArr2.length <6){\n      this.formArr2.push(this.addCol());\n\n    }\n    return 0;\n  }\n  addRow({obj}: { obj: any }) {\n    return this.formBuilder.group({\n      time: [obj.time,[Validators.required,timeRangeValidator()]],\n      course: [obj.course,[Validators.required,timeRangeValidator()]],\n    });\n  }\n  addNewRow(t : any) {\n    let obj1 = {\n      time: '',\n      course: '',\n    };\n    t.get('courses').push(this.addRow({obj: obj1}));\n\n\n  }\n  ngOnInit(): void {\n  }\n\n\n  addCourse(): void {\n    const coursesArray = this.scheduleForm.get('courses') as FormArray;\n    coursesArray.push(this.createCourseFormGroup());\n  }\n\n  removeCourse(index: number,t : any): void {\n    const coursesArray = t.get('courses') as FormArray;\n    coursesArray.removeAt(index);\n  }\n  removeDay(index: number): void {\n    const coursesArray = this.formArr2 as FormArray;\n    coursesArray.removeAt(index);\n  }\n  loadSchedule() {\n    this.dataService.getScheduleByUserId(this.authService.currentUser.userId).subscribe(data => {\n\n      console.log(this.scheduleForm);\n      let s =(data as FormGroup);\n      console.log(s);\n      s.addControl('owner',this.formBuilder.control('', [Validators.required]));\n\n      console.log(s);\n      //this.hmm.addControl('nationality', this.formBuilder.control('', [Validators.required]));\n      console.log(this.hmm);\n    });\n  }\n  submitSchedule(): void {\n    if (this.scheduleForm.valid) {\n\n      console.log(\"ok\");\n      // Send the form data to your backend API for saving to the database\n      // You can use Angular's HttpClient to make the API request\n      this.dataService.createSchedule(this.scheduleForm.value).subscribe(()=>\n      {\n        console.log(\"created\");\n      });\n    }else{\n      console.log(\"!ok\");\n    }\n  }\n\n  protected readonly FormArray = FormArray;\n  protected readonly AbstractControl = AbstractControl;\n}\n","<form style=\"height: 88vh;min-width: 100vw\" [formGroup]=\"scheduleForm\" (ngSubmit)=\"submitSchedule()\">\n\n  <tbody class=\"row\" formArrayName=\"scheduleEntries\">\n  <tr class=\"column\" *ngFor=\"let course of formArr2.controls; let x = index;\" [formGroupName]=\"x\">\n    <div class=\"m-1  \">\n      <td>\n        <label for=\"dayOfWeek\">dayOfWeek:</label>\n        <select id=\"dayOfWeek\" formControlName=\"dayOfWeek\">\n          <option *ngFor=\"let weekday of weekdays\" [value]=\"weekday\">{{ weekday }}</option>\n        </select>\n        <button type=\"button\" class=\"btn btn-light m-2\" (click)=\"removeDay(x)\">Remove Day</button>\n      </td>\n      <td class=\"each\" formArrayName=\"courses\">\n        <button type=\"button\"  (click)=\"addNewRow(course)\" class=\"btn btn-success m-2\">add Course</button>\n        <div class=\"each2\" id=\"2222\" *ngFor=\"let cour of former(course).controls ; let i = index;\" [formGroupName]=\"i\">\n          <label for=\"cors\">Course {{i+1}}:</label>\n          <div id=\"cors\" class=\"doc\">\n            <label for=\"times\">Time:</label>\n            <div id=\"times\">\n              <label for=\"timefrom\">From:</label>\n              <input type=\"time\" id=\"timefrom\" #timefromInput (input)=\"formatTimeRange(timefromInput,timetoInput,cour);\" min=\"07:00\" max=\"21:00\" required />\n              <label for=\"timeto\">To:</label>\n              <input type=\"time\" id=\"timeto\" #timetoInput (input)=\"formatTimeRange(timefromInput,timetoInput,cour); \" min=\"{{timefromInput.value}}\" max=\"21:00\" required />\n\n\n            </div>\n\n            <div>Time Range: <p id=\"time\" >{{ formatTimeRange(timefromInput,timetoInput,cour) }}</p></div>\n            <label for=\"course\">Course:</label>\n            <input type=\"text\" id=\"course\" formControlName=\"course\" />\n\n            <button type=\"button\" class=\"btn btn-danger m-md-2\" (click)=\"removeCourse(i,course)\">Remove Course</button>\n\n\n\n          </div></div>\n\n\n      </td>\n\n\n    </div>\n  </tr>\n  <tr>\n    <pre style=\"color: white\">{{hmm |json}}</pre>\n  </tr>\n  <button type=\"button\" (click)=\"addNewCol()\" class=\"btn btn-dark buttons\">add Day</button>\n  <button class=\"btn btn-light buttons\" type=\"submit\">Submit</button>\n  </tbody>\n\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}