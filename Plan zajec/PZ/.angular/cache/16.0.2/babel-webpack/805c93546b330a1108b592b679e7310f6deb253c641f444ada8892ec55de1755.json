{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"../services/data.service\";\nimport * as i3 from \"@angular/router\";\nclass EditProductComponent {\n  constructor(authService, productService, route, router) {\n    this.authService = authService;\n    this.productService = productService;\n    this.route = route;\n    this.router = router;\n    this.credentials = {\n      id: '',\n      image: '',\n      title: '',\n      description: '',\n      price: '',\n      seller: this.authService.currentUser.name\n    }; // Object to hold the form data\n    this.productId = ''; // Property to store the product ID\n  }\n\n  ngOnInit() {\n    // Get the product ID from the route parameters\n    let id = '';\n    this.route.paramMap.subscribe(params => {\n      id = params.get('id');\n      this.productId = id;\n    });\n    this.productService.getById(id).subscribe(res => {\n      this.credentials = res;\n    });\n  }\n  updateProduct() {\n    this.productService.Update(this.credentials).subscribe(result => {\n      return result;\n    });\n    this.router.navigate(['/']);\n  }\n}\nEditProductComponent.ɵfac = function EditProductComponent_Factory(t) {\n  return new (t || EditProductComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.DataService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n};\nEditProductComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditProductComponent,\n  selectors: [[\"-edit-product\"]],\n  decls: 2,\n  vars: 0,\n  template: function EditProductComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"edit-product works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { EditProductComponent };","map":{"version":3,"names":["EditProductComponent","constructor","authService","productService","route","router","credentials","id","image","title","description","price","seller","currentUser","name","productId","ngOnInit","paramMap","subscribe","params","get","getById","res","updateProduct","Update","result","navigate","i0","ɵɵdirectiveInject","i1","AuthService","i2","DataService","i3","ActivatedRoute","Router","selectors","decls","vars","template","EditProductComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["E:\\Taw\\blog11\\blog\\blog\\src\\app\\edit-product\\edit-product.component.ts","E:\\Taw\\blog11\\blog\\blog\\src\\app\\edit-product\\edit-product.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {DataService} from \"../services/data.service\";\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {AuthService} from \"../services/auth.service\";\n\n@Component({\n  selector: '-edit-product',\n  templateUrl: './edit-product.component.html',\n  styleUrls: ['./edit-product.component.css']\n})\nexport class EditProductComponent implements OnInit {\n  public credentials = {\n    id: '',\n    image: '',\n    title: '',\n    description: '',\n    price: '',\n    seller:this.authService.currentUser.name,\n\n\n  };// Object to hold the form data\n  productId: string = ''; // Property to store the product ID\n\n  constructor(private authService: AuthService,private productService: DataService, private route: ActivatedRoute,public router: Router) { }\n\n  ngOnInit(): void {\n    // Get the product ID from the route parameters\n\n    let id: string = '';\n    this.route.paramMap\n      .subscribe((params: any) => {\n        id = params.get('id');\n        this.productId = id;\n      });\n\n    this.productService.getById(id).subscribe((res: any) => {\n      this.credentials = res;\n    });\n\n  }\n\n  updateProduct(): void {\n    this.productService.Update(this.credentials).subscribe((result) => {\n      return result;\n    });\n    this.router.navigate(['/']);\n  }\n}\n","<p>edit-product works!</p>\n"],"mappings":";;;;AAKA,MAKaA,oBAAoB;EAa/BC,YAAoBC,WAAwB,EAASC,cAA2B,EAAUC,KAAqB,EAAQC,MAAc;IAAjH,KAAAH,WAAW,GAAXA,WAAW;IAAsB,KAAAC,cAAc,GAAdA,cAAc;IAAuB,KAAAC,KAAK,GAALA,KAAK;IAAwB,KAAAC,MAAM,GAANA,MAAM;IAZtH,KAAAC,WAAW,GAAG;MACnBC,EAAE,EAAE,EAAE;MACNC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAC,IAAI,CAACV,WAAW,CAACW,WAAW,CAACC;KAGrC,CAAC;IACF,KAAAC,SAAS,GAAW,EAAE,CAAC,CAAC;EAEiH;;EAEzIC,QAAQA,CAAA;IACN;IAEA,IAAIT,EAAE,GAAW,EAAE;IACnB,IAAI,CAACH,KAAK,CAACa,QAAQ,CAChBC,SAAS,CAAEC,MAAW,IAAI;MACzBZ,EAAE,GAAGY,MAAM,CAACC,GAAG,CAAC,IAAI,CAAC;MACrB,IAAI,CAACL,SAAS,GAAGR,EAAE;IACrB,CAAC,CAAC;IAEJ,IAAI,CAACJ,cAAc,CAACkB,OAAO,CAACd,EAAE,CAAC,CAACW,SAAS,CAAEI,GAAQ,IAAI;MACrD,IAAI,CAAChB,WAAW,GAAGgB,GAAG;IACxB,CAAC,CAAC;EAEJ;EAEAC,aAAaA,CAAA;IACX,IAAI,CAACpB,cAAc,CAACqB,MAAM,CAAC,IAAI,CAAClB,WAAW,CAAC,CAACY,SAAS,CAAEO,MAAM,IAAI;MAChE,OAAOA,MAAM;IACf,CAAC,CAAC;IACF,IAAI,CAACpB,MAAM,CAACqB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAC7B;;AApCW1B,oBAAoB,C;mBAApBA,oBAAoB,EAAA2B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,cAAA,GAAAP,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAE,MAAA;AAAA;AAApBnC,oBAAoB,C;QAApBA,oBAAoB;EAAAoC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCVjCd,EAAA,CAAAgB,cAAA,QAAG;MAAAhB,EAAA,CAAAiB,MAAA,0BAAmB;MAAAjB,EAAA,CAAAkB,YAAA,EAAI;;;;;SDUb7C,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}