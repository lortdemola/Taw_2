{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as moment from \"moment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"../../services/data.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"ng-apexcharts\";\nconst _c0 = [\"chart\"];\nfunction Home_SITE_div_0_div_8_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"label\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 11)(4, \"label\", 12);\n    i0.ɵɵtext(5, \"Time:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 13);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"label\", 14);\n    i0.ɵɵtext(9, \"Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"p\", 15);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const cour_r7 = ctx.$implicit;\n    const i_r8 = ctx.index;\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Course \", i_r8 + 1, \":\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate2(\"\", (tmp_1_0 = cour_r7.get(\"timeFrom\")) == null ? null : tmp_1_0.value, \" - \", (tmp_1_0 = cour_r7.get(\"timeTo\")) == null ? null : tmp_1_0.value, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate((tmp_2_0 = cour_r7.get(\"course\")) == null ? null : tmp_2_0.value);\n  }\n}\nfunction Home_SITE_div_0_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, Home_SITE_div_0_div_8_div_3_Template, 12, 4, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const course_r4 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate((tmp_0_0 = course_r4.get(\"dayOfWeek\")) == null ? null : tmp_0_0.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.former(course_r4).controls);\n  }\n}\nfunction Home_SITE_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelement(1, \"apx-chart\", 4);\n    i0.ɵɵelementStart(2, \"pre\", 5);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"json\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"pre\", 5);\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"json\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, Home_SITE_div_0_div_8_Template, 4, 2, \"div\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"series\", ctx_r0.chartOptions.series)(\"chart\", ctx_r0.chartOptions.chart)(\"fill\", ctx_r0.chartOptions.fill)(\"plotOptions\", ctx_r0.chartOptions.plotOptions)(\"xaxis\", ctx_r0.chartOptions.xaxis);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 8, ctx_r0.hmmJSON));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 10, ctx_r0.hmmJSON2));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.formArr2.controls);\n  }\n}\nfunction Home_SITE_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵelement(1, \"apx-chart\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"series\", ctx_r1.chartOptions.series)(\"chart\", ctx_r1.chartOptions.chart)(\"fill\", ctx_r1.chartOptions.fill)(\"tooltip\", ctx_r1.chartOptions.tooltip)(\"plotOptions\", ctx_r1.chartOptions.plotOptions)(\"xaxis\", ctx_r1.chartOptions.xaxis);\n  }\n}\nfunction Home_SITE_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"div\", 7)(2, \"p\");\n    i0.ɵɵtext(3, \"create new shedule\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nclass Home_SITE {\n  ngOnInit() {}\n  currentDateSimple() {\n    let s = new Date(Date.now()).getFullYear() + '-' + (new Date(Date.now()).getMonth() + 1) + '-' + new Date(Date.now()).getUTCDate();\n    return s;\n  }\n  get formArr2() {\n    return this.scheduleForm.get('scheduleEntries');\n  }\n  createContactForm() {\n    this.scheduleForm = this.formBuilder.group({\n      scheduleEntries: this.formBuilder.array([this.createScheduleEntryFormGroup()])\n    });\n  }\n  createScheduleEntryFormGroup() {\n    return this.formBuilder.group({\n      dayOfWeek: ['', Validators.required],\n      courses: this.formBuilder.array([this.createCourseFormGroup()])\n    });\n  }\n  createCourseFormGroup() {\n    return this.formBuilder.group({\n      timeFrom: ['', Validators.required],\n      timeTo: ['', Validators.required],\n      course: ['', [Validators.required, Validators.minLength(2)]]\n    });\n  }\n  former(x) {\n    return x.get('courses');\n  }\n  constructor(authService, dataService, formBuilder) {\n    this.authService = authService;\n    this.dataService = dataService;\n    this.formBuilder = formBuilder;\n    this.hmmJSON = [];\n    this.hmmJSON2 = [{\n      data: [{\n        x: \"Validation\",\n        y: [new Date(this.currentDateSimple() + \" \" + \" 09:09:00\").getTime(), new Date(this.currentDateSimple() + \" \" + \" 10:33:00\").getTime()]\n      }]\n    }];\n    this.createContactForm();\n    this.createChart();\n    this.loadSchedule();\n    //this.chart?.updateSeries(this.hmmJSON);\n  }\n\n  createChart() {\n    this.chartOptions = {\n      series: this.hmmJSON2,\n      chart: {\n        height: 450,\n        type: \"rangeBar\",\n        width: 800,\n        foreColor: 'white',\n        zoom: {\n          enabled: true,\n          type: 'x',\n          autoScaleYaxis: true\n        },\n        toolbar: {\n          tools: {\n            download: true,\n            zoom: false,\n            selection: false,\n            zoomin: false,\n            zoomout: false,\n            pan: false,\n            reset: false\n          }\n        }\n      },\n      plotOptions: {\n        bar: {\n          horizontal: true,\n          barHeight: \"80%\"\n        }\n      },\n      tooltip: {\n        theme: 'dark',\n        x: {\n          show: true,\n          format: '',\n          formatter: function (val, timestamp) {\n            return Number(moment(val).format(\"HH\")).toString() + moment(val).format(\":mm\");\n          }\n        }\n      },\n      xaxis: {\n        min: new Date(this.currentDateSimple() + \" \" + \"06:00:00\").getTime(),\n        max: new Date(this.currentDateSimple() + \" \" + \"21:00:00\").getTime(),\n        type: undefined,\n        labels: {\n          formatter: function (val, timestamp) {\n            return Number(moment(val).format(\"HH\")).toString() + moment(val).format(\":mm\");\n          }\n        }\n      },\n      fill: {\n        type: \"gradient\",\n        gradient: {\n          shade: \"light\",\n          type: \"vertical\",\n          shadeIntensity: 0.25,\n          gradientToColors: undefined,\n          inverseColors: true,\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [50, 0, 100, 100]\n        }\n      },\n      legend: {\n        show: false\n      }\n    };\n  }\n  removeDay(index) {\n    const coursesArray = this.formArr2;\n    coursesArray.removeAt(index);\n  }\n  loadSchedule() {\n    this.dataService.getScheduleByUserId(this.authService.currentUser.userId).subscribe(data => {\n      let currentDate = new Date(Date.now());\n      this.chartOptions.series.pop();\n      this.removeDay(0);\n      let temp = data;\n      this.hmm2 = temp[0];\n      let forms;\n      for (const datum of this.hmm2['scheduleEntries']) {\n        forms = this.formBuilder.group({\n          dayOfWeek: [datum['dayOfWeek'], Validators.required],\n          courses: this.formBuilder.array([])\n        });\n        for (const datum2 of datum['courses']) {\n          forms.get('courses').push(this.formBuilder.group({\n            timeFrom: [datum2['timeFrom'], Validators.required],\n            timeTo: [datum2['timeTo'], Validators.required],\n            course: [datum2['course'], Validators.required]\n          }));\n          this.chartOptions.series.push({\n            name: datum2['course'],\n            data: [{\n              x: datum['dayOfWeek'],\n              y: [new Date(currentDate.getFullYear() + '-' + (currentDate.getMonth() + 1) + '-' + currentDate.getUTCDate() + \" \" + datum2['timeFrom'] + \":00\").getTime(), new Date(currentDate.getFullYear() + '-' + (currentDate.getMonth() + 1) + '-' + currentDate.getUTCDate() + \" \" + datum2['timeTo'] + \":00\").getTime()]\n            }]\n          });\n        }\n        this.formArr2.push(forms);\n      }\n      // @ts-ignore\n      document.getElementById(\"here\").style.width = \"101px\";\n    });\n  }\n}\nHome_SITE.ɵfac = function Home_SITE_Factory(t) {\n  return new (t || Home_SITE)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.DataService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nHome_SITE.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: Home_SITE,\n  selectors: [[\"Home_SITE\"]],\n  viewQuery: function Home_SITE_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chart = _t.first);\n    }\n  },\n  decls: 3,\n  vars: 3,\n  consts: [[\"id\", \"here\", \"style\", \"height: 88vh;min-width: 100vw\", 4, \"ngIf\"], [\"id\", \"Charts\", \"style\", \"height: 88vh;min-width: 100vw;\", 4, \"ngIf\"], [\"style\", \"height: 88vh;min-width: 100vw\", 4, \"ngIf\"], [\"id\", \"here\", 2, \"height\", \"88vh\", \"min-width\", \"100vw\"], [3, \"series\", \"chart\", \"fill\", \"plotOptions\", \"xaxis\"], [2, \"color\", \"white\"], [\"class\", \"column\", 4, \"ngFor\", \"ngForOf\"], [1, \"column\"], [\"class\", \"each2\", \"id\", \"2222\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"2222\", 1, \"each2\"], [\"for\", \"cors\"], [\"id\", \"cors\", 1, \"doc\"], [\"for\", \"timeFrom\"], [\"id\", \"timeFrom\"], [\"for\", \"course\"], [\"type\", \"text\", \"id\", \"course\"], [\"id\", \"Charts\", 2, \"height\", \"88vh\", \"min-width\", \"100vw\"], [3, \"series\", \"chart\", \"fill\", \"tooltip\", \"plotOptions\", \"xaxis\"], [2, \"height\", \"88vh\", \"min-width\", \"100vw\"]],\n  template: function Home_SITE_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, Home_SITE_div_0_Template, 9, 12, \"div\", 0);\n      i0.ɵɵtemplate(1, Home_SITE_div_1_Template, 2, 6, \"div\", 1);\n      i0.ɵɵtemplate(2, Home_SITE_div_2_Template, 4, 0, \"div\", 2);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.authService.isLoggedIn() && ctx.chartOptions.series.length == 1);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.authService.isLoggedIn() && ctx.chartOptions.series.length > 1);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.authService.isLoggedIn());\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i5.ChartComponent, i4.JsonPipe],\n  styles: [\".column[_ngcontent-%COMP%]{\\r\\n  color:white;\\r\\n}\\r\\n#chart[_ngcontent-%COMP%] {\\r\\n  max-width: 650px;\\r\\n  margin: 35px auto;\\r\\n}\\r\\n.here[_ngcontent-%COMP%]{\\r\\ndisplay: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  margin-left: 200vw;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9ob21lL2hvbWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYjtBQUNBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtBQUNuQjtBQUNBO0FBQ0EsYUFBYTtFQUNYLG1CQUFtQjtFQUNuQix1QkFBdUI7RUFDdkIsa0JBQWtCO0FBQ3BCIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbHVtbntcclxuICBjb2xvcjp3aGl0ZTtcclxufVxyXG4jY2hhcnQge1xyXG4gIG1heC13aWR0aDogNjUwcHg7XHJcbiAgbWFyZ2luOiAzNXB4IGF1dG87XHJcbn1cclxuLmhlcmV7XHJcbmRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBtYXJnaW4tbGVmdDogMjAwdnc7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { Home_SITE };","map":{"version":3,"names":["Validators","moment","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","i_r8","ɵɵtextInterpolate2","tmp_1_0","cour_r7","get","value","ɵɵtextInterpolate","tmp_2_0","ɵɵtemplate","Home_SITE_div_0_div_8_div_3_Template","tmp_0_0","course_r4","ɵɵproperty","ctx_r3","former","controls","ɵɵelement","Home_SITE_div_0_div_8_Template","ctx_r0","chartOptions","series","chart","fill","plotOptions","xaxis","ɵɵpipeBind1","hmmJSON","hmmJSON2","formArr2","ctx_r1","tooltip","Home_SITE","ngOnInit","currentDateSimple","s","Date","now","getFullYear","getMonth","getUTCDate","scheduleForm","createContactForm","formBuilder","group","scheduleEntries","array","createScheduleEntryFormGroup","dayOfWeek","required","courses","createCourseFormGroup","timeFrom","timeTo","course","minLength","x","constructor","authService","dataService","data","y","getTime","createChart","loadSchedule","height","type","width","foreColor","zoom","enabled","autoScaleYaxis","toolbar","tools","download","selection","zoomin","zoomout","pan","reset","bar","horizontal","barHeight","theme","show","format","formatter","val","timestamp","Number","toString","min","max","undefined","labels","gradient","shade","shadeIntensity","gradientToColors","inverseColors","opacityFrom","opacityTo","stops","legend","removeDay","index","coursesArray","removeAt","getScheduleByUserId","currentUser","userId","subscribe","currentDate","pop","temp","hmm2","forms","datum","datum2","push","name","document","getElementById","style","ɵɵdirectiveInject","i1","AuthService","i2","DataService","i3","FormBuilder","selectors","viewQuery","Home_SITE_Query","rf","ctx","Home_SITE_div_0_Template","Home_SITE_div_1_Template","Home_SITE_div_2_Template","isLoggedIn","length"],"sources":["C:\\Users\\kacpe\\Desktop\\TAW12\\Aplikacja - plan zajęć\\Plan zajec\\PZ\\src\\app\\components\\home\\home.component.ts","C:\\Users\\kacpe\\Desktop\\TAW12\\Aplikacja - plan zajęć\\Plan zajec\\PZ\\src\\app\\components\\home\\home.component.html"],"sourcesContent":["import {Component, OnInit, ViewChild} from '@angular/core';\nimport {AuthService} from \"../../services/auth.service\";\nimport {DataService} from \"../../services/data.service\";\nimport {AbstractControl, FormArray, FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {\n  ChartComponent,\n  ApexAxisChartSeries,\n  ApexChart,\n\n  ApexPlotOptions,\n  ApexXAxis,\n  ApexFill,\n  ApexLegend, ApexDataLabels, ApexTooltip\n} from \"ng-apexcharts\";\nimport * as moment from \"moment\";\nimport {JsonpInterceptor} from \"@angular/common/http\";\n\nexport type ChartOptions = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  fill: ApexFill;\n  legend: ApexLegend;\n  xaxis: ApexXAxis;\n  tooltip: ApexTooltip;\n  plotOptions: ApexPlotOptions;\n};\n@Component({\n  selector: 'Home_SITE',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class Home_SITE implements OnInit{\n\n  ngOnInit() {\n\n\n  }\n\n\n\n// 👇️ call function every 3 seconds\n\n  scheduleForm!: FormGroup;\n  hmm2!: any ;\n  hmmJSON: any[] =[];\n  hmmJSON2: any[] =  [\n    {\n\n      data: [\n\n        {\n          x: \"Validation\",\n          y: [\n            new Date(this.currentDateSimple()+\" \"+\" 09:09:00\").getTime(),\n            new Date( this.currentDateSimple()+\" \"+\" 10:33:00\").getTime()\n          ]\n        }\n      ]\n    }\n  ] ;\n\n  @ViewChild(\"chart\", {static: false}) chart?: ChartComponent;\n  public chartOptions!: ChartOptions;\n\ncurrentDateSimple(){\n  let s:any =new Date(Date.now()).getFullYear()+'-'+(new Date(Date.now()).getMonth()+1)+'-'+new Date(Date.now()).getUTCDate();\n  return s;\n}\n  get formArr2() {\n    return this.scheduleForm.get('scheduleEntries') as FormArray;\n  }\n  createContactForm() {\n    this.scheduleForm = this.formBuilder.group({\n      scheduleEntries: this.formBuilder.array([this.createScheduleEntryFormGroup()])\n    });\n  }\n  createScheduleEntryFormGroup(): FormGroup {\n    return this.formBuilder.group({\n      dayOfWeek: ['', Validators.required],\n      courses: this.formBuilder.array([this.createCourseFormGroup()])\n    });\n  }\n  createCourseFormGroup(): FormGroup {\n    return this.formBuilder.group({\n      timeFrom: ['',Validators.required],\n      timeTo: ['',Validators.required],\n      course: ['',[Validators.required,Validators.minLength(2)]]\n    });\n  }\n\n  former(x: AbstractControl) {\n    return x.get('courses') as FormArray;\n  }\n  constructor(public authService: AuthService,private dataService: DataService,private formBuilder: FormBuilder) {\n    this.createContactForm();\n    this.createChart();\n\n    this.loadSchedule();\n\n    //this.chart?.updateSeries(this.hmmJSON);\n\n  }\n  createChart(){\n\n    this.chartOptions = {\n      series: this.hmmJSON2,\n      chart: {\n        height: 450,\n        type: \"rangeBar\",\n        width: 800,\n        foreColor:'white',\n        zoom:{\n          enabled:true,\n          type: 'x',\n          autoScaleYaxis: true,\n        },\n        toolbar:{\n          tools: { download: true, zoom: false, selection: false, zoomin: false, zoomout: false, pan: false, reset: false },\n        }\n\n      },\n      plotOptions: {\n        bar: {\n          horizontal: true,\n          barHeight: \"80%\"\n        }\n      },\n      tooltip:{\n        theme:'dark',\n        x: {\n          show: true,\n          format: '',\n          formatter : function(val, timestamp) {\n\n      return (Number(moment(val).format(\"HH\"))).toString()+ moment(val).format(\":mm\");\n        },\n        },\n      },\n      xaxis: {\n        min:new Date(this.currentDateSimple()+\" \"+\"06:00:00\").getTime(),\n        max:new Date(this.currentDateSimple()+\" \"+\"21:00:00\").getTime(),\n        type: undefined,\n        labels: {\n          formatter: function(val, timestamp) {\n\n            return (Number(moment(val).format(\"HH\"))).toString()+ moment(val).format(\":mm\");\n          }},\n      },\n\n      fill: {\n        type: \"gradient\",\n        gradient: {\n          shade: \"light\",\n          type: \"vertical\",\n          shadeIntensity: 0.25,\n          gradientToColors: undefined,\n          inverseColors: true,\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [50, 0, 100, 100]\n        }\n      },\n      legend: {\n        show:false\n      },\n\n    };\n  }\n  removeDay(index: number): void {\n    const coursesArray = this.formArr2 as FormArray;\n    coursesArray.removeAt(index);\n  }\n  loadSchedule() {\n    this.dataService.getScheduleByUserId(this.authService.currentUser.userId).subscribe(data => {\n      let currentDate: Date=new Date(Date.now());\n      this.chartOptions.series.pop()\n      this.removeDay(0);\n      let temp:any =data as JSON;\n      this.hmm2 =temp[0];\n      let forms:any;\n      for (const datum of this.hmm2['scheduleEntries']) {\n        forms = this.formBuilder.group({\n          dayOfWeek: [datum['dayOfWeek'], Validators.required],\n          courses: this.formBuilder.array([])\n        });\n        for (const datum2 of datum['courses']) {\n\n          forms.get('courses').push(this.formBuilder.group({\n            timeFrom: [datum2['timeFrom'],Validators.required],\n            timeTo: [datum2['timeTo'],Validators.required],\n            course: [datum2['course'],Validators.required],\n          }));\n\n          this.chartOptions.series.push({\n            name: datum2['course'],\n            data: [\n              {\n                x: datum['dayOfWeek'],\n                y: [\n                  new Date(currentDate.getFullYear()+'-'+(currentDate.getMonth()+1)+'-'+currentDate.getUTCDate()+\" \"+datum2['timeFrom']+\":00\").getTime(),\n                  new Date(currentDate.getFullYear()+'-'+(currentDate.getMonth()+1)+'-'+currentDate.getUTCDate()+\" \"+datum2['timeTo']+\":00\").getTime()\n                ]\n              }\n            ]\n          })\n        }\n\n        this.formArr2.push(forms);\n      }\n\n\n     // @ts-ignore\n      document.getElementById(\"here\").style.width = \"101px\";\n    });\n\n  }\n\n}\n//<pre style=\"color: white\">{{scheduleForm.value | json}}</pre>\n","\n<div id=\"here\" style=\"height: 88vh;min-width: 100vw\" *ngIf=\"authService.isLoggedIn() && chartOptions.series.length == 1\">\n  <apx-chart\n    [series]=\"chartOptions.series\"\n    [chart]=\"chartOptions.chart\"\n    [fill]=\"chartOptions.fill\"\n\n    [plotOptions]=\"chartOptions.plotOptions\"\n    [xaxis]=\"chartOptions.xaxis\"\n  ></apx-chart>\n  <pre style=\"color: white\">{{hmmJSON | json}}</pre>\n  <pre style=\"color: white\">{{hmmJSON2 | json}}</pre>\n  <div class=\"column\" *ngFor=\"let course of formArr2.controls; let x = index;\" >\n    <p  >{{course.get('dayOfWeek')?.value}}</p>\n        <div class=\"each2\" id=\"2222\" *ngFor=\"let cour of former(course).controls ; let i = index;\" >\n          <label for=\"cors\">Course {{i+1}}:</label>\n          <div id=\"cors\" class=\"doc\">\n            <label for=\"timeFrom\">Time:</label>\n\n                <p id=\"timeFrom\"  >{{cour.get('timeFrom')?.value}} - {{cour.get('timeTo')?.value}}</p>\n\n            <label for=\"course\">Name:</label>\n            <p type=\"text\" id=\"course\" >{{cour.get('course')?.value}}</p>\n          </div></div>\n    </div>\n\n</div>\n<div id=\"Charts\" style=\"height: 88vh;min-width: 100vw;\" *ngIf=\"authService.isLoggedIn() && chartOptions.series.length > 1\">\n  <apx-chart\n    [series]=\"chartOptions.series\"\n    [chart]=\"chartOptions.chart\"\n    [fill]=\"chartOptions.fill\"\n    [tooltip]=\"chartOptions.tooltip\"\n    [plotOptions]=\"chartOptions.plotOptions\"\n    [xaxis]=\"chartOptions.xaxis\"\n  ></apx-chart>\n\n\n\n</div>\n<div  style=\"height: 88vh;min-width: 100vw\" *ngIf=\"!authService.isLoggedIn()\">\n\n  <div class=\"column\" >\n   <p>create new  shedule</p>\n  </div>\n\n</div>\n"],"mappings":"AAGA,SAA4DA,UAAU,QAAO,gBAAgB;AAW7F,OAAO,KAAKC,MAAM,MAAM,QAAQ;;;;;;;;;;ICAxBC,EAAA,CAAAC,cAAA,aAA4F;IACxED,EAAA,CAAAE,MAAA,GAAe;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IACzCH,EAAA,CAAAC,cAAA,cAA2B;IACHD,EAAA,CAAAE,MAAA,YAAK;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IAE/BH,EAAA,CAAAC,cAAA,YAAmB;IAAAD,EAAA,CAAAE,MAAA,GAA+D;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAE1FH,EAAA,CAAAC,cAAA,gBAAoB;IAAAD,EAAA,CAAAE,MAAA,YAAK;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IACjCH,EAAA,CAAAC,cAAA,aAA4B;IAAAD,EAAA,CAAAE,MAAA,IAA6B;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;;;;IAP7CH,EAAA,CAAAI,SAAA,GAAe;IAAfJ,EAAA,CAAAK,kBAAA,YAAAC,IAAA,UAAe;IAIRN,EAAA,CAAAI,SAAA,GAA+D;IAA/DJ,EAAA,CAAAO,kBAAA,MAAAC,OAAA,GAAAC,OAAA,CAAAC,GAAA,+BAAAF,OAAA,CAAAG,KAAA,UAAAH,OAAA,GAAAC,OAAA,CAAAC,GAAA,6BAAAF,OAAA,CAAAG,KAAA,KAA+D;IAG1DX,EAAA,CAAAI,SAAA,GAA6B;IAA7BJ,EAAA,CAAAY,iBAAA,EAAAC,OAAA,GAAAJ,OAAA,CAAAC,GAAA,6BAAAG,OAAA,CAAAF,KAAA,CAA6B;;;;;IAVnEX,EAAA,CAAAC,cAAA,aAA8E;IACvED,EAAA,CAAAE,MAAA,GAAkC;IAAAF,EAAA,CAAAG,YAAA,EAAI;IACvCH,EAAA,CAAAc,UAAA,IAAAC,oCAAA,kBASc;IAClBf,EAAA,CAAAG,YAAA,EAAM;;;;;;IAXDH,EAAA,CAAAI,SAAA,GAAkC;IAAlCJ,EAAA,CAAAY,iBAAA,EAAAI,OAAA,GAAAC,SAAA,CAAAP,GAAA,gCAAAM,OAAA,CAAAL,KAAA,CAAkC;IACWX,EAAA,CAAAI,SAAA,GAA6B;IAA7BJ,EAAA,CAAAkB,UAAA,YAAAC,MAAA,CAAAC,MAAA,CAAAH,SAAA,EAAAI,QAAA,CAA6B;;;;;IAbnFrB,EAAA,CAAAC,cAAA,aAAyH;IACvHD,EAAA,CAAAsB,SAAA,mBAOa;IACbtB,EAAA,CAAAC,cAAA,aAA0B;IAAAD,EAAA,CAAAE,MAAA,GAAkB;;IAAAF,EAAA,CAAAG,YAAA,EAAM;IAClDH,EAAA,CAAAC,cAAA,aAA0B;IAAAD,EAAA,CAAAE,MAAA,GAAmB;;IAAAF,EAAA,CAAAG,YAAA,EAAM;IACnDH,EAAA,CAAAc,UAAA,IAAAS,8BAAA,iBAYQ;IAEVvB,EAAA,CAAAG,YAAA,EAAM;;;;IAvBFH,EAAA,CAAAI,SAAA,GAA8B;IAA9BJ,EAAA,CAAAkB,UAAA,WAAAM,MAAA,CAAAC,YAAA,CAAAC,MAAA,CAA8B,UAAAF,MAAA,CAAAC,YAAA,CAAAE,KAAA,UAAAH,MAAA,CAAAC,YAAA,CAAAG,IAAA,iBAAAJ,MAAA,CAAAC,YAAA,CAAAI,WAAA,WAAAL,MAAA,CAAAC,YAAA,CAAAK,KAAA;IAON9B,EAAA,CAAAI,SAAA,GAAkB;IAAlBJ,EAAA,CAAAY,iBAAA,CAAAZ,EAAA,CAAA+B,WAAA,OAAAP,MAAA,CAAAQ,OAAA,EAAkB;IAClBhC,EAAA,CAAAI,SAAA,GAAmB;IAAnBJ,EAAA,CAAAY,iBAAA,CAAAZ,EAAA,CAAA+B,WAAA,QAAAP,MAAA,CAAAS,QAAA,EAAmB;IACNjC,EAAA,CAAAI,SAAA,GAAsB;IAAtBJ,EAAA,CAAAkB,UAAA,YAAAM,MAAA,CAAAU,QAAA,CAAAb,QAAA,CAAsB;;;;;IAe/DrB,EAAA,CAAAC,cAAA,cAA2H;IACzHD,EAAA,CAAAsB,SAAA,oBAOa;IAIftB,EAAA,CAAAG,YAAA,EAAM;;;;IAVFH,EAAA,CAAAI,SAAA,GAA8B;IAA9BJ,EAAA,CAAAkB,UAAA,WAAAiB,MAAA,CAAAV,YAAA,CAAAC,MAAA,CAA8B,UAAAS,MAAA,CAAAV,YAAA,CAAAE,KAAA,UAAAQ,MAAA,CAAAV,YAAA,CAAAG,IAAA,aAAAO,MAAA,CAAAV,YAAA,CAAAW,OAAA,iBAAAD,MAAA,CAAAV,YAAA,CAAAI,WAAA,WAAAM,MAAA,CAAAV,YAAA,CAAAK,KAAA;;;;;IAWlC9B,EAAA,CAAAC,cAAA,cAA8E;IAGxED,EAAA,CAAAE,MAAA,yBAAmB;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;ADjB7B,MAKakC,SAAS;EAEpBC,QAAQA,CAAA,GAGR;EA4BFC,iBAAiBA,CAAA;IACf,IAAIC,CAAC,GAAM,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,EAAE,CAAC,CAACC,WAAW,EAAE,GAAC,GAAG,IAAE,IAAIF,IAAI,CAACA,IAAI,CAACC,GAAG,EAAE,CAAC,CAACE,QAAQ,EAAE,GAAC,CAAC,CAAC,GAAC,GAAG,GAAC,IAAIH,IAAI,CAACA,IAAI,CAACC,GAAG,EAAE,CAAC,CAACG,UAAU,EAAE;IAC3H,OAAOL,CAAC;EACV;EACE,IAAIN,QAAQA,CAAA;IACV,OAAO,IAAI,CAACY,YAAY,CAACpC,GAAG,CAAC,iBAAiB,CAAc;EAC9D;EACAqC,iBAAiBA,CAAA;IACf,IAAI,CAACD,YAAY,GAAG,IAAI,CAACE,WAAW,CAACC,KAAK,CAAC;MACzCC,eAAe,EAAE,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC,CAAC,IAAI,CAACC,4BAA4B,EAAE,CAAC;KAC9E,CAAC;EACJ;EACAA,4BAA4BA,CAAA;IAC1B,OAAO,IAAI,CAACJ,WAAW,CAACC,KAAK,CAAC;MAC5BI,SAAS,EAAE,CAAC,EAAE,EAAEvD,UAAU,CAACwD,QAAQ,CAAC;MACpCC,OAAO,EAAE,IAAI,CAACP,WAAW,CAACG,KAAK,CAAC,CAAC,IAAI,CAACK,qBAAqB,EAAE,CAAC;KAC/D,CAAC;EACJ;EACAA,qBAAqBA,CAAA;IACnB,OAAO,IAAI,CAACR,WAAW,CAACC,KAAK,CAAC;MAC5BQ,QAAQ,EAAE,CAAC,EAAE,EAAC3D,UAAU,CAACwD,QAAQ,CAAC;MAClCI,MAAM,EAAE,CAAC,EAAE,EAAC5D,UAAU,CAACwD,QAAQ,CAAC;MAChCK,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC7D,UAAU,CAACwD,QAAQ,EAACxD,UAAU,CAAC8D,SAAS,CAAC,CAAC,CAAC,CAAC;KAC1D,CAAC;EACJ;EAEAxC,MAAMA,CAACyC,CAAkB;IACvB,OAAOA,CAAC,CAACnD,GAAG,CAAC,SAAS,CAAc;EACtC;EACAoD,YAAmBC,WAAwB,EAASC,WAAwB,EAAShB,WAAwB;IAA1F,KAAAe,WAAW,GAAXA,WAAW;IAAsB,KAAAC,WAAW,GAAXA,WAAW;IAAsB,KAAAhB,WAAW,GAAXA,WAAW;IAjDhG,KAAAhB,OAAO,GAAS,EAAE;IAClB,KAAAC,QAAQ,GAAW,CACjB;MAEEgC,IAAI,EAAE,CAEJ;QACEJ,CAAC,EAAE,YAAY;QACfK,CAAC,EAAE,CACD,IAAIzB,IAAI,CAAC,IAAI,CAACF,iBAAiB,EAAE,GAAC,GAAG,GAAC,WAAW,CAAC,CAAC4B,OAAO,EAAE,EAC5D,IAAI1B,IAAI,CAAE,IAAI,CAACF,iBAAiB,EAAE,GAAC,GAAG,GAAC,WAAW,CAAC,CAAC4B,OAAO,EAAE;OAEhE;KAEJ,CACF;IAmCC,IAAI,CAACpB,iBAAiB,EAAE;IACxB,IAAI,CAACqB,WAAW,EAAE;IAElB,IAAI,CAACC,YAAY,EAAE;IAEnB;EAEF;;EACAD,WAAWA,CAAA;IAET,IAAI,CAAC3C,YAAY,GAAG;MAClBC,MAAM,EAAE,IAAI,CAACO,QAAQ;MACrBN,KAAK,EAAE;QACL2C,MAAM,EAAE,GAAG;QACXC,IAAI,EAAE,UAAU;QAChBC,KAAK,EAAE,GAAG;QACVC,SAAS,EAAC,OAAO;QACjBC,IAAI,EAAC;UACHC,OAAO,EAAC,IAAI;UACZJ,IAAI,EAAE,GAAG;UACTK,cAAc,EAAE;SACjB;QACDC,OAAO,EAAC;UACNC,KAAK,EAAE;YAAEC,QAAQ,EAAE,IAAI;YAAEL,IAAI,EAAE,KAAK;YAAEM,SAAS,EAAE,KAAK;YAAEC,MAAM,EAAE,KAAK;YAAEC,OAAO,EAAE,KAAK;YAAEC,GAAG,EAAE,KAAK;YAAEC,KAAK,EAAE;UAAK;;OAGlH;MACDvD,WAAW,EAAE;QACXwD,GAAG,EAAE;UACHC,UAAU,EAAE,IAAI;UAChBC,SAAS,EAAE;;OAEd;MACDnD,OAAO,EAAC;QACNoD,KAAK,EAAC,MAAM;QACZ3B,CAAC,EAAE;UACD4B,IAAI,EAAE,IAAI;UACVC,MAAM,EAAE,EAAE;UACVC,SAAS,EAAG,SAAAA,CAASC,GAAG,EAAEC,SAAS;YAEvC,OAAQC,MAAM,CAAC/F,MAAM,CAAC6F,GAAG,CAAC,CAACF,MAAM,CAAC,IAAI,CAAC,CAAC,CAAEK,QAAQ,EAAE,GAAEhG,MAAM,CAAC6F,GAAG,CAAC,CAACF,MAAM,CAAC,KAAK,CAAC;UAC7E;;OAED;MACD5D,KAAK,EAAE;QACLkE,GAAG,EAAC,IAAIvD,IAAI,CAAC,IAAI,CAACF,iBAAiB,EAAE,GAAC,GAAG,GAAC,UAAU,CAAC,CAAC4B,OAAO,EAAE;QAC/D8B,GAAG,EAAC,IAAIxD,IAAI,CAAC,IAAI,CAACF,iBAAiB,EAAE,GAAC,GAAG,GAAC,UAAU,CAAC,CAAC4B,OAAO,EAAE;QAC/DI,IAAI,EAAE2B,SAAS;QACfC,MAAM,EAAE;UACNR,SAAS,EAAE,SAAAA,CAASC,GAAG,EAAEC,SAAS;YAEhC,OAAQC,MAAM,CAAC/F,MAAM,CAAC6F,GAAG,CAAC,CAACF,MAAM,CAAC,IAAI,CAAC,CAAC,CAAEK,QAAQ,EAAE,GAAEhG,MAAM,CAAC6F,GAAG,CAAC,CAACF,MAAM,CAAC,KAAK,CAAC;UACjF;;OACH;MAED9D,IAAI,EAAE;QACJ2C,IAAI,EAAE,UAAU;QAChB6B,QAAQ,EAAE;UACRC,KAAK,EAAE,OAAO;UACd9B,IAAI,EAAE,UAAU;UAChB+B,cAAc,EAAE,IAAI;UACpBC,gBAAgB,EAAEL,SAAS;UAC3BM,aAAa,EAAE,IAAI;UACnBC,WAAW,EAAE,CAAC;UACdC,SAAS,EAAE,CAAC;UACZC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG;;OAE1B;MACDC,MAAM,EAAE;QACNnB,IAAI,EAAC;;KAGR;EACH;EACAoB,SAASA,CAACC,KAAa;IACrB,MAAMC,YAAY,GAAG,IAAI,CAAC7E,QAAqB;IAC/C6E,YAAY,CAACC,QAAQ,CAACF,KAAK,CAAC;EAC9B;EACAzC,YAAYA,CAAA;IACV,IAAI,CAACL,WAAW,CAACiD,mBAAmB,CAAC,IAAI,CAAClD,WAAW,CAACmD,WAAW,CAACC,MAAM,CAAC,CAACC,SAAS,CAACnD,IAAI,IAAG;MACzF,IAAIoD,WAAW,GAAO,IAAI5E,IAAI,CAACA,IAAI,CAACC,GAAG,EAAE,CAAC;MAC1C,IAAI,CAACjB,YAAY,CAACC,MAAM,CAAC4F,GAAG,EAAE;MAC9B,IAAI,CAACT,SAAS,CAAC,CAAC,CAAC;MACjB,IAAIU,IAAI,GAAMtD,IAAY;MAC1B,IAAI,CAACuD,IAAI,GAAED,IAAI,CAAC,CAAC,CAAC;MAClB,IAAIE,KAAS;MACb,KAAK,MAAMC,KAAK,IAAI,IAAI,CAACF,IAAI,CAAC,iBAAiB,CAAC,EAAE;QAChDC,KAAK,GAAG,IAAI,CAACzE,WAAW,CAACC,KAAK,CAAC;UAC7BI,SAAS,EAAE,CAACqE,KAAK,CAAC,WAAW,CAAC,EAAE5H,UAAU,CAACwD,QAAQ,CAAC;UACpDC,OAAO,EAAE,IAAI,CAACP,WAAW,CAACG,KAAK,CAAC,EAAE;SACnC,CAAC;QACF,KAAK,MAAMwE,MAAM,IAAID,KAAK,CAAC,SAAS,CAAC,EAAE;UAErCD,KAAK,CAAC/G,GAAG,CAAC,SAAS,CAAC,CAACkH,IAAI,CAAC,IAAI,CAAC5E,WAAW,CAACC,KAAK,CAAC;YAC/CQ,QAAQ,EAAE,CAACkE,MAAM,CAAC,UAAU,CAAC,EAAC7H,UAAU,CAACwD,QAAQ,CAAC;YAClDI,MAAM,EAAE,CAACiE,MAAM,CAAC,QAAQ,CAAC,EAAC7H,UAAU,CAACwD,QAAQ,CAAC;YAC9CK,MAAM,EAAE,CAACgE,MAAM,CAAC,QAAQ,CAAC,EAAC7H,UAAU,CAACwD,QAAQ;WAC9C,CAAC,CAAC;UAEH,IAAI,CAAC7B,YAAY,CAACC,MAAM,CAACkG,IAAI,CAAC;YAC5BC,IAAI,EAAEF,MAAM,CAAC,QAAQ,CAAC;YACtB1D,IAAI,EAAE,CACJ;cACEJ,CAAC,EAAE6D,KAAK,CAAC,WAAW,CAAC;cACrBxD,CAAC,EAAE,CACD,IAAIzB,IAAI,CAAC4E,WAAW,CAAC1E,WAAW,EAAE,GAAC,GAAG,IAAE0E,WAAW,CAACzE,QAAQ,EAAE,GAAC,CAAC,CAAC,GAAC,GAAG,GAACyE,WAAW,CAACxE,UAAU,EAAE,GAAC,GAAG,GAAC8E,MAAM,CAAC,UAAU,CAAC,GAAC,KAAK,CAAC,CAACxD,OAAO,EAAE,EACtI,IAAI1B,IAAI,CAAC4E,WAAW,CAAC1E,WAAW,EAAE,GAAC,GAAG,IAAE0E,WAAW,CAACzE,QAAQ,EAAE,GAAC,CAAC,CAAC,GAAC,GAAG,GAACyE,WAAW,CAACxE,UAAU,EAAE,GAAC,GAAG,GAAC8E,MAAM,CAAC,QAAQ,CAAC,GAAC,KAAK,CAAC,CAACxD,OAAO,EAAE;aAEvI;WAEJ,CAAC;;QAGJ,IAAI,CAACjC,QAAQ,CAAC0F,IAAI,CAACH,KAAK,CAAC;;MAI5B;MACCK,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAACC,KAAK,CAACxD,KAAK,GAAG,OAAO;IACvD,CAAC,CAAC;EAEJ;;AAxLWnC,SAAS,C;mBAATA,SAAS,EAAArC,EAAA,CAAAiI,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAnI,EAAA,CAAAiI,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAArI,EAAA,CAAAiI,iBAAA,CAAAK,EAAA,CAAAC,WAAA;AAAA;AAATlG,SAAS,C;QAATA,SAAS;EAAAmG,SAAA;EAAAC,SAAA,WAAAC,gBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;;;;;;;;;;;;MC9BtB3I,EAAA,CAAAc,UAAA,IAAA+H,wBAAA,kBAyBM;MACN7I,EAAA,CAAAc,UAAA,IAAAgI,wBAAA,iBAYM;MACN9I,EAAA,CAAAc,UAAA,IAAAiI,wBAAA,iBAMM;;;MA7CgD/I,EAAA,CAAAkB,UAAA,SAAA0H,GAAA,CAAA7E,WAAA,CAAAiF,UAAA,MAAAJ,GAAA,CAAAnH,YAAA,CAAAC,MAAA,CAAAuH,MAAA,MAAiE;MA0B9DjJ,EAAA,CAAAI,SAAA,GAAgE;MAAhEJ,EAAA,CAAAkB,UAAA,SAAA0H,GAAA,CAAA7E,WAAA,CAAAiF,UAAA,MAAAJ,GAAA,CAAAnH,YAAA,CAAAC,MAAA,CAAAuH,MAAA,KAAgE;MAa5EjJ,EAAA,CAAAI,SAAA,GAA+B;MAA/BJ,EAAA,CAAAkB,UAAA,UAAA0H,GAAA,CAAA7E,WAAA,CAAAiF,UAAA,GAA+B;;;;;;SDT/D3G,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}