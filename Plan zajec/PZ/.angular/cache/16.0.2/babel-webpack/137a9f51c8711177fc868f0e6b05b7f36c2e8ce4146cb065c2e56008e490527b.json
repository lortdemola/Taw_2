{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass SpinPipe {\n  transform() {\n    // Generate random off-white color\n    const min = 220; // Minimum RGB value\n    const range = 35; // Range of variation\n    const red = min + Math.floor(Math.random() * range);\n    const green = min + Math.floor(Math.random() * range);\n    const blue = min + Math.floor(Math.random() * range);\n    return `rgb(${red}, ${green}, ${blue})`;\n  }\n}\nSpinPipe.ɵfac = function SpinPipe_Factory(t) {\n  return new (t || SpinPipe)();\n};\nSpinPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"spin\",\n  type: SpinPipe,\n  pure: true\n});\nexport { SpinPipe };","map":{"version":3,"names":["SpinPipe","transform","min","range","red","Math","floor","random","green","blue","pure"],"sources":["E:\\Taw\\blog11\\blog\\blog\\src\\app\\pipes\\spin.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'spin'\n})\nexport class SpinPipe implements PipeTransform {\n\n  transform(): string {\n    // Generate random off-white color\n    const min = 220; // Minimum RGB value\n    const range = 35; // Range of variation\n    const red = min + Math.floor(Math.random() * range);\n    const green = min + Math.floor(Math.random() * range);\n    const blue = min + Math.floor(Math.random() * range);\n\n    return `rgb(${red}, ${green}, ${blue})`;\n  }\n\n}\n"],"mappings":";AAEA,MAGaA,QAAQ;EAEnBC,SAASA,CAAA;IACP;IACA,MAAMC,GAAG,GAAG,GAAG,CAAC,CAAC;IACjB,MAAMC,KAAK,GAAG,EAAE,CAAC,CAAC;IAClB,MAAMC,GAAG,GAAGF,GAAG,GAAGG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGJ,KAAK,CAAC;IACnD,MAAMK,KAAK,GAAGN,GAAG,GAAGG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGJ,KAAK,CAAC;IACrD,MAAMM,IAAI,GAAGP,GAAG,GAAGG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGJ,KAAK,CAAC;IAEpD,OAAO,OAAOC,GAAG,KAAKI,KAAK,KAAKC,IAAI,GAAG;EACzC;;AAXWT,QAAQ,C;mBAARA,QAAQ;AAAA;AAARA,QAAQ,C;;QAARA,QAAQ;EAAAU,IAAA;AAAA;SAARV,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}