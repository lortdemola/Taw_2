{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"../../services/data.service\";\nimport * as i3 from \"@angular/forms\";\nclass Home_SITE {\n  get formArr2() {\n    return this.scheduleForm.get('scheduleEntries');\n  }\n  createContactForm() {\n    this.scheduleForm = this.formBuilder.group({\n      scheduleEntries: this.formBuilder.array([this.createScheduleEntryFormGroup()])\n    });\n  }\n  createScheduleEntryFormGroup() {\n    return this.formBuilder.group({\n      dayOfWeek: ['', Validators.required],\n      courses: this.formBuilder.array([this.createCourseFormGroup()])\n    });\n  }\n  createCourseFormGroup() {\n    return this.formBuilder.group({\n      timeFrom: ['', Validators.required],\n      timeTo: ['', Validators.required],\n      course: ['', [Validators.required, Validators.minLength(2)]]\n    });\n  }\n  ngOnInit() {}\n  constructor(authService, dataService, formBuilder) {\n    this.authService = authService;\n    this.dataService = dataService;\n    this.formBuilder = formBuilder;\n    this.createContactForm();\n    this.loadSchedule();\n  }\n  removeDay(index) {\n    const coursesArray = this.formArr2;\n    coursesArray.removeAt(index);\n  }\n  loadSchedule() {\n    this.dataService.getScheduleByUserId(this.authService.currentUser.userId).subscribe(data => {\n      // console.log(this.scheduleForm);\n      this.removeDay(0);\n      let temp = data;\n      this.hmm2 = temp[0];\n      let forms;\n      for (const datum of this.hmm2['scheduleEntries']) {\n        forms = this.formBuilder.group({\n          dayOfWeek: [datum['dayOfWeek'], Validators.required],\n          courses: this.formBuilder.array([])\n        });\n        for (const datum2 of datum['courses']) {\n          forms.get('courses').push(this.formBuilder.group({\n            timeFrom: [datum2['timeFrom'], Validators.required],\n            timeTo: [datum2['timeTo'], Validators.required],\n            course: [datum2['course'], Validators.required]\n          }));\n        }\n        this.formArr2.push(forms);\n      }\n    });\n  }\n}\nHome_SITE.ɵfac = function Home_SITE_Factory(t) {\n  return new (t || Home_SITE)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.DataService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nHome_SITE.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: Home_SITE,\n  selectors: [[\"Home_SITE\"]],\n  decls: 2,\n  vars: 0,\n  template: function Home_SITE_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"home works 222!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { Home_SITE };","map":{"version":3,"names":["Validators","Home_SITE","formArr2","scheduleForm","get","createContactForm","formBuilder","group","scheduleEntries","array","createScheduleEntryFormGroup","dayOfWeek","required","courses","createCourseFormGroup","timeFrom","timeTo","course","minLength","ngOnInit","constructor","authService","dataService","loadSchedule","removeDay","index","coursesArray","removeAt","getScheduleByUserId","currentUser","userId","subscribe","data","temp","hmm2","forms","datum","datum2","push","i0","ɵɵdirectiveInject","i1","AuthService","i2","DataService","i3","FormBuilder","selectors","decls","vars","template","Home_SITE_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\kacpe\\Desktop\\TAW12\\Aplikacja - plan zajęć\\Plan zajec\\PZ\\src\\app\\components\\home\\home.component.ts","C:\\Users\\kacpe\\Desktop\\TAW12\\Aplikacja - plan zajęć\\Plan zajec\\PZ\\src\\app\\components\\home\\home.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {AuthService} from \"../../services/auth.service\";\nimport {DataService} from \"../../services/data.service\";\nimport {FormArray, FormBuilder, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'Home_SITE',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class Home_SITE implements OnInit{\n  scheduleForm!: FormGroup;\n  hmm2!: any ;\n  get formArr2() {\n    return this.scheduleForm.get('scheduleEntries') as FormArray;\n  }\n  createContactForm() {\n    this.scheduleForm = this.formBuilder.group({\n      scheduleEntries: this.formBuilder.array([this.createScheduleEntryFormGroup()])\n    });\n  }\n  createScheduleEntryFormGroup(): FormGroup {\n    return this.formBuilder.group({\n      dayOfWeek: ['', Validators.required],\n      courses: this.formBuilder.array([this.createCourseFormGroup()])\n    });\n  }\n  createCourseFormGroup(): FormGroup {\n    return this.formBuilder.group({\n      timeFrom: ['',Validators.required],\n      timeTo: ['',Validators.required],\n      course: ['',[Validators.required,Validators.minLength(2)]]\n    });\n  }\n  ngOnInit(): void {\n\n  }\n\n  constructor(public authService: AuthService,private dataService: DataService,private formBuilder: FormBuilder) {\n    this.createContactForm();\n    this.loadSchedule();\n  }\n  removeDay(index: number): void {\n    const coursesArray = this.formArr2 as FormArray;\n    coursesArray.removeAt(index);\n  }\n  loadSchedule() {\n    this.dataService.getScheduleByUserId(this.authService.currentUser.userId).subscribe(data => {\n\n      // console.log(this.scheduleForm);\n      this.removeDay(0);\n      let temp:any =data as JSON;\n      this.hmm2 =temp[0];\n      let forms:any;\n      for (const datum of this.hmm2['scheduleEntries']) {\n        forms = this.formBuilder.group({\n          dayOfWeek: [datum['dayOfWeek'], Validators.required],\n          courses: this.formBuilder.array([])\n        });\n        for (const datum2 of datum['courses']) {\n          forms.get('courses').push(this.formBuilder.group({\n            timeFrom: [datum2['timeFrom'],Validators.required],\n            timeTo: [datum2['timeTo'],Validators.required],\n            course: [datum2['course'],Validators.required],\n          }));\n        }\n\n        this.formArr2.push(forms);\n      }\n\n}\n","<p>home works 222!</p>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}